0001   0000             	device zxspectrum48
0002   0000             
0003   0000             
0004   0000             	org 32000-768
0005   7A00             ; Game engine code --------------------------------------------------------------
0006   7A00             
0007   7A00             ; Arcade Game Designer.
0008   7A00             ; (C) 2008 - 2018 Jonathan Cauldwell.
0009   7A00             ; ZX Spectrum Engine v0.6.
0010   7A00             
0011   7A00             ; Global definitions.
0012   7A00             
0013   7A00             SIMASK equ 248             ; SPRITEINK mask - allows users to set BRIGHT/FLASH/CLUT as well.
0014   7A00             SHRAPN equ 63926           ; shrapnel table, just below screen address table.
0015   7A00             SCADTB equ 64256           ; screen address table, just below map.
0016   7A00             MAP    equ 64768           ; properties map buffer.
0017   7A00             loopa  equ 23681           ; loop counter system variable.
0018   7A00             loopb  equ 23728           ; loop counter system variable.
0019   7A00             loopc  equ 23729           ; loop counter system variable.
0020   7A00             
0021   7A00             ; Block characteristics.
0022   7A00             
0023   7A00             PLATFM equ 1               ; platform.
0024   7A00             WALL   equ PLATFM + 1      ; solid wall.
0025   7A00             LADDER equ WALL + 1        ; ladder.
0026   7A00             FODDER equ LADDER + 1      ; fodder block.
0027   7A00             DEADLY equ FODDER + 1      ; deadly block.
0028   7A00             CUSTOM equ DEADLY + 1      ; custom block.
0029   7A00             COLECT equ CUSTOM + 1      ; collectable block.
0030   7A00             NUMTYP equ COLECT + 1      ; number of types.
0031   7A00             
0032   7A00             ; Sprites.
0033   7A00             
0034   7A00             NUMSPR equ 12              ; number of sprites.
0035   7A00             TABSIZ equ 17              ; size of each entry.
0036   7A00             SPRBUF equ NUMSPR * TABSIZ ; size of entire table.
0037   7A00             NMESIZ equ 4               ; bytes stored in nmetab for each sprite.
0038   7A00             X      equ 8               ; new x coordinate of sprite.
0039   7A00             Y      equ X + 1           ; new y coordinate of sprite.
0040   7A00             PAM1ST equ 5               ; first sprite parameter, old x (ix+5).
0041   7A00             
0042   7A00             ; Particle engine.
0043   7A00             
0044   7A00             NUMSHR equ 55              ; pieces of shrapnel.
0045   7A00             SHRSIZ equ 6               ; bytes per particle.
0046   7A00             
0047   7A00             
0048   7A00             ; Game starts here.  No reason why screen data couldn't go between start and contrl to put them in
0049   7A00             ; contended RAM, leaving the code and rest of the game in uncontended memory at 32768 and beyond.
0050   7A00             
0051   7A00                    org 32000
0052   7D00             start  equ $
0053   7D00             
0054   7D00             ; Set up the font.
0055   7D00             
0056   7D00 21 D7 E6           ld hl,font-256      ; address of font.
0057   7D03 22 36 5C           ld (23606),hl       ; set up game font.
0058   7D06             
0059   7D06 C3 8C 83           jp game             ; start the game.
0060   7D09             
0061   7D09 00          joyval defb 0              ; joystick reading.
0062   7D0A 00          frmno  defb 0              ; selected frame.
0063   7D0B             
0064   7D0B             ; Don't change the order of these four.  Menu routine relies on winlft following wintop.
0065   7D0B             
0066   7D0B 00          wintop defb WINDOWTOP      ; top of window.
0067   7D0C 02          winlft defb WINDOWLFT      ; left edge.
0068   7D0D 14          winhgt defb WINDOWHGT      ; window height.
0069   7D0E 1C          winwid defb WINDOWWID      ; window width.
0070   7D0F             
0071   7D0F 14          numob  defb NUMOBJ         ; number of objects in game.
0072   7D10             
0073   7D10             ; Variables start here.
0074   7D10             ; Pixel versions of wintop, winlft, winhgt, winwid.
0075   7D10             
0076   7D10 00          wntopx defb (8 * WINDOWTOP)
0077   7D11 10          wnlftx defb (8 * WINDOWLFT)
0078   7D12 90          wnbotx defb ((WINDOWTOP * 8) + (WINDOWHGT * 8) - 16)
0079   7D13 E0          wnrgtx defb ((WINDOWLFT * 8) + (WINDOWWID * 8) - 16)
0080   7D14 00          scno   defb 0              ; present screen number.
0081   7D15 03          numlif defb 3              ; number of lives.
0082   7D16 00          vara   defb 0              ; general-purpose variable.
0083   7D17 00          varb   defb 0              ; general-purpose variable.
0084   7D18 00          varc   defb 0              ; general-purpose variable.
0085   7D19 00          vard   defb 0              ; general-purpose variable.
0086   7D1A 00          vare   defb 0              ; general-purpose variable.
0087   7D1B 00          varf   defb 0              ; general-purpose variable.
0088   7D1C 00          varg   defb 0              ; general-purpose variable.
0089   7D1D 00          varh   defb 0              ; general-purpose variable.
0090   7D1E 00          vari   defb 0              ; general-purpose variable.
0091   7D1F 00          varj   defb 0              ; general-purpose variable.
0092   7D20 00          vark   defb 0              ; general-purpose variable.
0093   7D21 00          varl   defb 0              ; general-purpose variable.
0094   7D22 00          varm   defb 0              ; general-purpose variable.
0095   7D23 00          varn   defb 0              ; general-purpose variable.
0096   7D24 00          varo   defb 0              ; general-purpose variable.
0097   7D25 00          varp   defb 0              ; general-purpose variable.
0098   7D26 00          varq   defb 0              ; general-purpose variable.
0099   7D27 00          varr   defb 0              ; general-purpose variable.
0100   7D28 00          vars   defb 0              ; general-purpose variable.
0101   7D29 00          vart   defb 0              ; general-purpose variable.
0102   7D2A 00          varu   defb 0              ; general-purpose variable.
0103   7D2B 00          varv   defb 0              ; general-purpose variable.
0104   7D2C 00          varw   defb 0              ; general-purpose variable.
0105   7D2D 00          varz   defb 0              ; general-purpose variable.
0106   7D2E 00          contrl defb 0              ; control, 0 = keyboard, 1 = Kempston, 2 = Sinclair, 3 = Mouse.
0107   7D2F 00          charx  defb 0              ; cursor x position.
0108   7D30 00          chary  defb 0              ; cursor y position.
0109   7D31 00          clock  defb 0              ; last clock reading.
0110   7D32 FF          varrnd defb 255            ; last random number.
0111   7D33 FE          varobj defb 254            ; last object number.
0112   7D34 FF          varopt defb 255            ; last option chosen from menu.
0113   7D35 FF          varblk defb 255            ; block type.
0114   7D36 00          nexlev defb 0              ; next level flag.
0115   7D37 00          restfl defb 0              ; restart screen flag.
0116   7D38 00          deadf  defb 0              ; dead flag.
0117   7D39 00          gamwon defb 0              ; game won flag.
0118   7D3A 00          dispx  defb 0              ; cursor x position.
0119   7D3B 00          dispy  defb 0              ; cursor y position.
0120   7D3C             
0121   7D3C             ; Make sure pointers are arranged in the same order as the data itself.
0122   7D3C             
0123   7D3C 02 C0       frmptr defw frmlst         ; sprite frames.
0124   7D3E 6C A9       blkptr defw chgfx          ; block graphics.
0125   7D40 E4 AB       colptr defw bcol           ; address of char colours.
0126   7D42 33 AC       proptr defw bprop          ; address of char properties.
0127   7D44 1A C0       scrptr defw scdat          ; address of screens.
0128   7D46 AF E2       nmeptr defw nmedat         ; enemy start positions.
0129   7D48             
0130   7D48             ; Assorted game routines which can go in contended memory.
0131   7D48             
0132   7D48             ; Modify for inventory.
0133   7D48             
0134   7D48 21 C8 7E    minve  ld hl,invdis        ; routine address.
0135   7D4B 22 D3 7D           ld (mod0+1),hl      ; set up menu routine.
0136   7D4E 22 79 7D           ld (mod2+1),hl      ; set up count routine.
0137   7D51 21 D5 7E           ld hl,fopt          ; find option from available objects.
0138   7D54 22 5B 7E           ld (mod1+1),hl      ; set up routine.
0139   7D57 18 0F              jr dbox             ; do menu routine.
0140   7D59             
0141   7D59             ; Modify for menu.
0142   7D59             
0143   7D59 21 B1 8A    mmenu  ld hl,always        ; routine address.
0144   7D5C 22 D3 7D           ld (mod0+1),hl      ; set up routine.
0145   7D5F 22 79 7D           ld (mod2+1),hl      ; set up count routine.
0146   7D62 21 8A 7E           ld hl,fstd          ; standard option selection.
0147   7D65 22 5B 7E           ld (mod1+1),hl      ; set up routine.
0148   7D68             
0149   7D68             ; Drop through into box routine.
0150   7D68             
0151   7D68             ; Work out size of box for message or menu.
0152   7D68             
0153   7D68             ;dbox   ld hl,nummsg        ; total messages.
0154   7D68             ;       cp (hl)             ; does this one exist?
0155   7D68             ;       ret nc              ; no, nothing to display.
0156   7D68 21 3E A5    dbox   ld hl,msgdat        ; pointer to messages.
0157   7D6B CD 03 8D           call getwrd         ; get message number.
0158   7D6E E5                 push hl             ; store pointer to message.
0159   7D6F 16 01              ld d,1              ; height.
0160   7D71 AF                 xor a               ; start at object zero.
0161   7D72 32 FB 89           ld (combyt),a       ; store number of object in combyt.
0162   7D75 5F                 ld e,a              ; maximum width.
0163   7D76 06 00       dbox5  ld b,0              ; this line's width.
0164   7D78 CD B1 8A    mod2   call always         ; item in player's possession?
0165   7D7B 20 01              jr nz,dbox6         ; not in inventory, skip this line.
0166   7D7D 14                 inc d               ; add to tally.
0167   7D7E 7E          dbox6  ld a,(hl)           ; get character.
0168   7D7F 23                 inc hl              ; next character.
0169   7D80 FE 2C              cp ','              ; reached end of line?
0170   7D82 28 0B              jr z,dbox3          ; yes.
0171   7D84 FE 0D              cp 13               ; reached end of line?
0172   7D86 28 07              jr z,dbox3          ; yes.
0173   7D88 04                 inc b               ; add to this line's width.
0174   7D89 A7                 and a               ; end of message?
0175   7D8A FA 96 7D           jp m,dbox4          ; yes, end count.
0176   7D8D 18 EF              jr dbox6            ; repeat until we find the end.
0177   7D8F 7B          dbox3  ld a,e              ; maximum line width.
0178   7D90 B8                 cp b                ; have we exceeded longest so far?
0179   7D91 30 E3              jr nc,dbox5         ; no, carry on looking.
0180   7D93 58                 ld e,b              ; make this the widest so far.
0181   7D94 18 E0              jr dbox5            ; keep looking.
0182   7D96 7B          dbox4  ld a,e              ; maximum line width.
0183   7D97 B8                 cp b                ; have we exceeded longest so far?
0184   7D98 30 01              jr nc,dbox8         ; no, carry on looking.
0185   7D9A 58                 ld e,b              ; final line is the longest so far.
0186   7D9B 15          dbox8  dec d               ; decrement items found.
0187   7D9C CA A9 7E           jp z,dbox15         ; total was zero.
0188   7D9F 7B                 ld a,e              ; longest line.
0189   7DA0 A7                 and a               ; was it zero?
0190   7DA1 CA A9 7E           jp z,dbox15         ; total was zero.
0191   7DA4 ED 53 00 7F        ld (bwid),de        ; set up size.
0192   7DA8             
0193   7DA8             ; That's set up our box size.
0194   7DA8             
0195   7DA8 3A 0D 7D           ld a,(winhgt)       ; window height in characters.
0196   7DAB 92                 sub d               ; subtract height of box.
0197   7DAC 1F                 rra                 ; divide by 2.
0198   7DAD 21 0B 7D           ld hl,wintop        ; top edge of window.
0199   7DB0 86                 add a,(hl)          ; add displacement.
0200   7DB1 32 02 7F           ld (btop),a         ; set up box top.
0201   7DB4 3A 0E 7D           ld a,(winwid)       ; window width in characters.
0202   7DB7 93                 sub e               ; subtract box width.
0203   7DB8 1F                 rra                 ; divide by 2.
0204   7DB9 23                 inc hl              ; left edge of window.
0205   7DBA 86                 add a,(hl)          ; add displacement.
0206   7DBB 32 03 7F           ld (blft),a         ; box left.
0207   7DBE 2A 36 5C           ld hl,(23606)       ; font.
0208   7DC1 22 CC 87           ld (grbase),hl      ; set up for text display.
0209   7DC4 E1                 pop hl              ; restore message pointer.
0210   7DC5 3A 02 7F           ld a,(btop)         ; box top.
0211   7DC8 32 3A 7D           ld (dispx),a        ; set display coordinate.
0212   7DCB AF                 xor a               ; start at object zero.
0213   7DCC 32 FB 89           ld (combyt),a       ; store number of object in combyt.
0214   7DCF 3A FB 89    dbox2  ld a,(combyt)       ; get object number.
0215   7DD2 CD B1 8A    mod0   call always         ; check inventory for display.
0216   7DD5 C2 97 7E           jp nz,dbox13        ; not in inventory, skip this line.
0217   7DD8             
0218   7DD8 3A 03 7F           ld a,(blft)         ; box left.
0219   7DDB 32 3B 7D           ld (dispy),a        ; set left display position.
0220   7DDE 3A 00 7F           ld a,(bwid)         ; box width.
0221   7DE1 47                 ld b,a              ; store width.
0222   7DE2 7E          dbox0  ld a,(hl)           ; get character.
0223   7DE3 FE 2C              cp ','              ; end of line?
0224   7DE5 28 45              jr z,dbox1          ; yes, next one.
0225   7DE7 FE 0D              cp 13               ; end of option?
0226   7DE9 28 41              jr z,dbox1          ; yes, on to next.
0227   7DEB 05                 dec b               ; one less to display.
0228   7DEC E6 7F              and 127             ; remove terminator.
0229   7DEE C5                 push bc             ; store characters remaining.
0230   7DEF E5                 push hl             ; store address on stack.
0231   7DF0 F5                 push af             ; store character.
0232   7DF1 CD B6 88           call gaadd          ; get attribute address.
0233   7DF4 3A 8D 5C           ld a,(23693)        ; current colour.
0234   7DF7 77                 ld (hl),a           ; set attribute.
0235   7DF8 F1                 pop af              ; restore character.
0236   7DF9 CD 1A 89           call pchr           ; display on screen.
0237   7DFC E1                 pop hl              ; retrieve address of next character.
0238   7DFD C1                 pop bc              ; chars left for this line.
0239   7DFE 7E                 ld a,(hl)           ; get character.
0240   7DFF 23                 inc hl              ; next character.
0241   7E00 FE 80              cp 128              ; end of message?
0242   7E02 D2 3A 7E           jp nc,dbox7         ; yes, job done.
0243   7E05 78                 ld a,b              ; chars remaining.
0244   7E06 A7                 and a               ; are any left?
0245   7E07 20 D9              jr nz,dbox0         ; yes, continue.
0246   7E09             
0247   7E09             ; Reached limit of characters per line.
0248   7E09             
0249   7E09 7E          dbox9  ld a,(hl)           ; get character.
0250   7E0A 23                 inc hl              ; next one.
0251   7E0B FE 2C              cp ','              ; another line?
0252   7E0D 28 21              jr z,dbox10         ; yes, do next line.
0253   7E0F FE 0D              cp 13               ; another line?
0254   7E11 28 1D              jr z,dbox10         ; yes, on to next.
0255   7E13 FE 80              cp 128              ; end of message?
0256   7E15 30 2A              jr nc,dbox11        ; yes, finish message.
0257   7E17 18 F0              jr dbox9
0258   7E19             
0259   7E19             ; Fill box to end of line.
0260   7E19             
0261   7E19 E5          dboxf  push hl             ; store address on stack.
0262   7E1A C5                 push bc             ; store characters remaining.
0263   7E1B CD B6 88           call gaadd          ; get attribute address.
0264   7E1E 3A 8D 5C           ld a,(23693)        ; current colour.
0265   7E21 77                 ld (hl),a           ; set attribute.
0266   7E22 3E 20              ld a,32             ; space character.
0267   7E24 CD 1A 89           call pchr           ; display character.
0268   7E27 C1                 pop bc              ; retrieve character count.
0269   7E28 E1                 pop hl              ; retrieve address of next character.
0270   7E29 10 EE              djnz dboxf          ; repeat for remaining chars on line.
0271   7E2B C9                 ret
0272   7E2C 23          dbox1  inc hl              ; skip character.
0273   7E2D CD 19 7E           call dboxf          ; fill box out to right side.
0274   7E30 3A 3A 7D    dbox10 ld a,(dispx)        ; x coordinate.
0275   7E33 3C                 inc a               ; down a line.
0276   7E34 32 3A 7D           ld (dispx),a        ; next position.
0277   7E37 C3 CF 7D           jp dbox2            ; next line.
0278   7E3A 78          dbox7  ld a,b              ; chars remaining.
0279   7E3B A7                 and a               ; are any left?
0280   7E3C 28 03              jr z,dbox11         ; no, nothing to draw.
0281   7E3E CD 19 7E           call dboxf          ; fill message to line.
0282   7E41             
0283   7E41             ; Drawn the box menu, now select option.
0284   7E41             
0285   7E41 3A 02 7F    dbox11 ld a,(btop)         ; box top.
0286   7E44 32 3A 7D           ld (dispx),a        ; set bar position.
0287   7E47 CD AE 8B    dbox14 call joykey         ; get controls.
0288   7E4A E6 1F              and 31              ; anything pressed?
0289   7E4C 20 F9              jr nz,dbox14        ; yes, debounce it.
0290   7E4E CD AB 7E           call dbar           ; draw bar.
0291   7E51 CD AE 8B    dbox12 call joykey         ; get controls.
0292   7E54 E6 1C              and 28              ; anything pressed?
0293   7E56 28 F9              jr z,dbox12         ; no, nothing.
0294   7E58 E6 10              and 16              ; fire button pressed?
0295   7E5A C2 8A 7E    mod1   jp nz,fstd          ; yes, job done.
0296   7E5D CD AB 7E           call dbar           ; delete bar.
0297   7E60 3A 09 7D           ld a,(joyval)       ; joystick reading.
0298   7E63 E6 08              and 8               ; going up?
0299   7E65 20 13              jr nz,dboxu         ; yes, go up.
0300   7E67 3A 3A 7D           ld a,(dispx)        ; vertical position of bar.
0301   7E6A 3C                 inc a               ; look down.
0302   7E6B 21 02 7F           ld hl,btop          ; top of box.
0303   7E6E 96                 sub (hl)            ; find distance from top.
0304   7E6F 2B                 dec hl              ; point to height.
0305   7E70 BE                 cp (hl)             ; are we at end?
0306   7E71 CA 47 7E           jp z,dbox14         ; yes, go no further.
0307   7E74 21 3A 7D           ld hl,dispx         ; coordinate.
0308   7E77 34                 inc (hl)            ; move bar.
0309   7E78 18 CD              jr dbox14           ; continue.
0310   7E7A 3A 3A 7D    dboxu  ld a,(dispx)        ; vertical position of bar.
0311   7E7D 21 02 7F           ld hl,btop          ; top of box.
0312   7E80 BE                 cp (hl)             ; are we at the top?
0313   7E81 CA 47 7E           jp z,dbox14         ; yes, go no further.
0314   7E84 21 3A 7D           ld hl,dispx         ; coordinate.
0315   7E87 35                 dec (hl)            ; move bar.
0316   7E88 18 BD              jr dbox14           ; continue.
0317   7E8A 3A 3A 7D    fstd   ld a,(dispx)        ; bar position.
0318   7E8D 21 02 7F           ld hl,btop          ; top of menu.
0319   7E90 96                 sub (hl)            ; find selected option.
0320   7E91 32 34 7D           ld (varopt),a       ; store the option.
0321   7E94 C3 C6 7F           jp redraw           ; redraw the screen.
0322   7E97             
0323   7E97             ; Option not available.  Skip this line.
0324   7E97             
0325   7E97 7E          dbox13 ld a,(hl)           ; get character.
0326   7E98 23                 inc hl              ; next one.
0327   7E99 FE 2C              cp ','              ; another line?
0328   7E9B CA CF 7D           jp z,dbox2          ; yes, do next line.
0329   7E9E FE 0D              cp 13               ; another line?
0330   7EA0 CA CF 7D           jp z,dbox2          ; yes, on to next line.
0331   7EA3 A7                 and a               ; end of message?
0332   7EA4 FA 41 7E           jp m,dbox11         ; yes, finish message.
0333   7EA7 18 EE              jr dbox13
0334   7EA9 E1          dbox15 pop hl              ; pop message pointer from the stack.
0335   7EAA C9                 ret
0336   7EAB             
0337   7EAB 3A 03 7F    dbar   ld a,(blft)         ; box left.
0338   7EAE 32 3B 7D           ld (dispy),a        ; set display coordinate.
0339   7EB1 CD 88 88           call gprad          ; get printing address.
0340   7EB4 EB                 ex de,hl            ; flip into hl register pair.
0341   7EB5 3A 00 7F           ld a,(bwid)         ; box width.
0342   7EB8 4F                 ld c,a              ; loop counter in c.
0343   7EB9 54                 ld d,h              ; store screen address high byte.
0344   7EBA 06 08       dbar1  ld b,8              ; pixel height in b.
0345   7EBC 7E          dbar0  ld a,(hl)           ; get screen byte.
0346   7EBD 2F                 cpl                 ; reverse all bits.
0347   7EBE 77                 ld (hl),a           ; write back to screen.
0348   7EBF 24                 inc h               ; next line down.
0349   7EC0 10 FA              djnz dbar0          ; draw rest of character.
0350   7EC2 62                 ld h,d              ; rsetore screen address.
0351   7EC3 2C                 inc l               ; one char right.
0352   7EC4 0D                 dec c               ; decrement character counter.
0353   7EC5 20 F3              jr nz,dbar1         ; repeat for whole line.
0354   7EC7 C9                 ret
0355   7EC8             
0356   7EC8 E5          invdis push hl             ; store message text pointer.
0357   7EC9 D5                 push de             ; store de pair for line count.
0358   7ECA 21 FB 89           ld hl,combyt        ; object number.
0359   7ECD 7E                 ld a,(hl)           ; get object number.
0360   7ECE 34                 inc (hl)            ; ready for next one.
0361   7ECF CD E7 86           call gotob          ; check if we have object.
0362   7ED2 D1                 pop de              ; retrieve de pair from stack.
0363   7ED3 E1                 pop hl              ; retrieve text pointer.
0364   7ED4 C9                 ret
0365   7ED5             ;always xor a               ; set zero flag.
0366   7ED5             ;       ret
0367   7ED5             
0368   7ED5             ; Find option selected.
0369   7ED5             
0370   7ED5 3A 3A 7D    fopt   ld a,(dispx)
0371   7ED8 21 02 7F           ld hl,btop          ; top of menu.
0372   7EDB 96                 sub (hl)            ; find selected option.
0373   7EDC 3C                 inc a               ; object 0 needs one iteration, 1 needs 2 and so on.
0374   7EDD 47                 ld b,a              ; option selected in b register.
0375   7EDE 21 FB 89           ld hl,combyt        ; object number.
0376   7EE1 36 00              ld (hl),0           ; set to first item.
0377   7EE3 C5          fopt0  push bc             ; store option counter in b register.
0378   7EE4 CD F4 7E           call fobj           ; find next object in inventory.
0379   7EE7 C1                 pop bc              ; restore option counter.
0380   7EE8 10 F9              djnz fopt0          ; repeat for relevant steps down the list.
0381   7EEA 3A FB 89           ld a,(combyt)       ; get option.
0382   7EED 3D                 dec a               ; one less, due to where we increment combyt.
0383   7EEE 32 34 7D           ld (varopt),a       ; store the option.
0384   7EF1 C3 C6 7F           jp redraw           ; redraw the screen.
0385   7EF4             
0386   7EF4 21 FB 89    fobj   ld hl,combyt        ; object number.
0387   7EF7 7E                 ld a,(hl)           ; get object number.
0388   7EF8 34                 inc (hl)            ; ready for next item.
0389   7EF9 C8                 ret z               ; in case we loop back to zero.
0390   7EFA CD E7 86           call gotob          ; do we have this item?
0391   7EFD C8                 ret z               ; yes, it's on the list.
0392   7EFE 18 F4              jr fobj             ; repeat until we find next item in pockets.
0393   7F00             
0394   7F00 00          bwid   defb 0              ; box/menu width.
0395   7F01 00          blen   defb 0              ; box/menu height.
0396   7F02 00          btop   defb 0              ; box coordinates.
0397   7F03 00          blft   defb 0
0398   7F04             
0399   7F04             ; Wait for keypress.
0400   7F04             
0401   7F04 CD 10 7F    prskey call debkey         ; debounce key.
0402   7F07 CD 5B 7F    prsky0 call vsync          ; vertical synch.
0403   7F0A CD 8E 02           call 654            ; return keyboard state in e.
0404   7F0D 1C                 inc e               ; is it 255?
0405   7F0E 28 F7              jr z,prsky0         ; yes, repeat until key pressed.
0406   7F10             
0407   7F10             ; Debounce keypress.
0408   7F10             
0409   7F10 CD 5B 7F    debkey call vsync          ; update scrolling, sounds etc.
0410   7F13 CD 8E 02           call 654            ; d=shift, e=key.
0411   7F16 1C                 inc e               ; is it 255?
0412   7F17 20 F7              jr nz,debkey        ; no - loop until key is released.
0413   7F19 C9                 ret
0414   7F1A             
0415   7F1A             ; Delay routine.
0416   7F1A             
0417   7F1A C5          delay  push bc             ; store loop counter.
0418   7F1B CD 5B 7F           call vsync          ; wait for interrupt.
0419   7F1E C1                 pop bc              ; restore counter.
0420   7F1F 10 F9              djnz delay          ; repeat.
0421   7F21 C9                 ret
0422   7F22             
0423   7F22             ; Clear sprite table.
0424   7F22             
0425   7F22 21 C4 92    xspr   ld hl,sprtab        ; sprite table.
0426   7F25 06 CC              ld b,SPRBUF         ; length of table.
0427   7F27 36 FF       xspr0  ld (hl),255         ; clear one byte.
0428   7F29 23                 inc hl              ; move to next byte.
0429   7F2A 10 FB              djnz xspr0          ; repeat for rest of table.
0430   7F2C C9                 ret
0431   7F2D             
0432   7F2D CD D4 85    silenc call silen1         ; silence channel 1.
0433   7F30 CD E1 85           call silen2         ; silence channel 2.
0434   7F33 CD EE 85           call silen3         ; silence channel 3.
0435   7F36 C3 32 85           jp plsnd            ; play all channels to switch them off.
0436   7F39             
0437   7F39             ; Initialise all objects.
0438   7F39             
0439   7F39 DD 21 8B E4 iniob  ld ix,objdta        ; objects table.
0440   7F3D 3A 0F 7D           ld a,(numob)        ; number of objects in the game.
0441   7F40 47                 ld b,a              ; loop counter.
0442   7F41 11 27 00           ld de,39            ; distance between objects.
0443   7F44 DD 7E 24    iniob0 ld a,(ix+36)        ; start screen.
0444   7F47 DD 77 21           ld (ix+33),a        ; set start screen.
0445   7F4A DD 7E 25           ld a,(ix+37)        ; find start x.
0446   7F4D DD 77 22           ld (ix+34),a        ; set start x.
0447   7F50 DD 7E 26           ld a,(ix+38)        ; get initial y.
0448   7F53 DD 77 23           ld (ix+35),a        ; set y coord.
0449   7F56 DD 19              add ix,de           ; point to next object.
0450   7F58 10 EA              djnz iniob0         ; repeat.
0451   7F5A C9                 ret
0452   7F5B             
0453   7F5B             ; Screen synchronisation.
0454   7F5B             
0455   7F5B CD AE 8B    vsync  call joykey         ; read joystick/keyboard.
0456   7F5E 3A C5 7F           ld a,(sndtyp)       ; sound to play.
0457   7F61 A7                 and a               ; any sound?
0458   7F62 CA 8C 7F           jp z,vsync1         ; no.
0459   7F65 47                 ld b,a              ; outer loop.
0460   7F66 3A 48 5C           ld a,(23624)        ; border colour.
0461   7F69 1F                 rra                 ; put border bits into d0, d1 and d2.
0462   7F6A 1F                 rra
0463   7F6B 1F                 rra
0464   7F6C 4F                 ld c,a              ; first value to write to speaker.
0465   7F6D 78                 ld a,b              ; sound.
0466   7F6E A7                 and a               ; test it.
0467   7F6F FA A4 7F           jp m,vsync6         ; play white noise.
0468   7F72 79          vsync2 ld a,c              ; get speaker value.
0469   7F73 D3 FE              out (254),a         ; write to speaker.
0470   7F75 EE F8              xor 248             ; toggle all except the border bits.
0471   7F77 4F                 ld c,a              ; store value for next time.
0472   7F78 50                 ld d,b              ; store loop counter.
0473   7F79 21 31 7D    vsync3 ld hl,clock         ; previous clock setting.
0474   7F7C 3A 78 5C           ld a,(23672)        ; current clock setting.
0475   7F7F BE                 cp (hl)             ; subtract last reading.
0476   7F80 C2 88 7F           jp nz,vsync4        ; yes, no more processing please.
0477   7F83 10 F4              djnz vsync3         ; loop.
0478   7F85 42                 ld b,d              ; restore loop counter.
0479   7F86 10 EA              djnz vsync2         ; continue noise.
0480   7F88 7A          vsync4 ld a,d              ; where we got to.
0481   7F89 32 C5 7F    vsynca ld (sndtyp),a       ; remember for next time.
0482   7F8C 3A 78 5C    vsync1 ld a,(23672)        ; clock low.
0483   7F8F 1F                 rra                 ; rotate bit into carry.
0484   7F90 DC 9E 7F           call c,vsync5       ; time to play sound and do shrapnel/ticker stuff.
0485   7F93 21 31 7D           ld hl,clock         ; last clock reading.
0486   7F96 3A 78 5C    vsync0 ld a,(23672)        ; current clock reading.
0487   7F99 BE                 cp (hl)             ; are they the same?
0488   7F9A 28 FA              jr z,vsync0         ; yes, wait until clock changes.
0489   7F9C 77                 ld (hl),a           ; set new clock reading.
0490   7F9D C9                 ret
0491   7F9E CD 32 85    vsync5 call plsnd          ; play sound.
0492   7FA1 C3 A1 80           jp proshr           ; shrapnel and stuff.
0493   7FA4             
0494   7FA4             ; Play white noise.
0495   7FA4             
0496   7FA4 78          vsync6 ld a,b              ; 128 - 255.
0497   7FA5 D6 7F              sub 127
0498   7FA7 47                 ld b,a
0499   7FA8 21 31 7D           ld hl,clock         ; previous clock setting.
0500   7FAB ED 5F       vsync7 ld a,r              ; get random speaker value.
0501   7FAD E6 F8              and 248             ; only retain the speaker/earphone bits.
0502   7FAF B1                 or c                ; merge with border colour.
0503   7FB0 D3 FE              out (254),a         ; write to speaker.
0504   7FB2 3A 78 5C           ld a,(23672)        ; current clock setting.
0505   7FB5 BE                 cp (hl)             ; subtract last reading.
0506   7FB6 C2 C2 7F           jp nz,vsync8        ; yes, no more processing please.
0507   7FB9 78                 ld a,b
0508   7FBA E6 7F              and 127
0509   7FBC 3C                 inc a
0510   7FBD 3D          vsync9 dec a
0511   7FBE 20 FD              jr nz,vsync9        ; loop.
0512   7FC0 10 E9              djnz vsync7         ; continue noise.
0513   7FC2 AF          vsync8 xor a
0514   7FC3 18 C4              jr vsynca
0515   7FC5 00          sndtyp defb 0
0516   7FC6             ;clock  defb 0              ; last clock reading.
0517   7FC6             
0518   7FC6             ; Redraw the screen.
0519   7FC6             
0520   7FC6             ; Remove old copy of all sprites for redraw.
0521   7FC6             
0522   7FC6 DD E5       redraw push ix             ; place sprite pointer on stack.
0523   7FC8 CD A8 89           call droom          ; show screen layout.
0524   7FCB CD 35 86           call shwob          ; draw objects.
0525   7FCE 06 0C       numsp0 ld b,NUMSPR         ; sprites to draw.
0526   7FD0 DD 21 C4 92        ld ix,sprtab        ; sprite table.
0527   7FD4 DD 7E 00    redrw0 ld a,(ix+0)         ; old sprite type.
0528   7FD7 3C                 inc a               ; is it enabled?
0529   7FD8 28 0C              jr z,redrw1         ; no, find next one.
0530   7FDA DD 7E 03           ld a,(ix+3)         ; sprite x.
0531   7FDD FE B1              cp 177              ; beyond maximum?
0532   7FDF 30 05              jr nc,redrw1        ; yes, nothing to draw.
0533   7FE1 C5                 push bc             ; store sprite counter.
0534   7FE2 CD 70 8E           call sspria         ; show single sprite.
0535   7FE5 C1                 pop bc              ; retrieve sprite counter.
0536   7FE6 11 11 00    redrw1 ld de,TABSIZ        ; distance to next odd/even entry.
0537   7FE9 DD 19              add ix,de           ; next sprite.
0538   7FEB 10 E7              djnz redrw0         ; repeat for remaining sprites.
0539   7FED CD 43 83    rpblc1 call dshrp          ; redraw shrapnel.
0540   7FF0 DD E1              pop ix              ; retrieve sprite pointer.
0541   7FF2 C9                 ret
0542   7FF3             
0543   7FF3             ; Clear screen routine.
0544   7FF3             
0545   7FF3 21 00 40    cls    ld hl,16384         ; screen address.
0546   7FF6 75                 ld (hl),l           ; blank first byte.
0547   7FF7 11 01 40           ld de,16385         ; second byte.
0548   7FFA 01 00 18           ld bc,6144          ; bytes to copy.
0549   7FFD ED B0              ldir                ; blank them all.
0550   7FFF 3A 8D 5C           ld a,(23693)        ; fetch attributes.
0551   8002 77                 ld (hl),a           ; set first attribute cell.
0552   8003 01 FF 02           ld bc,767           ; number of attributes.
0553   8006 ED B0              ldir                ; set all attributes.
0554   8008 21 00 00           ld hl,0             ; set hl to origin (0, 0).
0555   800B 22 2F 7D           ld (charx),hl       ; reset coordinates.
0556   800E C9                 ret
0557   800F             
0558   800F             ; Set palette routine and data.
0559   800F             ; Palette.
0560   800F             ; 48955 = register select port.
0561   800F             ; 65339 = data read/write port.
0562   800F             
0563   800F             ; 48955 = write to register:
0564   800F             ; d0-d5 : select register sub-group.
0565   800F             ; d6-d7 : select register group.
0566   800F             ;         00 = sub-group determines entry in palette table.
0567   800F             ;         64 = mode select, write d0 to 65339 to toggle mode on/off.
0568   800F             
0569   800F             ; 65339 = data read/write:
0570   800F             ; d0-d1 : blue intensity (last bit duplicated so Bb is Bbb)
0571   800F             ; d2-d4 : red intensity
0572   800F             ; d5-d7 : green intensity
0573   800F             
0574   800F 01 3B BF    setpal ld bc,48955         ; register select.
0575   8012 3E 40              ld a,64             ; mode select.
0576   8014 ED 79              out (c),a           ; set ULAplus mode.
0577   8016 06 FF              ld b,255            ; data write.
0578   8018 3E 01              ld a,1              ; mode on.
0579   801A ED 79              out (c),a           ; switch on ULAplus.
0580   801C             
0581   801C 06 40              ld b,64             ; number of palette table entries to write.
0582   801E 21 97 E7    setpa1 ld hl,palett        ; palette we want.
0583   8021 1E 00              ld e,0              ; register number.
0584   8023 C5          setpa0 push bc             ; store counter.
0585   8024 06 BF              ld b,191            ; register select.
0586   8026 7B                 ld a,e              ; register number to write.
0587   8027 ED 79              out (c),a           ; write to port.
0588   8029 06 FF              ld b,255            ; data select.
0589   802B 7E                 ld a,(hl)           ; get colour data from table.
0590   802C ED 79              out (c),a           ; write to port.
0591   802E 1C                 inc e               ; next clut entry.
0592   802F 23                 inc hl              ; next table entry.
0593   8030 C1                 pop bc              ; restore counter from stack.
0594   8031 10 F0              djnz setpa0         ; set rest of palette.
0595   8033 C9                 ret
0596   8034             
0597   8034             endpal equ $
0598   8034             
0599   8034 7E          fdchk  ld a,(hl)           ; fetch cell.
0600   8035 FE 04              cp FODDER           ; is it fodder?
0601   8037 C0                 ret nz              ; no.
0602   8038 36 00              ld (hl),0           ; rewrite block type.
0603   803A E5                 push hl             ; store pointer to block.
0604   803B 11 00 FD           ld de,MAP           ; address of map.
0605   803E A7                 and a               ; clear carry flag for subtraction.
0606   803F ED 52              sbc hl,de           ; find simple displacement for block.
0607   8041 7D                 ld a,l              ; low byte is y coordinate.
0608   8042 E6 1F              and 31              ; column position 0 - 31.
0609   8044 32 3B 7D           ld (dispy),a        ; set up y position.
0610   8047 29                 add hl,hl           ; multiply displacement by 8.
0611   8048 29                 add hl,hl
0612   8049 29                 add hl,hl
0613   804A 7C                 ld a,h              ; x coordinate now in h.
0614   804B 32 3A 7D           ld (dispx),a        ; set the display coordinate.
0615   804E AF                 xor a               ; block to write.
0616   804F CD FF 88           call pattr          ; write block.
0617   8052 E1                 pop hl              ; restore block pointer.
0618   8053 C9                 ret
0619   8054             
0620   8054             ; Colour a sprite.
0621   8054             
0622   8054 DD 7E 08    cspr   ld a,(ix+8)         ; look at the vertical first.
0623   8057 FE B1              cp 177              ; is it out-of-range?
0624   8059 D0                 ret nc              ; yes, can't colour it.
0625   805A 07                 rlca                ; divide by 64.
0626   805B 07                 rlca                ; quicker than 6 rrca operations.
0627   805C 6F                 ld l,a              ; store in e register for now.
0628   805D E6 03              and 3               ; mask to find segment.
0629   805F C6 58              add a,88            ; attributes start at 88*256=22528.
0630   8061 67                 ld h,a              ; that's our high byte sorted.
0631   8062 7D                 ld a,l              ; vertical/64 - same as vertical*4.
0632   8063 E6 E0              and 224             ; want a multiple of 32.
0633   8065 6F                 ld l,a              ; vertical element calculated.
0634   8066 DD 7E 09           ld a,(ix+9)         ; get horizontal position.
0635   8069 1F                 rra                 ; divide by 8.
0636   806A 1F                 rra
0637   806B 1F                 rra
0638   806C E6 1F              and 31              ; want result in range 0-31.
0639   806E 85                 add a,l             ; add to existing low byte.
0640   806F 6F                 ld l,a              ; that's the low byte done.
0641   8070             
0642   8070 11 1E 00           ld de,30            ; distance to next line down.
0643   8073 DD 7E 08           ld a,(ix+8)         ; x coordinate.
0644   8076 06 03       cspr2  ld b,3              ; default rows to write.
0645   8078 E6 07              and 7               ; does x straddle cells?
0646   807A 20 01              jr nz,cspr0         ; yes, loop counter is good.
0647   807C 05                 dec b               ; one less row to write.
0648   807D 7E          cspr0  ld a,(hl)           ; get attributes.
0649   807E E6 F8       cspr3  and SIMASK          ; remove ink.
0650   8080 B1                 or c                ; put in the new ink.
0651   8081 77                 ld (hl),a           ; write back again.
0652   8082 2C                 inc l               ; next cell.
0653   8083 7E                 ld a,(hl)           ; get attributes.
0654   8084 E6 F8       cspr4  and SIMASK          ; remove ink.
0655   8086 B1                 or c                ; put in the new ink.
0656   8087 77                 ld (hl),a           ; write back again.
0657   8088 2C                 inc l               ; next cell.
0658   8089 DD 7E 09           ld a,(ix+9)         ; y coordinate.
0659   808C E6 07              and 7               ; straddling cells?
0660   808E 28 05              jr z,cspr1          ; no, only 2 wide.
0661   8090 7E                 ld a,(hl)           ; get attributes.
0662   8091 E6 F8       cspr5  and SIMASK          ; remove ink.
0663   8093 B1                 or c                ; put in the new ink.
0664   8094 77                 ld (hl),a           ; write back again.
0665   8095 19          cspr1  add hl,de           ; next row.
0666   8096 10 E5              djnz cspr0
0667   8098 C9                 ret
0668   8099             
0669   8099             ; Scrolly text and puzzle variables.
0670   8099             
0671   8099 80          txtbit defb 128            ; bit to write.
0672   809A 10          txtwid defb 16             ; width of ticker message.
0673   809B 3E A5       txtpos defw msgdat
0674   809D 3E A5       txtini defw msgdat
0675   809F 16 40       txtscr defw 16406
0676   80A1             
0677   80A1             ; Specialist routines.
0678   80A1             ; Process shrapnel.
0679   80A1             
0680   80A1 DD 21 B6 F9 proshr ld ix,SHRAPN        ; table.
0681   80A5 06 37              ld b,NUMSHR         ; shrapnel pieces to process.
0682   80A7 11 06 00           ld de,SHRSIZ        ; distance to next.
0683   80AA DD 7E 00    prosh0 ld a,(ix+0)         ; on/off marker.
0684   80AD 17                 rla                 ; check its status.
0685   80AE D4 B8 80    proshx call nc,prosh1      ; on, so process it.
0686   80B1 DD 19              add ix,de           ; point there.
0687   80B3 10 F5              djnz prosh0         ; round again.
0688   80B5 C3 39 92           jp scrly
0689   80B8 C5          prosh1 push bc             ; store counter.
0690   80B9 CD 42 81           call plot           ; delete the pixel.
0691   80BC DD 7E 00           ld a,(ix+0)         ; restore shrapnel type.
0692   80BF 21 D5 80           ld hl,shrptr        ; shrapnel routine pointers.
0693   80C2 CD CD 80           call prosh2         ; run the routine.
0694   80C5 CD 20 81           call chkxy          ; check x and y are good before we redisplay.
0695   80C8 C1                 pop bc              ; restore counter.
0696   80C9 11 06 00           ld de,SHRSIZ        ; distance to next.
0697   80CC C9                 ret
0698   80CD 07          prosh2 rlca                ; 2 bytes per address.
0699   80CE 5F                 ld e,a              ; copy to de.
0700   80CF 19                 add hl,de           ; point to address of routine.
0701   80D0 7E                 ld a,(hl)           ; get address low.
0702   80D1 23                 inc hl              ; point to second byte.
0703   80D2 66                 ld h,(hl)           ; fetch high byte from table.
0704   80D3 6F                 ld l,a              ; put low byte in l.
0705   80D4 E9                 jp (hl)             ; jump to routine.
0706   80D5             
0707   80D5 D6 81       shrptr defw laser          ; laser.
0708   80D7 AF 81              defw trail          ; vapour trail.
0709   80D9 E5 80              defw shrap          ; shrapnel from explosion.
0710   80DB 10 81              defw dotl           ; horizontal starfield left.
0711   80DD 14 81              defw dotr           ; horizontal starfield right.
0712   80DF 18 81              defw dotu           ; vertical starfield up.
0713   80E1 1C 81              defw dotd           ; vertical starfield down.
0714   80E3 3D A5              defw ptcusr         ; user particle.
0715   80E5             
0716   80E5             ; Explosion shrapnel.
0717   80E5             
0718   80E5 DD 5E 01    shrap  ld e,(ix+1)         ; get the angle.
0719   80E8 16 00              ld d,0              ; no high byte.
0720   80EA 21 6F 81           ld hl,shrsin        ; shrapnel sine table.
0721   80ED 19                 add hl,de           ; point to sine.
0722   80EE             
0723   80EE 5E                 ld e,(hl)           ; fetch value from table.
0724   80EF 23                 inc hl              ; next byte of table.
0725   80F0 56                 ld d,(hl)           ; fetch value from table.
0726   80F1 23                 inc hl              ; next byte of table.
0727   80F2 4E                 ld c,(hl)           ; fetch value from table.
0728   80F3 23                 inc hl              ; next byte of table.
0729   80F4 46                 ld b,(hl)           ; fetch value from table.
0730   80F5 DD 6E 02           ld l,(ix+2)         ; x coordinate in hl.
0731   80F8 DD 66 03           ld h,(ix+3)
0732   80FB 19                 add hl,de           ; add sine.
0733   80FC DD 75 02           ld (ix+2),l         ; store new coordinate.
0734   80FF DD 74 03           ld (ix+3),h
0735   8102 DD 6E 04           ld l,(ix+4)         ; y coordinate in hl.
0736   8105 DD 66 05           ld h,(ix+5)
0737   8108 09                 add hl,bc           ; add cosine.
0738   8109 DD 75 04           ld (ix+4),l         ; store new coordinate.
0739   810C DD 74 05           ld (ix+5),h
0740   810F C9                 ret
0741   8110             
0742   8110 DD 35 05    dotl   dec (ix+5)          ; move left.
0743   8113 C9                 ret
0744   8114 DD 34 05    dotr   inc (ix+5)          ; move left.
0745   8117 C9                 ret
0746   8118 DD 35 03    dotu   dec (ix+3)          ; move up.
0747   811B C9                 ret
0748   811C DD 34 03    dotd   inc (ix+3)          ; move down.
0749   811F C9                 ret
0750   8120             
0751   8120             ; Check coordinates are good before redrawing at new position.
0752   8120             
0753   8120 21 10 7D    chkxy  ld hl,wntopx        ; window top.
0754   8123 DD 7E 03           ld a,(ix+3)         ; fetch shrapnel coordinate.
0755   8126 BE                 cp (hl)             ; compare with top window limit.
0756   8127 38 41              jr c,kilshr         ; out of window, kill shrapnel.
0757   8129 23                 inc hl              ; left edge.
0758   812A DD 7E 05           ld a,(ix+5)         ; fetch shrapnel coordinate.
0759   812D BE                 cp (hl)             ; compare with left window limit.
0760   812E 38 3A              jr c,kilshr         ; out of window, kill shrapnel.
0761   8130             
0762   8130 23                 inc hl              ; point to bottom.
0763   8131 7E                 ld a,(hl)           ; fetch window limit.
0764   8132 C6 0F              add a,15            ; add height of sprite.
0765   8134 DD BE 03           cp (ix+3)           ; compare with shrapnel x coordinate.
0766   8137 38 31              jr c,kilshr         ; off screen, kill shrapnel.
0767   8139 23                 inc hl              ; point to right edge.
0768   813A 7E                 ld a,(hl)           ; fetch shrapnel y coordinate.
0769   813B C6 0F              add a,15            ; add width of sprite.
0770   813D DD BE 05           cp (ix+5)           ; compare with window limit.
0771   8140 38 28              jr c,kilshr         ; off screen, kill shrapnel.
0772   8142             
0773   8142             ; Drop through.
0774   8142             ; Display shrapnel.
0775   8142             
0776   8142 DD 6E 03    plot   ld l,(ix+3)         ; x integer.
0777   8145 DD 66 05           ld h,(ix+5)         ; y integer.
0778   8148 22 3A 7D           ld (dispx),hl       ; workspace coordinates.
0779   814B DD 7E 00           ld a,(ix+0)         ; type.
0780   814E A7                 and a               ; is it a laser?
0781   814F 28 12              jr z,plot1          ; yes, draw laser instead.
0782   8151 7C          plot0  ld a,h              ; which pixel within byte do we
0783   8152 E6 07              and 7               ; want to set first?
0784   8154 16 00              ld d,0              ; no high byte.
0785   8156 5F                 ld e,a              ; copy to de.
0786   8157 21 01 82           ld hl,dots          ; table of small pixel positions.
0787   815A 19                 add hl,de           ; hl points to values we want to POKE to screen.
0788   815B 5E                 ld e,(hl)           ; get value.
0789   815C CD 53 8E           call scadd          ; screen address.
0790   815F 7E                 ld a,(hl)           ; see what's already there.
0791   8160 AB                 xor e               ; merge with pixels.
0792   8161 77                 ld (hl),a           ; put back on screen.
0793   8162 C9                 ret
0794   8163 CD 53 8E    plot1  call scadd          ; screen address.
0795   8166 7E                 ld a,(hl)           ; fetch byte there.
0796   8167 2F                 cpl                 ; toggle all bits.
0797   8168 77                 ld (hl),a           ; new byte.
0798   8169 C9                 ret
0799   816A             
0800   816A DD 36 00 80 kilshr ld (ix+0),128       ; switch off shrapnel.
0801   816E C9                 ret
0802   816F             
0803   816F             ;explc  defb 0              ; explosion counter.
0804   816F             
0805   816F             shrsin defw 0,1024,391,946,724,724,946,391
0805   816F 000000048701B203D402D402B2038701
0806   817F                    defw 1024,0,946,65144,724,64811,391,64589
0806   817F 00040000B20378FED4022BFD87014DFC
0807   818F                    defw 0,64512,65144,64589,64811,64811,64589,65144
0807   818F 000000FC78FE4DFC2BFD2BFD4DFC78FE
0808   819F                    defw 64512,0,64589,391,64811,724,65144,946
0808   819F 00FC00004DFC87012BFDD40278FEB203
0809   81AF             
0810   81AF DD 35 01    trail  dec (ix+1)          ; time remaining.
0811   81B2 CA D1 81           jp z,trailk         ; time to switch it off.
0812   81B5 CD 35 83           call qrand          ; get a random number.
0813   81B8 1F                 rra                 ; x or y axis?
0814   81B9 38 0B              jr c,trailv         ; use x.
0815   81BB 1F                 rra                 ; which direction?
0816   81BC 38 04              jr c,traill         ; go left.
0817   81BE DD 34 05           inc (ix+5)          ; go right.
0818   81C1 C9                 ret
0819   81C2 DD 35 05    traill dec (ix+5)          ; go left.
0820   81C5 C9                 ret
0821   81C6 1F          trailv rra                 ; which direction?
0822   81C7 38 04              jr c,trailu         ; go up.
0823   81C9 DD 34 03           inc (ix+3)          ; go down.
0824   81CC C9                 ret
0825   81CD DD 35 03    trailu dec (ix+3)          ; go up.
0826   81D0 C9                 ret
0827   81D1 DD 36 03 C8 trailk ld (ix+3),200       ; set off-screen to kill vapour trail.
0828   81D5 C9                 ret
0829   81D6             
0830   81D6 DD 7E 01    laser  ld a,(ix+1)         ; direction.
0831   81D9 1F                 rra                 ; left or right?
0832   81DA 30 04              jr nc,laserl        ; move left.
0833   81DC 06 08              ld b,8              ; distance to travel.
0834   81DE 18 02              jr laserm           ; move laser.
0835   81E0 06 F8       laserl ld b,248            ; distance to travel.
0836   81E2 DD 7E 05    laserm ld a,(ix+5)         ; y position.
0837   81E5 80                 add a,b             ; add distance.
0838   81E6 DD 77 05           ld (ix+5),a         ; set new y coordinate.
0839   81E9             
0840   81E9             ; Test new block.
0841   81E9             
0842   81E9 32 3B 7D           ld (dispy),a        ; set y for block collision detection purposes.
0843   81EC DD 7E 03           ld a,(ix+3)         ; get x.
0844   81EF 32 3A 7D           ld (dispx),a        ; set coordinate for collision test.
0845   81F2 CD 46 8B           call tstbl          ; get block type there.
0846   81F5 FE 02              cp WALL             ; is it solid?
0847   81F7 28 D8              jr z,trailk         ; yes, it cannot pass.
0848   81F9 FE 04              cp FODDER           ; is it fodder?
0849   81FB C0                 ret nz              ; no, ignore it.
0850   81FC CD 34 80           call fdchk          ; remove fodder block.
0851   81FF 18 D0              jr trailk           ; destroy laser.
0852   8201             
0853   8201             dots   defb 128,64,32,16,8,4,2,1
0853   8201 8040201008040201
0854   8209             
0855   8209             ; Plot, preserving de.
0856   8209             
0857   8209 D5          plotde push de             ; put de on stack.
0858   820A CD 42 81           call plot           ; plot pixel.
0859   820D D1                 pop de              ; restore de from stack.
0860   820E C9                 ret
0861   820F             
0862   820F             ; Shoot a laser.
0863   820F             
0864   820F 4F          shoot  ld c,a              ; store direction in c register.
0865   8210 DD 7E 08           ld a,(ix+8)         ; x coordinate.
0866   8213 C6 07       shoot1 add a,7             ; down 7 pixels.
0867   8215 6F                 ld l,a              ; puty x coordinate in l.
0868   8216 DD 66 09           ld h,(ix+9)         ; y coordinate in h.
0869   8219 DD E5              push ix             ; store pointer to sprite.
0870   821B CD DD 82           call fpslot         ; find particle slot.
0871   821E 30 2C              jr nc,vapou2        ; failed, restore ix.
0872   8220 DD 36 00 00        ld (ix+0),0         ; set up a laser.
0873   8224 DD 71 01           ld (ix+1),c         ; set the direction.
0874   8227 DD 75 03           ld (ix+3),l         ; set x coordinate.
0875   822A CB 19              rr c                ; check direction we want.
0876   822C 38 08              jr c,shootr         ; shoot right.
0877   822E 7C                 ld a,h              ; y position.
0878   822F             ;       dec a               ; left a pixel.
0879   822F E6 F8       shoot0 and 248             ; align on character boundary.
0880   8231 DD 77 05           ld (ix+5),a         ; set y coordinate.
0881   8234 18 2D              jr vapou0           ; draw first image.
0882   8236 7C          shootr ld a,h              ; y position.
0883   8237 C6 0F              add a,15            ; look right.
0884   8239 18 F4              jr shoot0           ; align and continue.
0885   823B             
0886   823B             ; Create a bit of vapour trail.
0887   823B             
0888   823B DD E5       vapour push ix             ; store pointer to sprite.
0889   823D DD 6E 08           ld l,(ix+8)         ; x coordinate.
0890   8240 DD 66 09           ld h,(ix+9)         ; y coordinate.
0891   8243 11 07 07    vapou3 ld de,7*256+7       ; mid-point of sprite.
0892   8246 19                 add hl,de           ; point to centre of sprite.
0893   8247 CD DD 82           call fpslot         ; find particle slot.
0894   824A 38 03              jr c,vapou1         ; no, we can use it.
0895   824C DD E1       vapou2 pop ix              ; restore sprite pointer.
0896   824E C9                 ret                 ; out of slots, can't generate anything.
0897   824F             
0898   824F DD 75 03    vapou1 ld (ix+3),l         ; set up x.
0899   8252 DD 74 05           ld (ix+5),h         ; set up y coordinate.
0900   8255 CD 35 83           call qrand          ; get quick random number.
0901   8258 E6 0F              and 15              ; random time.
0902   825A C6 0F              add a,15            ; minimum time on screen.
0903   825C DD 77 01           ld (ix+1),a         ; set time on screen.
0904   825F DD 36 00 01        ld (ix+0),1         ; define particle as vapour trail.
0905   8263 CD 20 81    vapou0 call chkxy          ; plot first position.
0906   8266 18 E4              jr vapou2
0907   8268             
0908   8268             ; Create a user particle.
0909   8268             
0910   8268 08          ptusr  ex af,af'           ; store timer.
0911   8269 DD 6E 08           ld l,(ix+8)         ; x coordinate.
0912   826C DD 66 09           ld h,(ix+9)         ; y coordinate.
0913   826F 11 07 07           ld de,7*256+7       ; mid-point of sprite.
0914   8272 19                 add hl,de           ; point to centre of sprite.
0915   8273 CD DD 82           call fpslot         ; find particle slot.
0916   8276 38 01              jr c,ptusr1         ; no, we can use it.
0917   8278 C9                 ret                 ; out of slots, can't generate anything.
0918   8279             
0919   8279 DD 75 03    ptusr1 ld (ix+3),l         ; set up x.
0920   827C DD 74 05           ld (ix+5),h         ; set up y coordinate.
0921   827F 08                 ex af,af'           ; restore timer.
0922   8280 DD 77 01           ld (ix+1),a         ; set time on screen.
0923   8283 DD 36 00 07        ld (ix+0),7         ; define particle as user particle.
0924   8287 C3 20 81           jp chkxy            ; plot first position.
0925   828A             
0926   828A             
0927   828A             ; Create a vertical or horizontal star.
0928   828A             
0929   828A DD E5       star   push ix             ; store pointer to sprite.
0930   828C CD DD 82           call fpslot         ; find particle slot.
0931   828F DA 95 82           jp c,star7          ; found one we can use.
0932   8292 DD E1       star0  pop ix              ; restore sprite pointer.
0933   8294 C9                 ret                 ; out of slots, can't generate anything.
0934   8295             
0935   8295 79          star7  ld a,c              ; direction.
0936   8296 E6 03              and 3               ; is it left?
0937   8298 28 21              jr z,star1          ; yes, it's horizontal.
0938   829A 3D                 dec a               ; is it right?
0939   829B 28 2C              jr z,star2          ; yes, it's horizontal.
0940   829D 3D                 dec a               ; is it up?
0941   829E 28 35              jr z,star3          ; yes, it's vertical.
0942   82A0             
0943   82A0 3A 10 7D           ld a,(wntopx)       ; get edge of screen.
0944   82A3 3C                 inc a               ; down one pixel.
0945   82A4 DD 77 03    star8  ld (ix+3),a         ; set x coord.
0946   82A7 CD 35 83           call qrand          ; get quick random number.
0947   82AA DD 77 05    star9  ld (ix+5),a         ; set y position.
0948   82AD 79                 ld a,c              ; direction.
0949   82AE E6 03              and 3               ; zero to three.
0950   82B0 C6 03              add a,3             ; 3 to 6 for starfield.
0951   82B2 DD 77 00           ld (ix+0),a         ; define particle as star.
0952   82B5 CD 20 81           call chkxy          ; plot first position.
0953   82B8 C3 92 82           jp star0
0954   82BB CD 35 83    star1  call qrand          ; get quick random number.
0955   82BE DD 77 03           ld (ix+3),a         ; set x coord.
0956   82C1 3A 13 7D           ld a,(wnrgtx)       ; get edge of screen.
0957   82C4 C6 0F              add a,15            ; add width of sprite minus 1.
0958   82C6 C3 AA 82           jp star9
0959   82C9 CD 35 83    star2  call qrand          ; get quick random number.
0960   82CC DD 77 03           ld (ix+3),a         ; set x coord.
0961   82CF 3A 11 7D           ld a,(wnlftx)       ; get edge of screen.
0962   82D2 C3 AA 82           jp star9
0963   82D5 3A 12 7D    star3  ld a,(wnbotx)       ; get edge of screen.
0964   82D8 C6 0F              add a,15            ; height of sprite minus one pixel.
0965   82DA C3 A4 82           jp star8
0966   82DD             
0967   82DD             
0968   82DD             ; Find particle slot for lasers or vapour trail.
0969   82DD             ; Can't use alternate accumulator.
0970   82DD             
0971   82DD DD 21 B6 F9 fpslot ld ix,SHRAPN        ; shrapnel table.
0972   82E1 11 06 00           ld de,SHRSIZ        ; size of each particle.
0973   82E4 06 37              ld b,NUMSHR         ; number of pieces in table.
0974   82E6 DD 7E 00    fpslt0 ld a,(ix+0)         ; get type.
0975   82E9 17                 rla                 ; is this slot in use?
0976   82EA D8                 ret c               ; no, we can use it.
0977   82EB DD 19              add ix,de           ; point to more shrapnel.
0978   82ED 10 F7              djnz fpslt0         ; repeat for all shrapnel.
0979   82EF C9                 ret                 ; out of slots, can't generate anything.
0980   82F0             
0981   82F0             ; Create an explosion at sprite position.
0982   82F0             
0983   82F0 4F          explod ld c,a              ; particles to create.
0984   82F1 DD E5              push ix             ; store pointer to sprite.
0985   82F3 DD 6E 08           ld l,(ix+8)         ; x coordinate.
0986   82F6 DD 66 09           ld h,(ix+9)         ; y coordinate.
0987   82F9 DD 21 B6 F9        ld ix,SHRAPN        ; shrapnel table.
0988   82FD 11 06 00           ld de,SHRSIZ        ; size of each particle.
0989   8300 06 37              ld b,NUMSHR         ; number of pieces in table.
0990   8302 DD 7E 00    expld0 ld a,(ix+0)         ; get type.
0991   8305 17                 rla                 ; is this slot in use?
0992   8306 38 07              jr c,expld1         ; no, we can use it.
0993   8308 DD 19       expld2 add ix,de           ; point to more shrapnel.
0994   830A 10 F6              djnz expld0         ; repeat for all shrapnel.
0995   830C DD E1       expld3 pop ix              ; restore sprite pointer.
0996   830E C9                 ret                 ; out of slots, can't generate any more.
0997   830F 79          expld1 ld a,c              ; shrapnel counter.
0998   8310 E6 0F              and 15              ; 0 to 15.
0999   8312 85                 add a,l             ; add to x.
1000   8313 DD 77 03           ld (ix+3),a         ; x coord.
1001   8316 3A 42 83           ld a,(seed3)        ; crap random number.
1002   8319 E6 0F              and 15              ; 0 to 15.
1003   831B 84                 add a,h             ; add to y.
1004   831C DD 77 05           ld (ix+5),a         ; y coord.
1005   831F DD 36 00 02        ld (ix+0),2         ; switch it on.
1006   8323 D9                 exx                 ; store coordinates.
1007   8324 CD 20 81           call chkxy          ; plot first position.
1008   8327 CD 35 83           call qrand          ; quick random angle.
1009   832A E6 3C              and 60              ; keep within range.
1010   832C DD 77 01           ld (ix+1),a         ; angle.
1011   832F D9                 exx                 ; restore coordinates.
1012   8330 0D                 dec c               ; one less piece of shrapnel to generate.
1013   8331 20 D5              jr nz,expld2        ; back to main explosion loop.
1014   8333 18 D7              jr expld3           ; restore sprite pointer and exit.
1015   8335 3A 42 83    qrand  ld a,(seed3)        ; random seed.
1016   8338 6F                 ld l,a              ; low byte.
1017   8339 26 00              ld h,0              ; no high byte.
1018   833B ED 5F              ld a,r              ; r register.
1019   833D AE                 xor (hl)            ; combine with seed.
1020   833E 32 42 83           ld (seed3),a        ; new seed.
1021   8341 C9                 ret
1022   8342 00          seed3  defb 0
1023   8343             
1024   8343             ; Display all shrapnel.
1025   8343             
1026   8343 21 09 82    dshrp  ld hl,plotde        ; display routine.
1027   8346 22 AF 80           ld (proshx+1),hl    ; modify routine.
1028   8349 CD A1 80           call proshr         ; process shrapnel.
1029   834C 21 B8 80           ld hl,prosh1        ; processing routine.
1030   834F 22 AF 80           ld (proshx+1),hl    ; modify the call.
1031   8352 C9                 ret
1032   8353             
1033   8353             ; Particle engine.
1034   8353             
1035   8353 21 B6 F9    inishr ld hl,SHRAPN        ; table.
1036   8356 06 37              ld b,NUMSHR         ; shrapnel pieces to process.
1037   8358 11 06 00           ld de,SHRSIZ        ; distance to next.
1038   835B 36 FF       inish0 ld (hl),255         ; kill the shrapnel.
1039   835D 19                 add hl,de           ; point there.
1040   835E 10 FB              djnz inish0         ; round again.
1041   8360 C9                 ret
1042   8361             
1043   8361             ; Check for collision between laser and sprite.
1044   8361             
1045   8361 21 B6 F9    lcol   ld hl,SHRAPN        ; shrapnel table.
1046   8364 11 06 00           ld de,SHRSIZ        ; size of each particle.
1047   8367 06 37              ld b,NUMSHR         ; number of pieces in table.
1048   8369 7E          lcol0  ld a,(hl)           ; get type.
1049   836A A7                 and a               ; is this slot a laser?
1050   836B 28 04              jr z,lcol1          ; yes, check collision.
1051   836D 19          lcol3  add hl,de           ; point to more shrapnel.
1052   836E 10 F9              djnz lcol0          ; repeat for all shrapnel.
1053   8370 C9                 ret                 ; no collision, carry not set.
1054   8371 E5          lcol1  push hl             ; store pointer to laser.
1055   8372 23                 inc hl              ; direction.
1056   8373 23                 inc hl              ; not used.
1057   8374 23                 inc hl              ; x position.
1058   8375 7E                 ld a,(hl)           ; get x.
1059   8376 DD 96 08           sub (ix+X)          ; subtract sprite x.
1060   8379 FE 10       lcolh  cp 16               ; within range?
1061   837B 30 0A              jr nc,lcol2         ; no, missed.
1062   837D 23                 inc hl              ; not used.
1063   837E 23                 inc hl              ; y position.
1064   837F 7E                 ld a,(hl)           ; get y.
1065   8380 DD 96 09           sub (ix+Y)          ; subtract sprite y.
1066   8383 FE 10              cp 16               ; within range?
1067   8385 38 03              jr c,lcol4          ; yes, collision occurred.
1068   8387 E1          lcol2  pop hl              ; restore laser pointer from stack.
1069   8388 18 E3              jr lcol3
1070   838A E1          lcol4  pop hl              ; restore laser pointer.
1071   838B C9                 ret                 ; return with carry set for collision.
1072   838C             
1073   838C             ; Main game engine code starts here.
1074   838C             
1075   838C             game   equ $
1076   838C             
1077   838C             ; Set up screen address table.
1078   838C             
1079   838C 21 00 40    setsat ld hl,16384         ; start of screen.
1080   838F 11 00 FB           ld de,SCADTB        ; screen address table.
1081   8392 06 00              ld b,0              ; vertical lines on screen.
1082   8394 EB          setsa0 ex de,hl            ; flip table and screen address.
1083   8395 72                 ld (hl),d           ; write high byte.
1084   8396 24                 inc h               ; second table.
1085   8397 73                 ld (hl),e           ; write low byte.
1086   8398 25                 dec h               ; back to first table.
1087   8399 2C                 inc l               ; next position in table.
1088   839A EB                 ex de,hl            ; flip table and screen address back again.
1089   839B CD 19 8F           call nline          ; next line down.
1090   839E 10 F4              djnz setsa0         ; repeat for all lines.
1091   83A0             
1092   83A0 CD 0F 80           call setpal         ; set up ULAplus palette.
1093   83A3 CD 53 83    rpblc2 call inishr         ; initialise particle engine.
1094   83A6 CD 3A A2    evintr call evnt12         ; call intro/menu event.
1095   83A9             
1096   83A9 21 00 FD           ld hl,MAP           ; block properties.
1097   83AC 11 01 FD           ld de,MAP+1         ; next byte.
1098   83AF 01 FF 02           ld bc,767           ; size of property map.
1099   83B2 36 02              ld (hl),WALL        ; write default property.
1100   83B4 ED B0              ldir
1101   83B6 CD 39 7F           call iniob          ; initialise objects.
1102   83B9 AF                 xor a               ; put zero in accumulator.
1103   83BA 32 39 7D           ld (gamwon),a       ; reset game won flag.
1104   83BD             
1105   83BD 21 BA 87           ld hl,score         ; score.
1106   83C0 CD DC 84           call inisc          ; init the score.
1107   83C3 3A 6C 94    mapst  ld a,(stmap)        ; start position on map.
1108   83C6 32 A1 93           ld (roomtb),a       ; set up position in table, if there is one.
1109   83C9 CD D0 8F    inipbl call initsc         ; set up first screen.
1110   83CC DD 21 90 93        ld ix,ssprit        ; default to spare sprite in table.
1111   83D0 CD 60 A3    evini  call evnt13         ; initialisation.
1112   83D3             
1113   83D3             ; Two restarts.
1114   83D3             ; First restart - clear all sprites and initialise everything.
1115   83D3             
1116   83D3 CD AD 84    rstrt  call rsevt          ; restart events.
1117   83D6 CD 22 7F           call xspr           ; clear sprite table.
1118   83D9 CD 22 91           call sprlst         ; fetch pointer to screen sprites.
1119   83DC CD 6B 91           call ispr           ; initialise sprite table.
1120   83DF 18 0C              jr rstrt0
1121   83E1             
1122   83E1             ; Second restart - clear all but player, and don't initialise him.
1123   83E1             
1124   83E1 CD AD 84    rstrtn call rsevt          ; restart events.
1125   83E4 CD 39 91           call nspr           ; clear all non-player sprites.
1126   83E7 CD 22 91           call sprlst         ; fetch pointer to screen sprites.
1127   83EA CD 91 91           call kspr           ; initialise sprite table, no more players.
1128   83ED             
1129   83ED             
1130   83ED             ; Set up the player and/or enemy sprites.
1131   83ED             
1132   83ED AF          rstrt0 xor a               ; zero in accumulator.
1133   83EE 32 36 7D           ld (nexlev),a       ; reset next level flag.
1134   83F1 32 37 7D           ld (restfl),a       ; reset restart flag.
1135   83F4 32 38 7D           ld (deadf),a        ; reset dead flag.
1136   83F7 CD A8 89           call droom          ; show screen layout.
1137   83FA CD 53 83    rpblc0 call inishr         ; initialise particle engine.
1138   83FD CD 35 86           call shwob          ; draw objects.
1139   8400 DD 21 C4 92        ld ix,sprtab        ; address of sprite table, even sprites.
1140   8404 CD A3 8D           call dspr           ; display sprites.
1141   8407 DD 21 D5 92        ld ix,sprtab+TABSIZ ; address of first odd sprite.
1142   840B CD A3 8D           call dspr           ; display sprites.
1143   840E             
1144   840E CD 5B 7F    mloop  call vsync          ; synchronise with display.
1145   8411             
1146   8411 DD 21 C4 92        ld ix,sprtab        ; address of sprite table, even sprites.
1147   8415 CD A3 8D           call dspr           ; display even sprites.
1148   8418             
1149   8418 CD 32 85           call plsnd          ; play sounds.
1150   841B CD 5B 7F           call vsync          ; synchronise with display.
1151   841E DD 21 D5 92        ld ix,sprtab+TABSIZ ; address of first odd sprite.
1152   8422 CD A3 8D           call dspr           ; display odd sprites.
1153   8425 DD 21 90 93        ld ix,ssprit        ; point to spare sprite for spawning purposes.
1154   8429 CD 37 A1    evlp1  call evnt10         ; called once per main loop.
1155   842C CD 5E 8D           call pspr           ; process sprites.
1156   842F             
1157   842F             ; Main loop events.
1158   842F             
1159   842F DD 21 90 93        ld ix,ssprit        ; point to spare sprite for spawning purposes.
1160   8433 CD 39 A2    evlp2  call evnt11         ; called once per main loop.
1161   8436             
1162   8436 CD 0F 8D    bsortx call bsort          ; sort sprites.
1163   8439 3A 36 7D           ld a,(nexlev)       ; finished level flag.
1164   843C A7                 and a               ; has it been set?
1165   843D 20 1D              jr nz,newlev        ; yes, go to next level.
1166   843F 3A 39 7D           ld a,(gamwon)       ; finished game flag.
1167   8442 A7                 and a               ; has it been set?
1168   8443 20 27              jr nz,evwon         ; yes, finish the game.
1169   8445 3A 37 7D           ld a,(restfl)       ; finished level flag.
1170   8448 3D                 dec a               ; has it been set?
1171   8449 28 88              jr z,rstrt          ; yes, go to next level.
1172   844B 3D                 dec a               ; has it been set?
1173   844C 28 93              jr z,rstrtn         ; yes, go to next level.
1174   844E             
1175   844E 3A 38 7D           ld a,(deadf)        ; dead flag.
1176   8451 A7                 and a               ; is it non-zero?
1177   8452 20 1E              jr nz,pdead         ; yes, player dead.
1178   8454             
1179   8454 21 0A 7D           ld hl,frmno         ; game frame.
1180   8457 34                 inc (hl)            ; advance the frame.
1181   8458             
1182   8458             ; Back to start of main loop.
1183   8458             
1184   8458 C3 0E 84    qoff   jp mloop            ; switched to a jp nz,mloop during test mode.
1185   845B C9                 ret
1186   845C 3A 14 7D    newlev ld a,(scno)         ; current screen.
1187   845F 21 AE E2           ld hl,numsc         ; total number of screens.
1188   8462 3C                 inc a               ; next screen.
1189   8463 BE                 cp (hl)             ; reached the limit?
1190   8464 30 06              jr nc,evwon         ; yes, game finished.
1191   8466 32 14 7D           ld (scno),a         ; set new level number.
1192   8469 C3 D3 83           jp rstrt            ; restart, clearing all aliens.
1193   846C CD 05 A5    evwon  call evnt18         ; game completed.
1194   846F C3 83 84           jp tidyup           ; tidy up and return to BASIC/calling routine.
1195   8472             
1196   8472             ; Player dead.
1197   8472             
1198   8472 AF          pdead  xor a               ; zeroise accumulator.
1199   8473 32 38 7D           ld (deadf),a        ; reset dead flag.
1200   8476 CD 74 A4    evdie  call evnt16         ; death subroutine.
1201   8479 3A 15 7D           ld a,(numlif)       ; number of lives.
1202   847C A7                 and a               ; reached zero yet?
1203   847D C2 D3 83           jp nz,rstrt         ; restart game.
1204   8480 CD AA A4    evfail call evnt17         ; failure event.
1205   8483 21 C0 87    tidyup ld hl,hiscor        ; high score.
1206   8486 11 BA 87           ld de,score         ; player's score.
1207   8489 06 06              ld b,6              ; digits to check.
1208   848B 1A          tidyu2 ld a,(de)           ; get score digit.
1209   848C BE                 cp (hl)             ; are we larger than high score digit?
1210   848D 38 06              jr c,tidyu0         ; high score is bigger.
1211   848F 20 0C              jr nz,tidyu1        ; score is greater, record new high score.
1212   8491 23                 inc hl              ; next digit of high score.
1213   8492 13                 inc de              ; next digit of score.
1214   8493 10 F6              djnz tidyu2         ; repeat for all digits.
1215   8495 21 58 27    tidyu0 ld hl,10072         ; BASIC likes this in alternate hl.
1216   8498 D9                 exx                 ; flip hl into alternate registers.
1217   8499 01 BA 87           ld bc,score         ; return pointing to score.
1218   849C C9                 ret
1219   849D 21 BA 87    tidyu1 ld hl,score         ; score.
1220   84A0 11 C0 87           ld de,hiscor        ; high score.
1221   84A3 01 06 00           ld bc,6             ; digits to copy.
1222   84A6 ED B0              ldir                ; copy score to high score.
1223   84A8 CD 3C A5    evnewh call evnt19         ; new high score event.
1224   84AB 18 E8              jr tidyu0           ; tidy up.
1225   84AD             
1226   84AD             ; Restart event.
1227   84AD             
1228   84AD DD 21 90 93 rsevt  ld ix,ssprit        ; default to spare element in table.
1229   84B1 C3 72 A4    evrs   jp evnt14           ; call restart event.
1230   84B4             
1231   84B4             ; Copy number passed in a to string position bc, right-justified.
1232   84B4             
1233   84B4 6F          num2ch ld l,a              ; put accumulator in l.
1234   84B5 26 00              ld h,0              ; blank high byte of hl.
1235   84B7 3E 20              ld a,32             ; leading spaces.
1236   84B9 11 64 00           ld de,100           ; hundreds column.
1237   84BC CD CA 84           call numdg          ; show digit.
1238   84BF 11 0A 00           ld de,10            ; tens column.
1239   84C2 CD CA 84           call numdg          ; show digit.
1240   84C5 F6 10              or 16               ; last digit is always shown.
1241   84C7 11 01 00           ld de,1             ; units column.
1242   84CA E6 30       numdg  and 48              ; clear carry, clear digit.
1243   84CC ED 52       numdg1 sbc hl,de           ; subtract from column.
1244   84CE 38 05              jr c,numdg0         ; nothing to show.
1245   84D0 F6 10              or 16               ; something to show, make it a digit.
1246   84D2 3C                 inc a               ; increment digit.
1247   84D3 18 F7              jr numdg1           ; repeat until column is zero.
1248   84D5 19          numdg0 add hl,de           ; restore total.
1249   84D6 FE 20              cp 32               ; leading space?
1250   84D8 C8                 ret z               ; yes, don't write that.
1251   84D9 02                 ld (bc),a           ; write digit to buffer.
1252   84DA 03                 inc bc              ; next buffer position.
1253   84DB C9                 ret
1254   84DC             
1255   84DC 06 06       inisc  ld b,6              ; digits to initialise.
1256   84DE 36 30       inisc0 ld (hl),'0'         ; write zero digit.
1257   84E0 23                 inc hl              ; next column.
1258   84E1 10 FB              djnz inisc0         ; repeat for all digits.
1259   84E3 C9                 ret
1260   84E4             
1261   84E4             
1262   84E4             ; Multiply h by d and return in hl.
1263   84E4             
1264   84E4 5A          imul   ld e,d              ; HL = H * D
1265   84E5 4C                 ld c,h              ; make c first multiplier.
1266   84E6 21 00 00    imul0  ld hl,0             ; zeroise total.
1267   84E9 54                 ld d,h              ; zeroise high byte.
1268   84EA 06 08              ld b,8              ; repeat 8 times.
1269   84EC CB 19       imul1  rr c                ; rotate rightmost bit into carry.
1270   84EE 30 02              jr nc,imul2         ; wasn't set.
1271   84F0 19                 add hl,de           ; bit was set, so add de.
1272   84F1 A7                 and a               ; reset carry.
1273   84F2 CB 13       imul2  rl e                ; shift de 1 bit left.
1274   84F4 CB 12              rl d
1275   84F6 10 F4              djnz imul1          ; repeat 8 times.
1276   84F8 C9                 ret
1277   84F9             
1278   84F9             ; Divide d by e and return in d, remainder in a.
1279   84F9             
1280   84F9 AF          idiv   xor a
1281   84FA 06 08              ld b,8              ; bits to shift.
1282   84FC CB 22       idiv0  sla d               ; multiply d by 2.
1283   84FE 17                 rla                 ; shift carry into remainder.
1284   84FF BB                 cp e                ; test if e is smaller.
1285   8500 38 02              jr c,idiv1          ; e is greater, no division this time.
1286   8502 93                 sub e               ; subtract it.
1287   8503 14                 inc d               ; rotate into d.
1288   8504 10 F6       idiv1  djnz idiv0
1289   8506 C9                 ret
1290   8507             
1291   8507             ; Initialise a sound.
1292   8507             
1293   8507 ED 5B 2C 85 isnd   ld de,(ch1ptr)      ; first pointer.
1294   850B 1A                 ld a,(de)           ; get first byte.
1295   850C 3C                 inc a               ; reached the end?
1296   850D 28 11              jr z,isnd1          ; that'll do.
1297   850F ED 5B 2E 85        ld de,(ch2ptr)      ; second pointer.
1298   8513 1A                 ld a,(de)           ; get first byte.
1299   8514 3C                 inc a               ; reached the end?
1300   8515 28 0D              jr z,isnd2          ; that'll do.
1301   8517 ED 5B 30 85        ld de,(ch3ptr)      ; final pointer.
1302   851B 1A                 ld a,(de)           ; get first byte.
1303   851C 3C                 inc a               ; reached the end?
1304   851D 28 09              jr z,isnd3          ; that'll do.
1305   851F C9                 ret
1306   8520 22 2C 85    isnd1  ld (ch1ptr),hl      ; set up the sound.
1307   8523 C9                 ret
1308   8524 22 2E 85    isnd2  ld (ch2ptr),hl      ; set up the sound.
1309   8527 C9                 ret
1310   8528 22 30 85    isnd3  ld (ch3ptr),hl      ; set up the sound.
1311   852B C9                 ret
1312   852C             
1313   852C             
1314   852C 68 8E       ch1ptr defw spmask
1315   852E 68 8E       ch2ptr defw spmask
1316   8530 68 8E       ch3ptr defw spmask
1317   8532             
1318   8532 CD 0A 86    plsnd  call plsnd1         ; first channel.
1319   8535 CD 6A 85           call plsnd2         ; second one.
1320   8538 CD 95 85           call plsnd3         ; final channel.
1321   853B             
1322   853B             ; Write the contents of our AY buffer to the AY registers.
1323   853B             
1324   853B 21 53 85    w8912  ld hl,snddat        ; start of AY-3-8912 register data.
1325   853E 11 00 0E           ld de,14*256        ; start with register 0, 14 to write.
1326   8541 0E FD              ld c,253            ; low byte of port to write.
1327   8543 06 FF       w8912a ld b,255            ; port 65533=select soundchip register.
1328   8545 ED 59              out (c),e           ; tell chip which register we're writing.
1329   8547 7E                 ld a,(hl)           ; value to write.
1330   8548 06 BF              ld b,191            ; port 49149=write value to register.
1331   854A ED 79              out (c),a           ; this is what we're putting there.
1332   854C 1C                 inc e               ; next sound chip register.
1333   854D 23                 inc hl              ; next byte to write.
1334   854E 15                 dec d               ; decrement loop counter.
1335   854F C2 43 85           jp nz,w8912a        ; repeat until done.
1336   8552 C9                 ret
1337   8553             
1338   8553 00 00       snddat defw 0              ; tone registers, channel A.
1339   8555 00 00              defw 0              ; channel B tone registers.
1340   8557 00 00              defw 0              ; as above, channel C.
1341   8559 00          sndwnp defb 0              ; white noise period.
1342   855A 3C          sndmix defb 60             ; tone/noise mixer control.
1343   855B 00          sndv1  defb 0              ; channel A amplitude/envelope generator.
1344   855C 00          sndv2  defb 0              ; channel B amplitude/envelope.
1345   855D 00          sndv3  defb 0              ; channel C amplitude/envelope.
1346   855E 00 00              defw 0              ; duration of each note.
1347   8560 00                 defb 0
1348   8561             
1349   8561 23          plwn   inc hl              ; next byte of sound.
1350   8562 E6 38              and 56              ; check if we're bothering with white noise.
1351   8564 C0                 ret nz              ; we're not.
1352   8565 7E                 ld a,(hl)           ; fetch byte.
1353   8566 32 59 85           ld (sndwnp),a       ; set white noise period.
1354   8569 C9                 ret
1355   856A             
1356   856A             
1357   856A CD 00 86    plsnd2 call cksnd2         ; check sound for first channel.
1358   856D FE FF              cp 255              ; reached end?
1359   856F 28 70              jr z,silen2         ; silence this channel.
1360   8571 E6 0F              and 15              ; sound bits.
1361   8573 32 5C 85           ld (sndv2),a        ; set volume for channel.
1362   8576 3A 5A 85           ld a,(sndmix)       ; mixer byte.
1363   8579 E6 ED              and 237             ; remove bits for this channel.
1364   857B 47                 ld b,a              ; store in b register.
1365   857C CD C0 85           call plmix          ; fetch mixer details.
1366   857F E6 12              and 18              ; mixer bits we want.
1367   8581 B0                 or b                ; combine with mixer bits.
1368   8582 32 5A 85           ld (sndmix),a       ; new mixer value.
1369   8585 CD 61 85           call plwn           ; white noise check.
1370   8588 23                 inc hl              ; tone low.
1371   8589 5E                 ld e,(hl)           ; fetch value.
1372   858A 23                 inc hl              ; tone high.
1373   858B 56                 ld d,(hl)           ; fetch value.
1374   858C ED 53 55 85        ld (snddat+2),de    ; set tone.
1375   8590 23                 inc hl              ; next bit of sound.
1376   8591 22 2E 85           ld (ch2ptr),hl      ; set pointer.
1377   8594 C9                 ret
1378   8595             
1379   8595 CD 05 86    plsnd3 call cksnd3         ; check sound for first channel.
1380   8598 FE FF              cp 255              ; reached end?
1381   859A 28 52              jr z,silen3         ; silence last channel.
1382   859C E6 0F              and 15              ; sound bits.
1383   859E 32 5D 85           ld (sndv3),a        ; set volume for channel.
1384   85A1 3A 5A 85           ld a,(sndmix)       ; mixer byte.
1385   85A4 E6 DB              and 219             ; remove bits for this channel.
1386   85A6 47                 ld b,a              ; store in b register.
1387   85A7 CD C0 85           call plmix          ; fetch mixer details.
1388   85AA E6 24              and 36              ; mixer bits we want.
1389   85AC B0                 or b                ; combine with mixer bits.
1390   85AD 32 5A 85           ld (sndmix),a       ; new mixer value.
1391   85B0 CD 61 85           call plwn           ; white noise check.
1392   85B3 23                 inc hl              ; tone low.
1393   85B4 5E                 ld e,(hl)           ; fetch value.
1394   85B5 23                 inc hl              ; tone high.
1395   85B6 56                 ld d,(hl)           ; fetch value.
1396   85B7 ED 53 57 85        ld (snddat+4),de    ; set tone.
1397   85BB 23                 inc hl              ; next bit of sound.
1398   85BC 22 30 85           ld (ch3ptr),hl      ; set pointer.
1399   85BF C9                 ret
1400   85C0             
1401   85C0 7E          plmix  ld a,(hl)           ; fetch mixer byte.
1402   85C1 E6 C0              and 192             ; mix bits are d6 and d7.
1403   85C3 07                 rlca                ; rotate into d0 and d1.
1404   85C4 07                 rlca
1405   85C5 5F                 ld e,a              ; displacement in de.
1406   85C6 16 00              ld d,0
1407   85C8 E5                 push hl             ; store pointer on stack.
1408   85C9 21 D0 85           ld hl,mixtab        ; mixer table.
1409   85CC 19                 add hl,de           ; point to mixer byte.
1410   85CD 7E                 ld a,(hl)           ; fetch mixer value.
1411   85CE E1                 pop hl              ; restore pointer.
1412   85CF C9                 ret
1413   85D0 3F 38 07 00 mixtab defb 63,56,7,0      ; mixer byte settings.
1414   85D4             
1415   85D4 AF          silen1 xor a               ; zero.
1416   85D5 32 5B 85           ld (sndv1),a        ; sound off.
1417   85D8 3A 5A 85           ld a,(sndmix)       ; mixer byte.
1418   85DB F6 09              or 9                ; mix bits off.
1419   85DD 32 5A 85           ld (sndmix),a       ; mixer setting for channel.
1420   85E0 C9                 ret
1421   85E1 AF          silen2 xor a               ; zero.
1422   85E2 32 5C 85           ld (sndv2),a        ; sound off.
1423   85E5 3A 5A 85           ld a,(sndmix)       ; mixer byte.
1424   85E8 F6 12              or 18               ; mix bits off.
1425   85EA 32 5A 85           ld (sndmix),a       ; mixer setting for channel.
1426   85ED C9                 ret
1427   85EE AF          silen3 xor a               ; zero.
1428   85EF 32 5D 85           ld (sndv3),a        ; sound off.
1429   85F2 3A 5A 85           ld a,(sndmix)       ; mixer byte.
1430   85F5 F6 24              or 36               ; mix bits off.
1431   85F7 32 5A 85           ld (sndmix),a       ; mixer setting for channel.
1432   85FA C9                 ret
1433   85FB 2A 2C 85    cksnd1 ld hl,(ch1ptr)      ; pointer to sound.
1434   85FE 7E                 ld a,(hl)           ; fetch mixer/flag.
1435   85FF C9                 ret
1436   8600 2A 2E 85    cksnd2 ld hl,(ch2ptr)      ; pointer to sound.
1437   8603 7E                 ld a,(hl)           ; fetch mixer/flag.
1438   8604 C9                 ret
1439   8605 2A 30 85    cksnd3 ld hl,(ch3ptr)      ; pointer to sound.
1440   8608 7E                 ld a,(hl)           ; fetch mixer/flag.
1441   8609 C9                 ret
1442   860A             
1443   860A CD FB 85    plsnd1 call cksnd1         ; check sound for first channel.
1444   860D FE FF              cp 255              ; reached end?
1445   860F 28 C3              jr z,silen1         ; silence first channel.
1446   8611 E6 0F              and 15              ; sound bits.
1447   8613 32 5B 85           ld (sndv1),a        ; set volume for channel.
1448   8616 3A 5A 85           ld a,(sndmix)       ; mixer byte.
1449   8619 E6 F6              and 246             ; remove bits for this channel.
1450   861B 47                 ld b,a              ; store in b register.
1451   861C CD C0 85           call plmix          ; fetch mixer details.
1452   861F E6 09              and 9               ; mixer bits we want.
1453   8621 B0                 or b                ; combine with mixer bits.
1454   8622 32 5A 85           ld (sndmix),a       ; new mixer value.
1455   8625 CD 61 85           call plwn           ; white noise check.
1456   8628 23                 inc hl              ; tone low.
1457   8629 5E                 ld e,(hl)           ; fetch value.
1458   862A 23                 inc hl              ; tone high.
1459   862B 56                 ld d,(hl)           ; fetch value.
1460   862C ED 53 53 85        ld (snddat),de      ; set tone.
1461   8630 23                 inc hl              ; next bit of sound.
1462   8631 22 2C 85           ld (ch1ptr),hl      ; set pointer.
1463   8634 C9                 ret
1464   8635             
1465   8635             
1466   8635             ; Objects handling.
1467   8635             ; 32 bytes for image
1468   8635             ; 1 for colour
1469   8635             ; 3 for room, x and y
1470   8635             ; 3 for starting room, x and y.
1471   8635             ; 254 = disabled.
1472   8635             ; 255 = object in player's pockets.
1473   8635             
1474   8635             ; Show items present.
1475   8635             
1476   8635 21 8B E4    shwob  ld hl,objdta        ; objects table.
1477   8638 11 21 00           ld de,33            ; distance to room number.
1478   863B 19                 add hl,de           ; point to room data.
1479   863C 3A 0F 7D           ld a,(numob)        ; number of objects in the game.
1480   863F 47                 ld b,a              ; loop counter.
1481   8640 C5          shwob0 push bc             ; store count.
1482   8641 E5                 push hl             ; store item pointer.
1483   8642 3A 14 7D           ld a,(scno)         ; current location.
1484   8645 BE                 cp (hl)             ; same as an item?
1485   8646 CC 61 86           call z,dobjc        ; yes, display object in colour.
1486   8649 E1                 pop hl              ; restore pointer.
1487   864A C1                 pop bc              ; restore counter.
1488   864B 11 27 00           ld de,39            ; distance to next item.
1489   864E 19                 add hl,de           ; point to it.
1490   864F 10 EF              djnz shwob0         ; repeat for others.
1491   8651 C9                 ret
1492   8652             
1493   8652             ; Display object.
1494   8652             ; hl must point to object's room number.
1495   8652             
1496   8652 23          dobj   inc hl              ; point to x.
1497   8653 11 3A 7D    dobj0  ld de,dispx         ; coordinates.
1498   8656 ED A0              ldi                 ; transfer x coord.
1499   8658 ED A0              ldi                 ; transfer y too.
1500   865A 11 DC FF           ld de,65500         ; minus 36.
1501   865D 19                 add hl,de           ; point to image.
1502   865E C3 36 89    dobj1  jp sprite           ; draw this sprite.
1503   8661             
1504   8661 CD 52 86    dobjc  call dobj           ; display object.
1505   8664 4E                 ld c,(hl)           ; put ink in c register.
1506   8665             
1507   8665             ; Need to write attribute routine here.
1508   8665             ; set up colour in c register first.
1509   8665             
1510   8665 7E          cobj   ld a,(hl)           ; get colour byte.
1511   8666 A7                 and a               ; test it.
1512   8667 F8                 ret m               ; colour not set.
1513   8668 26 16              ld h,22             ; quarter of attrubte address.
1514   866A 3A 3A 7D           ld a,(dispx)        ; x coord.
1515   866D E6 F8              and 248             ; only want multiple of 8.
1516   866F 17                 rla                 ; multiply by 4.
1517   8670 CB 14              rl h
1518   8672 17                 rla
1519   8673 CB 14              rl h                ; high byte now set up.
1520   8675 6F                 ld l,a
1521   8676 3A 3B 7D           ld a,(dispy)        ; take y position.
1522   8679 1F                 rra                 ; divide it by 8.
1523   867A 1F                 rra
1524   867B 1F                 rra
1525   867C E6 1F              and 31              ; remove unwanted bits.
1526   867E 85                 add a,l             ; add to low byte.
1527   867F 6F                 ld l,a              ; low byte of address.
1528   8680                    
1529   8680 11 1E 00           ld de,30            ; distance to next line down.
1530   8683 3A 3A 7D           ld a,(dispx)        ; x coordinate.
1531   8686 06 03              ld b,3              ; default rows to write.
1532   8688 E6 07              and 7               ; does x straddle cells?
1533   868A 20 01              jr nz,cobj0         ; yes, loop counter is good.
1534   868C 05                 dec b               ; one less row to write.
1535   868D 7E          cobj0  ld a,(hl)           ; get attributes.
1536   868E E6 F8              and 248             ; remove ink.
1537   8690 B1                 or c                ; put in the new ink.
1538   8691 77                 ld (hl),a           ; write back again.
1539   8692 2C                 inc l               ; next cell.
1540   8693 7E                 ld a,(hl)           ; get attributes.
1541   8694 E6 F8              and 248             ; remove ink.
1542   8696 B1                 or c                ; put in the new ink.
1543   8697 77                 ld (hl),a           ; write back again.
1544   8698 2C                 inc l               ; next cell.
1545   8699 3A 3B 7D           ld a,(dispy)        ; y coordinate.
1546   869C E6 07              and 7               ; straddling cells?
1547   869E 28 05              jr z,cobj1          ; no, only 2 wide.
1548   86A0 7E                 ld a,(hl)           ; get attributes.
1549   86A1 E6 F8              and 248             ; remove ink.
1550   86A3 B1                 or c                ; put in the new ink.
1551   86A4 77                 ld (hl),a           ; write back again.
1552   86A5 19          cobj1  add hl,de           ; next row.
1553   86A6 10 E5              djnz cobj0
1554   86A8 C9                 ret
1555   86A9             
1556   86A9             ; Remove an object.
1557   86A9             
1558   86A9 21 0F 7D    remob  ld hl,numob         ; number of objects in game.
1559   86AC BE                 cp (hl)             ; are we checking past the end?
1560   86AD D0                 ret nc              ; yes, can't get non-existent item.
1561   86AE F5                 push af             ; remember object.
1562   86AF CD B9 86           call getob          ; pick it up if we haven't already got it.
1563   86B2 F1                 pop af              ; retrieve object number.
1564   86B3 CD E7 86           call gotob          ; get its address.
1565   86B6 36 FE              ld (hl),254         ; remove it.
1566   86B8 C9                 ret
1567   86B9             
1568   86B9             ; Pick up object number held in the accumulator.
1569   86B9             
1570   86B9 21 0F 7D    getob  ld hl,numob         ; number of objects in game.
1571   86BC BE                 cp (hl)             ; are we checking past the end?
1572   86BD D0                 ret nc              ; yes, can't get non-existent item.
1573   86BE CD E7 86           call gotob          ; check if we already have it.
1574   86C1 C8                 ret z               ; we already do.
1575   86C2 EB                 ex de,hl            ; object address in de.
1576   86C3 21 14 7D           ld hl,scno          ; current screen.
1577   86C6 BE                 cp (hl)             ; is it on this screen?
1578   86C7 EB                 ex de,hl            ; object address back in hl.
1579   86C8 20 1A              jr nz,getob0        ; not on screen, so nothing to delete.
1580   86CA 36 FF              ld (hl),255         ; pick it up.
1581   86CC 23                 inc hl              ; point to x coord.
1582   86CD 5E          getob1 ld e,(hl)           ; x coord.
1583   86CE 23                 inc hl              ; back to y coord.
1584   86CF 56                 ld d,(hl)           ; y coord.
1585   86D0 ED 53 3A 7D        ld (dispx),de       ; set display coords.
1586   86D4 11 DD FF           ld de,65501         ; minus graphic size.
1587   86D7 19                 add hl,de           ; point to graphics.
1588   86D8 CD 5E 86           call dobj1          ; delete object sprite.
1589   86DB 3A E4 AB           ld a,(bcol)         ; first block colour.
1590   86DE E6 07              and 7               ; only want ink attribute.
1591   86E0 4F                 ld c,a              ; set up colour.
1592   86E1 C3 65 86           jp cobj             ; colour object's old position.
1593   86E4 36 FF       getob0 ld (hl),255         ; pick it up.
1594   86E6 C9                 ret
1595   86E7             
1596   86E7             ; Got object check.
1597   86E7             ; Call with object in accumulator, returns zero set if in pockets.
1598   86E7             
1599   86E7 21 0F 7D    gotob  ld hl,numob         ; number of objects in game.
1600   86EA BE                 cp (hl)             ; are we checking past the end?
1601   86EB 30 06              jr nc,gotob0        ; yes, we can't have a non-existent object.
1602   86ED CD F7 86           call findob         ; find the object.
1603   86F0 FE FF       gotob1 cp 255              ; in pockets?
1604   86F2 C9                 ret
1605   86F3 3E FE       gotob0 ld a,254            ; missing.
1606   86F5 18 F9              jr gotob1
1607   86F7             
1608   86F7 21 8B E4    findob ld hl,objdta        ; objects.
1609   86FA 11 27 00           ld de,39            ; size of each object.
1610   86FD A7                 and a               ; is it zero?
1611   86FE 28 04              jr z,fndob1         ; yes, skip loop.
1612   8700 47                 ld b,a              ; loop counter in b.
1613   8701 19          fndob2 add hl,de           ; point to next one.
1614   8702 10 FD              djnz fndob2         ; repeat until we find address.
1615   8704 1E 21       fndob1 ld e,33             ; distance to room it's in.
1616   8706 19                 add hl,de           ; point to room.
1617   8707 7E                 ld a,(hl)           ; fetch status.
1618   8708 C9                 ret
1619   8709             
1620   8709             ; Drop object number at (dispx, dispy).
1621   8709             
1622   8709 21 0F 7D    drpob  ld hl,numob         ; number of objects in game.
1623   870C BE                 cp (hl)             ; are we checking past the end?
1624   870D D0                 ret nc              ; yes, can't drop non-existent item.
1625   870E CD E7 86           call gotob          ; make sure object is in inventory.
1626   8711 3A 14 7D           ld a,(scno)         ; screen number.
1627   8714 BE                 cp (hl)             ; already on this screen?
1628   8715 C8                 ret z               ; yes, nothing to do.
1629   8716 77                 ld (hl),a           ; bring onto screen.
1630   8717 23                 inc hl              ; point to x coord.
1631   8718 3A 3A 7D           ld a,(dispx)        ; sprite x coordinate.
1632   871B 77                 ld (hl),a           ; set x coord.
1633   871C 23                 inc hl              ; point to object y.
1634   871D 3A 3B 7D           ld a,(dispy)        ; sprite y coordinate.
1635   8720 77                 ld (hl),a           ; set the y position.
1636   8721 11 DD FF           ld de,65501         ; minus graphic size.
1637   8724 19                 add hl,de           ; point to graphics.
1638   8725 CD 5E 86           call dobj1          ; delete object sprite.
1639   8728 4E                 ld c,(hl)           ; put ink in c register.
1640   8729 C3 65 86           jp cobj             ; colour the object.
1641   872C             
1642   872C             ; Seek objects at sprite position.
1643   872C             
1644   872C 21 8B E4    skobj  ld hl,objdta        ; pointer to objects.
1645   872F 11 21 00           ld de,33            ; distance to room number.
1646   8732 19                 add hl,de           ; point to room data.
1647   8733 11 27 00           ld de,39            ; size of each object.
1648   8736 3A 0F 7D           ld a,(numob)        ; number of objects in game.
1649   8739 47                 ld b,a              ; set up the loop counter.
1650   873A 3A 14 7D    skobj0 ld a,(scno)         ; current room number.
1651   873D BE                 cp (hl)             ; is object in here?
1652   873E CC 47 87           call z,skobj1       ; yes, check coordinates.
1653   8741 19                 add hl,de           ; point to next object in table.
1654   8742 10 F6              djnz skobj0         ; repeat for all objects.
1655   8744 3E FF              ld a,255            ; end of list and nothing found, return 255.
1656   8746 C9                 ret
1657   8747 23          skobj1 inc hl              ; point to x coordinate.
1658   8748 7E                 ld a,(hl)           ; get coordinate.
1659   8749 DD 96 08           sub (ix+8)          ; subtract sprite x.
1660   874C C6 0F              add a,15            ; add sprite height minus one.
1661   874E FE 1F              cp 31               ; within range?
1662   8750 D2 66 87           jp nc,skobj2        ; no, ignore object.
1663   8753 23                 inc hl              ; point to y coordinate now.
1664   8754 7E                 ld a,(hl)           ; get coordinate.
1665   8755 DD 96 09           sub (ix+9)          ; subtract the sprite y.
1666   8758 C6 0F              add a,15            ; add sprite width minus one.
1667   875A FE 1F              cp 31               ; within range?
1668   875C D2 65 87           jp nc,skobj3        ; no, ignore object.
1669   875F D1                 pop de              ; remove return address from stack.
1670   8760 3A 0F 7D           ld a,(numob)        ; objects in game.
1671   8763 90                 sub b               ; subtract loop counter.
1672   8764 C9                 ret                 ; accumulator now points to object.
1673   8765 2B          skobj3 dec hl              ; back to y position.
1674   8766 2B          skobj2 dec hl              ; back to room.
1675   8767 C9                 ret
1676   8768             
1677   8768             
1678   8768             ; Spawn a new sprite.
1679   8768             
1680   8768 21 C4 92    spawn  ld hl,sprtab        ; sprite table.
1681   876B 3E 0C       numsp1 ld a,NUMSPR         ; number of sprites.
1682   876D 11 11 00           ld de,TABSIZ        ; size of each entry.
1683   8770 08          spaw0  ex af,af'           ; store loop counter.
1684   8771 7E                 ld a,(hl)           ; get sprite type.
1685   8772 3C                 inc a               ; is it an unused slot?
1686   8773 28 05              jr z,spaw1          ; yes, we can use this one.
1687   8775 19                 add hl,de           ; point to next sprite in table.
1688   8776 08                 ex af,af'           ; restore loop counter.
1689   8777 3D                 dec a               ; one less iteration.
1690   8778 20 F6              jr nz,spaw0         ; keep going until we find a slot.
1691   877A             
1692   877A             ; Didn't find one but drop through and set up a dummy sprite instead.
1693   877A             
1694   877A DD E5       spaw1  push ix             ; existing sprite address on stack.
1695   877C 22 B7 87           ld (spptr),hl       ; store spawned sprite address.
1696   877F 71                 ld (hl),c           ; set the type.
1697   8780 23                 inc hl              ; point to image.
1698   8781 70                 ld (hl),b           ; set the image.
1699   8782 23                 inc hl              ; next byte.
1700   8783 36 00              ld (hl),0           ; frame zero.
1701   8785 23                 inc hl              ; next byte.
1702   8786 DD 7E 08           ld a,(ix+X)         ; x coordinate.
1703   8789 77                 ld (hl),a           ; set sprite coordinate.
1704   878A 23                 inc hl              ; next byte.
1705   878B DD 7E 09           ld a,(ix+Y)         ; y coordinate.
1706   878E 77                 ld (hl),a           ; set sprite coordinate.
1707   878F 23                 inc hl              ; next byte.
1708   8790 EB                 ex de,hl            ; swap address into de.
1709   8791 2A B7 87           ld hl,(spptr)       ; restore address of details.
1710   8794 01 05 00           ld bc,5             ; number of bytes to duplicate.
1711   8797 ED B0              ldir                ; copy first version to new version.
1712   8799 EB                 ex de,hl            ; swap address into de.
1713   879A DD 7E 0A           ld a,(ix+10)        ; direction of original.
1714   879D 77                 ld (hl),a           ; set the direction.
1715   879E 23                 inc hl              ; next byte.
1716   879F 70                 ld (hl),b           ; reset parameter.
1717   87A0 23                 inc hl              ; next byte.
1718   87A1 70                 ld (hl),b           ; reset parameter.
1719   87A2 23                 inc hl              ; next byte.
1720   87A3 70                 ld (hl),b           ; reset parameter.
1721   87A4 23                 inc hl              ; next byte.
1722   87A5 70                 ld (hl),b           ; reset parameter.
1723   87A6 DD 2A B7 87 rtssp  ld ix,(spptr)       ; address of new sprite.
1724   87AA CD 0F A1    evis1  call evnt09         ; call sprite initialisation event.
1725   87AD DD 2A B7 87        ld ix,(spptr)       ; address of new sprite.
1726   87B1 CD 70 8E           call sspria         ; display the new sprite.
1727   87B4 DD E1              pop ix              ; address of original sprite.
1728   87B6 C9                 ret
1729   87B7             
1730   87B7 00 00       spptr  defw 0              ; spawned sprite pointer.
1731   87B9 00          seed   defb 0              ; seed for random numbers.
1732   87BA             score  defb '000000'       ; player's score.
1732   87BA 303030303030
1733   87C0             hiscor defb '000000'       ; high score.
1733   87C0 303030303030
1734   87C6             bonus  defb '000000'       ; bonus.
1734   87C6 303030303030
1735   87CC 00 3C       grbase defw 15360          ; graphics base address.
1736   87CE             
1737   87CE 7B          checkx ld a,e              ; x position.
1738   87CF FE 18              cp 24               ; off screen?
1739   87D1 D8                 ret c               ; no, it's okay.
1740   87D2 E1                 pop hl              ; remove return address from stack.
1741   87D3 C9                 ret
1742   87D4             
1743   87D4             ; Displays the current high score.
1744   87D4             
1745   87D4 21 C0 87    dhisc  ld hl,hiscor        ; high score text.
1746   87D7 18 03              jr dscor1           ; check in printable range then show 6 digits.
1747   87D9             
1748   87D9             ; Displays the current score.
1749   87D9             
1750   87D9 21 BA 87    dscor  ld hl,score         ; score text.
1751   87DC CD F2 8C    dscor1 call preprt         ; set up font and print position.
1752   87DF CD CE 87           call checkx         ; make sure we're in a printable range.
1753   87E2 06 06              ld b,6              ; digits to display.
1754   87E4 3A 5F 8C           ld a,(prtmod)       ; get print mode.
1755   87E7 A7                 and a               ; standard size text?
1756   87E8 C2 0E 88           jp nz,bscor0        ; no, show double-height.
1757   87EB C5          dscor0 push bc             ; place counter onto the stack.
1758   87EC E5                 push hl
1759   87ED 7E                 ld a,(hl)           ; fetch character.
1760   87EE CD CE 88           call pchar          ; display character.
1761   87F1 CD B6 88           call gaadd          ; get attribute address.
1762   87F4 3A 8D 5C           ld a,(23693)        ; current cell colours.
1763   87F7 77                 ld (hl),a           ; write to attribute cell.
1764   87F8 21 3B 7D           ld hl,dispy         ; y coordinate.
1765   87FB 34                 inc (hl)            ; move along one.
1766   87FC E1                 pop hl
1767   87FD 23                 inc hl              ; next score column.
1768   87FE C1                 pop bc              ; retrieve character counter.
1769   87FF 10 EA              djnz dscor0         ; repeat for all digits.
1770   8801 2A 3E 7D           ld hl,(blkptr)      ; blocks.
1771   8804 22 CC 87           ld (grbase),hl      ; set graphics base.
1772   8807 2A 3A 7D    dscor2 ld hl,(dispx)       ; general coordinates.
1773   880A 22 2F 7D           ld (charx),hl       ; set up display coordinates.
1774   880D C9                 ret
1775   880E             
1776   880E             ; Displays the current score in double-height characters.
1777   880E             
1778   880E C5          bscor0 push bc             ; place counter onto the stack.
1779   880F E5                 push hl
1780   8810 7E                 ld a,(hl)           ; fetch character.
1781   8811 CD 83 8C           call bchar          ; display big char.
1782   8814 E1                 pop hl
1783   8815 23                 inc hl              ; next score column.
1784   8816 C1                 pop bc              ; retrieve character counter.
1785   8817 10 F5              djnz bscor0         ; repeat for all digits.
1786   8819 C3 07 88           jp dscor2           ; tidy up line and column variables.
1787   881C             
1788   881C             ; Adds number in the hl pair to the score.
1789   881C             
1790   881C 11 BB 87    addsc  ld de,score+1       ; ten thousands column.
1791   881F 01 10 27           ld bc,10000         ; amount to add each time.
1792   8822 CD 3E 88           call incsc          ; add to score.
1793   8825 13                 inc de              ; thousands column.
1794   8826 01 E8 03           ld bc,1000          ; amount to add each time.
1795   8829 CD 3E 88           call incsc          ; add to score.
1796   882C 13                 inc de              ; hundreds column.
1797   882D 01 64 00           ld bc,100           ; amount to add each time.
1798   8830 CD 3E 88           call incsc          ; add to score.
1799   8833 13                 inc de              ; tens column.
1800   8834 01 0A 00           ld bc,10            ; amount to add each time.
1801   8837 CD 3E 88           call incsc          ; add to score.
1802   883A 13                 inc de              ; units column.
1803   883B 01 01 00           ld bc,1             ; units.
1804   883E E5          incsc  push hl             ; store amount to add.
1805   883F A7                 and a               ; clear the carry flag.
1806   8840 ED 42              sbc hl,bc           ; subtract from amount to add.
1807   8842 38 09              jr c,incsc0         ; too much, restore value.
1808   8844 F1                 pop af              ; delete the previous amount from the stack.
1809   8845 D5                 push de             ; store column position.
1810   8846 CD 4F 88           call incsc2         ; do the increment.
1811   8849 D1                 pop de              ; restore column.
1812   884A C3 3E 88           jp incsc            ; repeat until all added.
1813   884D E1          incsc0 pop hl              ; restore previous value.
1814   884E C9                 ret
1815   884F 1A          incsc2 ld a,(de)           ; get amount.
1816   8850 3C                 inc a               ; add one to column.
1817   8851 12                 ld (de),a           ; write new column total.
1818   8852 FE 3A              cp '9'+1            ; gone beyond range of digits?
1819   8854 D8                 ret c               ; no, carry on.
1820   8855 3E 30              ld a,'0'            ; mae it zero.
1821   8857 12                 ld (de),a           ; write new column total.
1822   8858 1B                 dec de              ; back one column.
1823   8859 18 F4              jr incsc2
1824   885B             
1825   885B             ; Add bonus to score.
1826   885B             
1827   885B 11 BF 87    addbo  ld de,score+5       ; last score digit.
1828   885E 21 CB 87           ld hl,bonus+5       ; last bonus digit.
1829   8861 A7                 and a               ; clear carry.
1830   8862 01 30 06           ld bc,6*256+48      ; 6 digits to add, ASCII '0' in c.
1831   8865 1A          addbo0 ld a,(de)           ; get score.
1832   8866 8E                 adc a,(hl)          ; add bonus.
1833   8867 91                 sub c               ; 0 to 18.
1834   8868 71                 ld (hl),c           ; zeroise bonus.
1835   8869 2B                 dec hl              ; next bonus.
1836   886A FE 3A              cp 58               ; carried?
1837   886C 38 02              jr c,addbo1         ; no, do next one.
1838   886E D6 0A              sub 10              ; subtract 10.
1839   8870 12          addbo1 ld (de),a           ; write new score.
1840   8871 1B                 dec de              ; next score digit.
1841   8872 3F                 ccf                 ; set carry for next digit.
1842   8873 10 F0              djnz addbo0         ; repeat for all 6 digits.
1843   8875 C9                 ret
1844   8876             
1845   8876             ; Swap score and bonus.
1846   8876             
1847   8876 11 BA 87    swpsb  ld de,score         ; first score digit.
1848   8879 21 C6 87           ld hl,bonus         ; first bonus digit.
1849   887C 06 06              ld b,6              ; digits to add.
1850   887E 1A          swpsb0 ld a,(de)           ; get score and bonus digits.
1851   887F 4E                 ld c,(hl)
1852   8880 EB                 ex de,hl            ; swap pointers.
1853   8881 71                 ld (hl),c           ; write bonus and score digits.
1854   8882 12                 ld (de),a
1855   8883 23                 inc hl              ; next score and bonus.
1856   8884 13                 inc de
1857   8885 10 F7              djnz swpsb0         ; repeat for all 6 digits.
1858   8887 C9                 ret
1859   8888             
1860   8888             ; Get print address.
1861   8888             
1862   8888 3A 3A 7D    gprad  ld a,(dispx)        ; returns scr. add. in de.
1863   888B 5F                 ld e,a              ; place in e for now.
1864   888C E6 18              and 24              ; which of 3 segments do we need?
1865   888E C6 40              add a,64            ; add 64 for start address of screen.
1866   8890 57                 ld d,a              ; that's our high byte.
1867   8891 7B                 ld a,e              ; restore x coordinate.
1868   8892 0F                 rrca                ; multiply by 32.
1869   8893 0F                 rrca
1870   8894 0F                 rrca
1871   8895 E6 E0              and 224             ; lines within segment.
1872   8897 5F                 ld e,a              ; set up low byte for x.
1873   8898 3A 3B 7D           ld a,(dispy)        ; now get y coordinate.
1874   889B 83                 add a,e             ; add to low byte.
1875   889C 5F                 ld e,a              ; final low byte.
1876   889D C9                 ret
1877   889E             
1878   889E             ; Get property buffer address of char at (dispx, dispy) in hl.
1879   889E             
1880   889E 3A 3A 7D    pradd  ld a,(dispx)        ; x coordinate.
1881   88A1 0F                 rrca                ; multiply by 32.
1882   88A2 0F                 rrca
1883   88A3 0F                 rrca
1884   88A4 6F                 ld l,a              ; store shift in l.
1885   88A5 E6 03              and 3               ; high byte bits.
1886   88A7 C6 FD              add a,253           ; 88 * 256 = 64768, start of properties map.
1887   88A9 67                 ld h,a              ; that's our high byte.
1888   88AA 7D                 ld a,l              ; restore shift result.
1889   88AB E6 E0              and 224             ; only want low bits.
1890   88AD 6F                 ld l,a              ; put into low byte.
1891   88AE 3A 3B 7D           ld a,(dispy)        ; fetch y coordinate.
1892   88B1 E6 1F              and 31              ; should be in range 0 - 31.
1893   88B3 85                 add a,l             ; add to low byte.
1894   88B4 6F                 ld l,a              ; new low byte.
1895   88B5 C9                 ret
1896   88B6             
1897   88B6             ; Get attribute address of char at (dispx, dispy) in hl.
1898   88B6             
1899   88B6 3A 3A 7D    gaadd  ld a,(dispx)        ; x coordinate.
1900   88B9 0F                 rrca                ; multiply by 32.
1901   88BA 0F                 rrca
1902   88BB 0F                 rrca
1903   88BC 6F                 ld l,a              ; store shift in l.
1904   88BD E6 03              and 3               ; high byte bits.
1905   88BF C6 58              add a,88            ; 88 * 256 = 22528, start of screen attributes.
1906   88C1 67                 ld h,a              ; that's our high byte.
1907   88C2 7D                 ld a,l              ; restore shift result.
1908   88C3 E6 E0              and 224             ; only want low bits.
1909   88C5 6F                 ld l,a              ; put into low byte.
1910   88C6 3A 3B 7D           ld a,(dispy)        ; fetch y coordinate.
1911   88C9 E6 1F              and 31              ; should be in range 0 - 31.
1912   88CB 85                 add a,l             ; add to low byte.
1913   88CC 6F                 ld l,a              ; new low byte.
1914   88CD C9                 ret
1915   88CE             
1916   88CE 07          pchar  rlca                ; multiply char by 8.
1917   88CF 07                 rlca
1918   88D0 07                 rlca
1919   88D1 5F                 ld e,a              ; store shift in e.
1920   88D2 E6 07              and 7               ; only want high byte bits.
1921   88D4 57                 ld d,a              ; store in d.
1922   88D5 7B                 ld a,e              ; restore shifted value.
1923   88D6 E6 F8              and 248             ; only want low byte bits.
1924   88D8 5F                 ld e,a              ; that's the low byte.
1925   88D9 2A CC 87           ld hl,(grbase)      ; address of graphics.
1926   88DC 19                 add hl,de           ; add displacement.
1927   88DD CD 88 88    pchark call gprad          ; get screen address.
1928   88E0             ;       ldi                 ; transfer byte.
1929   88E0             ;       dec de              ; back again.
1930   88E0             ;       inc d               ; next screen row down.
1931   88E0             ;       ldi                 ; transfer byte.
1932   88E0             ;       dec de              ; back again.
1933   88E0             ;       inc d               ; next screen row down.
1934   88E0             ;       ldi                 ; transfer byte.
1935   88E0             ;       dec de              ; back again.
1936   88E0             ;       inc d               ; next screen row down.
1937   88E0             ;       ldi                 ; transfer byte.
1938   88E0             ;       dec de              ; back again.
1939   88E0             ;       inc d               ; next screen row down.
1940   88E0             ;       ldi                 ; transfer byte.
1941   88E0             ;       dec de              ; back again.
1942   88E0             ;       inc d               ; next screen row down.
1943   88E0             ;       ldi                 ; transfer byte.
1944   88E0             ;       dec de              ; back again.
1945   88E0             ;       inc d               ; next screen row down.
1946   88E0             ;       ldi                 ; transfer byte.
1947   88E0             ;       dec de              ; back again.
1948   88E0             ;       inc d               ; next screen row down.
1949   88E0             ;       ldi                 ; transfer byte.
1950   88E0 7E                 ld a,(hl)           ; get image byte.
1951   88E1 12                 ld (de),a           ; copy to screen.
1952   88E2 23                 inc hl              ; next image byte.
1953   88E3 14                 inc d               ; next screen row down.
1954   88E4 7E                 ld a,(hl)           ; get image byte.
1955   88E5 12                 ld (de),a           ; copy to screen.
1956   88E6 23                 inc hl              ; next image byte.
1957   88E7 14                 inc d               ; next screen row down.
1958   88E8 7E                 ld a,(hl)           ; get image byte.
1959   88E9 12                 ld (de),a           ; copy to screen.
1960   88EA 23                 inc hl              ; next image byte.
1961   88EB 14                 inc d               ; next screen row down.
1962   88EC 7E                 ld a,(hl)           ; get image byte.
1963   88ED 12                 ld (de),a           ; copy to screen.
1964   88EE 23                 inc hl              ; next image byte.
1965   88EF 14                 inc d               ; next screen row down.
1966   88F0 7E                 ld a,(hl)           ; get image byte.
1967   88F1 12                 ld (de),a           ; copy to screen.
1968   88F2 23                 inc hl              ; next image byte.
1969   88F3 14                 inc d               ; next screen row down.
1970   88F4 7E                 ld a,(hl)           ; get image byte.
1971   88F5 12                 ld (de),a           ; copy to screen.
1972   88F6 23                 inc hl              ; next image byte.
1973   88F7 14                 inc d               ; next screen row down.
1974   88F8 7E                 ld a,(hl)           ; get image byte.
1975   88F9 12                 ld (de),a           ; copy to screen.
1976   88FA 23                 inc hl              ; next image byte.
1977   88FB 14                 inc d               ; next screen row down.
1978   88FC 7E                 ld a,(hl)           ; get image byte.
1979   88FD 12                 ld (de),a           ; copy to screen.
1980   88FE C9                 ret
1981   88FF             
1982   88FF             ; Print attributes, properties and pixels.
1983   88FF             
1984   88FF 47          pattr  ld b,a              ; store cell in b register for now.
1985   8900 5F                 ld e,a              ; displacement in e.
1986   8901 16 00              ld d,0              ; no high byte.
1987   8903 2A 42 7D           ld hl,(proptr)      ; pointer to properties.
1988   8906 19                 add hl,de           ; property cell address.
1989   8907 4E                 ld c,(hl)           ; fetch byte.
1990   8908 CD 9E 88           call pradd          ; get property buffer address.
1991   890B 71                 ld (hl),c           ; write property.
1992   890C 78                 ld a,b              ; restore cell.
1993   890D             
1994   890D             ; Print attributes, no properties.
1995   890D             
1996   890D 5F          panp   ld e,a              ; displacement in e.
1997   890E 16 00              ld d,0              ; no high byte.
1998   8910 2A 40 7D           ld hl,(colptr)      ; pointer to colours.
1999   8913 19                 add hl,de           ; colour cell address.
2000   8914 4E                 ld c,(hl)           ; fetch byte.
2001   8915 CD B6 88           call gaadd          ; get attribute address.
2002   8918 71                 ld (hl),c           ; write colour.
2003   8919 78                 ld a,b              ; restore cell.
2004   891A             
2005   891A             ; Print character pixels, no more.
2006   891A             
2007   891A CD CE 88    pchr   call pchar          ; show character in accumulator.
2008   891D 21 3B 7D           ld hl,dispy         ; y coordinate.
2009   8920 34                 inc (hl)            ; move along one.
2010   8921 C9                 ret
2011   8922             
2012   8922             ; Shifter sprite routine for objects.
2013   8922             
2014   8922 EE 07       sprit7 xor 7
2015   8924 3C                 inc a
2016   8925 CB 15       sprit3 rl l                ; shift into position.
2017   8927 CB 11              rl c
2018   8929 CB 14              rl h
2019   892B 3D                 dec a               ; one less iteration.
2020   892C C2 25 89           jp nz,sprit3
2021   892F 7D                 ld a,l
2022   8930 69                 ld l,c
2023   8931 4C                 ld c,h
2024   8932 67                 ld h,a
2025   8933 C3 5E 89           jp sprit0           ; now apply to screen.
2026   8936             
2027   8936 E5          sprite push hl             ; store sprite graphic address.
2028   8937 CD 53 8E           call scadd          ; get screen address in hl.
2029   893A EB                 ex de,hl            ; switch to de.
2030   893B E1                 pop hl              ; restore graphic address.
2031   893C 3A 3B 7D           ld a,(dispy)        ; y position.
2032   893F E6 07              and 7               ; position straddling cells.
2033   8941 47                 ld b,a              ; store in b register.
2034   8942 3E 10              ld a,16             ; pixel height.
2035   8944 08          sprit1 ex af,af'
2036   8945 4E                 ld c,(hl)           ; fetch first byte.
2037   8946 23                 inc hl              ; next byte.
2038   8947 E5                 push hl             ; store source address.
2039   8948 6E                 ld l,(hl)
2040   8949 26 00              ld h,0
2041   894B 78                 ld a,b              ; position straddling cells.
2042   894C A7                 and a               ; is it zero?
2043   894D 28 0F              jr z,sprit0         ; yes, apply to screen.
2044   894F FE 05              cp 5
2045   8951 30 CF              jr nc,sprit7
2046   8953 A7                 and a               ; clear carry.
2047   8954 CB 19       sprit2 rr c
2048   8956 CB 1D              rr l
2049   8958 CB 1C              rr h
2050   895A 3D                 dec a
2051   895B C2 54 89           jp nz,sprit2
2052   895E 1A          sprit0 ld a,(de)           ; fetch screen image.
2053   895F A9                 xor c               ; merge with graphic.
2054   8960 12                 ld (de),a           ; write to screen.
2055   8961 1C                 inc e               ; next screen byte.
2056   8962 1A                 ld a,(de)           ; fetch screen image.
2057   8963 AD                 xor l               ; combine with graphic.
2058   8964 12                 ld (de),a           ; write to screen.
2059   8965 13                 inc de              ; next screen address.
2060   8966 1A                 ld a,(de)           ; fetch screen image.
2061   8967 AC                 xor h               ; combine with graphic.
2062   8968 12                 ld (de),a           ; write to screen.
2063   8969 1B                 dec de              ; left to middle byte.
2064   896A 1D                 dec e               ; back to start byte.
2065   896B 14                 inc d               ; increment line number.
2066   896C 7A                 ld a,d              ; segment address.
2067   896D E6 07              and 7               ; reached end of segment?
2068   896F C2 7D 89           jp nz,sprit6        ; no, just do next line within cell.
2069   8972 7B                 ld a,e              ; low byte.
2070   8973 C6 20              add a,32            ; look down.
2071   8975 5F                 ld e,a              ; new address.
2072   8976 DA 7D 89           jp c,sprit6         ; done.
2073   8979 7A                 ld a,d              ; high byte.
2074   897A D6 08              sub 8               ; start of segment.
2075   897C 57                 ld d,a              ; new high byte.
2076   897D E1          sprit6 pop hl              ; restore source address.
2077   897E 23                 inc hl              ; next source byte.
2078   897F 08                 ex af,af'
2079   8980 3D                 dec a
2080   8981 C2 44 89           jp nz,sprit1
2081   8984 C9                 ret
2082   8985             
2083   8985             ; Get room address.
2084   8985             
2085   8985 3A 14 7D    groom  ld a,(scno)         ; screen number.
2086   8988 11 00 00    groomx ld de,0             ; start at zero.
2087   898B 2A 44 7D           ld hl,(scrptr)      ; pointer to screens.
2088   898E A7                 and a               ; is it the first one?
2089   898F 28 0A       groom1 jr z,groom0         ; no more screens to skip.
2090   8991 4E                 ld c,(hl)           ; low byte of screen size.
2091   8992 23                 inc hl              ; point to high byte.
2092   8993 46                 ld b,(hl)           ; high byte of screen size.
2093   8994 23                 inc hl              ; next address.
2094   8995 EB                 ex de,hl            ; put total in hl, pointer in de.
2095   8996 09                 add hl,bc           ; skip a screen.
2096   8997 EB                 ex de,hl            ; put total in de, pointer in hl.
2097   8998 3D                 dec a               ; one less iteration.
2098   8999 18 F4              jr groom1           ; loop until we reach the end.
2099   899B 2A 44 7D    groom0 ld hl,(scrptr)      ; pointer to screens.
2100   899E 19                 add hl,de           ; add displacement.
2101   899F 3A AE E2           ld a,(numsc)        ; number of screens.
2102   89A2 16 00              ld d,0              ; zeroise high byte.
2103   89A4 5F                 ld e,a              ; displacement in de.
2104   89A5 19                 add hl,de           ; add double displacement to address.
2105   89A6 19                 add hl,de
2106   89A7 C9                 ret
2107   89A8             
2108   89A8             ; Draw present room.
2109   89A8             
2110   89A8 3A 0B 7D    droom  ld a,(wintop)       ; window top.
2111   89AB 32 3A 7D           ld (dispx),a        ; set x coordinate.
2112   89AE 2A 3E 7D    droom2 ld hl,(blkptr)      ; blocks.
2113   89B1 22 CC 87           ld (grbase),hl      ; set graphics base.
2114   89B4 CD 85 89           call groom          ; get address of current room.
2115   89B7 AF                 xor a               ; zero in accumulator.
2116   89B8 32 FC 89           ld (comcnt),a       ; reset compression counter.
2117   89BB 3A 0D 7D           ld a,(winhgt)       ; height of window.
2118   89BE F5          droom0 push af             ; store row counter.
2119   89BF 3A 0C 7D           ld a,(winlft)       ; window left edge.
2120   89C2 32 3B 7D           ld (dispy),a        ; set cursor position.
2121   89C5 3A 0E 7D           ld a,(winwid)       ; width of window.
2122   89C8 F5          droom1 push af             ; store column counter.
2123   89C9 CD E1 89           call flbyt          ; decompress next byte on the fly.
2124   89CC E5                 push hl             ; store address of cell.
2125   89CD CD FF 88           call pattr          ; show attributes and block.
2126   89D0 E1                 pop hl              ; restore cell address.
2127   89D1 F1                 pop af              ; restore loop counter.
2128   89D2 3D                 dec a               ; one less column.
2129   89D3 20 F3              jr nz,droom1        ; repeat for entire line.
2130   89D5 3A 3A 7D           ld a,(dispx)        ; x coord.
2131   89D8 3C                 inc a               ; move down one line.
2132   89D9 32 3A 7D           ld (dispx),a        ; set new position.
2133   89DC F1                 pop af              ; restore row counter.
2134   89DD 3D                 dec a               ; one less row.
2135   89DE 20 DE              jr nz,droom0        ; repeat for all rows.
2136   89E0 C9                 ret
2137   89E1             
2138   89E1             ; Decompress bytes on-the-fly.
2139   89E1             
2140   89E1 3A FC 89    flbyt  ld a,(comcnt)       ; compression counter.
2141   89E4 A7                 and a               ; any more to decompress?
2142   89E5 20 0C              jr nz,flbyt1        ; yes.
2143   89E7 7E                 ld a,(hl)           ; fetch next byte.
2144   89E8 23                 inc hl              ; point to next cell.
2145   89E9 FE FF              cp 255              ; is this byte a control code?
2146   89EB C0                 ret nz              ; no, this byte is uncompressed.
2147   89EC 7E                 ld a,(hl)           ; fetch byte type.
2148   89ED 32 FB 89           ld (combyt),a       ; set up the type.
2149   89F0 23                 inc hl              ; point to quantity.
2150   89F1 7E                 ld a,(hl)           ; get quantity.
2151   89F2 23                 inc hl              ; point to next byte.
2152   89F3 3D          flbyt1 dec a               ; one less.
2153   89F4 32 FC 89           ld (comcnt),a       ; store new quantity.
2154   89F7 3A FB 89           ld a,(combyt)       ; byte to expand.
2155   89FA C9                 ret
2156   89FB             
2157   89FB             
2158   89FB 00          combyt defb 0              ; byte type compressed.
2159   89FC 00          comcnt defb 0              ; compression counter.
2160   89FD             
2161   89FD             ; Ladder down check.
2162   89FD             
2163   89FD DD 7E 08    laddd  ld a,(ix+8)         ; x coordinate.
2164   8A00 E6 FE              and 254             ; make it even.
2165   8A02 DD 77 08           ld (ix+8),a         ; reset it.
2166   8A05 DD 66 09           ld h,(ix+9)         ; y coordinate.
2167   8A08 C6 10       numsp5 add a,16            ; look down 16 pixels.
2168   8A0A 6F                 ld l,a              ; coords in hl.
2169   8A0B 18 0E              jr laddv
2170   8A0D             
2171   8A0D             ; Ladder up check.
2172   8A0D             
2173   8A0D DD 7E 08    laddu  ld a,(ix+8)         ; x coordinate.
2174   8A10 E6 FE              and 254             ; make it even.
2175   8A12 DD 77 08           ld (ix+8),a         ; reset it.
2176   8A15 DD 66 09           ld h,(ix+9)         ; y coordinate.
2177   8A18 C6 0E       numsp6 add a,14            ; look 2 pixels above feet.
2178   8A1A 6F                 ld l,a              ; coords in hl.
2179   8A1B 22 3A 7D    laddv  ld (dispx),hl       ; set up test coordinates.
2180   8A1E CD 46 8B           call tstbl          ; get map address.
2181   8A21 CD D2 8A           call ldchk          ; standard ladder check.
2182   8A24 C0                 ret nz              ; no way through.
2183   8A25 23                 inc hl              ; look right one cell.
2184   8A26 CD D2 8A           call ldchk          ; do the check.
2185   8A29 C0                 ret nz              ; impassable.
2186   8A2A 3A 3B 7D           ld a,(dispy)        ; y coordinate.
2187   8A2D E6 07              and 7               ; position straddling block cells.
2188   8A2F C8                 ret z               ; no more checks needed.
2189   8A30 23                 inc hl              ; look to third cell.
2190   8A31 CD D2 8A           call ldchk          ; do the check.
2191   8A34 C9                 ret                 ; return with zero flag set accordingly.
2192   8A35             
2193   8A35             ; Can go up check.
2194   8A35             
2195   8A35 DD 7E 08    cangu  ld a,(ix+8)         ; x coordinate.
2196   8A38 DD 66 09           ld h,(ix+9)         ; y coordinate.
2197   8A3B D6 02              sub 2               ; look up 2 pixels.
2198   8A3D 6F                 ld l,a              ; coords in hl.
2199   8A3E 22 3A 7D           ld (dispx),hl       ; set up test coordinates.
2200   8A41 CD 46 8B           call tstbl          ; get map address.
2201   8A44 CD A8 8A           call lrchk          ; standard left/right check.
2202   8A47 C0                 ret nz              ; no way through.
2203   8A48 23                 inc hl              ; look right one cell.
2204   8A49 CD A8 8A           call lrchk          ; do the check.
2205   8A4C C0                 ret nz              ; impassable.
2206   8A4D 3A 3B 7D           ld a,(dispy)        ; y coordinate.
2207   8A50 E6 07              and 7               ; position straddling block cells.
2208   8A52 C8                 ret z               ; no more checks needed.
2209   8A53 23                 inc hl              ; look to third cell.
2210   8A54 CD A8 8A           call lrchk          ; do the check.
2211   8A57 C9                 ret                 ; return with zero flag set accordingly.
2212   8A58             
2213   8A58             ; Can go down check.
2214   8A58             
2215   8A58 DD 7E 08    cangd  ld a,(ix+8)         ; x coordinate.
2216   8A5B DD 66 09           ld h,(ix+9)         ; y coordinate.
2217   8A5E C6 10       numsp3 add a,16            ; look down 16 pixels.
2218   8A60 6F                 ld l,a              ; coords in hl.
2219   8A61 22 3A 7D           ld (dispx),hl       ; set up test coordinates.
2220   8A64 CD 46 8B           call tstbl          ; get map address.
2221   8A67 CD B6 8A           call plchk          ; block, platform check.
2222   8A6A C0                 ret nz              ; no way through.
2223   8A6B 23                 inc hl              ; look right one cell.
2224   8A6C CD B6 8A           call plchk          ; block, platform check.
2225   8A6F C0                 ret nz              ; impassable.
2226   8A70 3A 3B 7D           ld a,(dispy)        ; y coordinate.
2227   8A73 E6 07              and 7               ; position straddling block cells.
2228   8A75 C8                 ret z               ; no more checks needed.
2229   8A76 23                 inc hl              ; look to third cell.
2230   8A77 CD B6 8A           call plchk          ; block, platform check.
2231   8A7A C9                 ret                 ; return with zero flag set accordingly.
2232   8A7B             
2233   8A7B             ; Can go left check.
2234   8A7B             
2235   8A7B DD 6E 08    cangl  ld l,(ix+8)         ; x coordinate.
2236   8A7E DD 7E 09           ld a,(ix+9)         ; y coordinate.
2237   8A81 D6 02              sub 2               ; look left 2 pixels.
2238   8A83 67                 ld h,a              ; coords in hl.
2239   8A84 18 09              jr cangh            ; test if we can go there.
2240   8A86             
2241   8A86             ; Can go right check.
2242   8A86             
2243   8A86 DD 6E 08    cangr  ld l,(ix+8)         ; x coordinate.
2244   8A89 DD 7E 09           ld a,(ix+9)         ; y coordinate.
2245   8A8C C6 10              add a,16            ; look right 16 pixels.
2246   8A8E 67                 ld h,a              ; coords in hl.
2247   8A8F             
2248   8A8F 22 3A 7D    cangh  ld (dispx),hl       ; set up test coordinates.
2249   8A92 06 03       cangh2 ld b,3              ; default rows to write.
2250   8A94 7D                 ld a,l              ; x position.
2251   8A95 E6 07              and 7               ; does x straddle cells?
2252   8A97 20 01              jr nz,cangh0        ; yes, loop counter is good.
2253   8A99 05                 dec b               ; one less row to write.
2254   8A9A CD 46 8B    cangh0 call tstbl          ; get map address.
2255   8A9D 11 20 00           ld de,32            ; distance to next cell.
2256   8AA0 CD A8 8A    cangh1 call lrchk          ; standard left/right check.
2257   8AA3 C0                 ret nz              ; no way through.
2258   8AA4 19                 add hl,de           ; look down.
2259   8AA5 10 F9              djnz cangh1
2260   8AA7 C9                 ret
2261   8AA8             
2262   8AA8             ; Check left/right movement is okay.
2263   8AA8             
2264   8AA8 7E          lrchk  ld a,(hl)           ; fetch map cell.
2265   8AA9 FE 02              cp WALL             ; is it passable?
2266   8AAB 28 06              jr z,lrchkx         ; no.
2267   8AAD FE 04              cp FODDER           ; fodder has to be dug.
2268   8AAF 28 02              jr z,lrchkx         ; not passable.
2269   8AB1 AF          always xor a               ; report it as okay.
2270   8AB2 C9                 ret
2271   8AB3 AF          lrchkx xor a               ; reset all bits.
2272   8AB4 3C                 inc a
2273   8AB5 C9                 ret
2274   8AB6             
2275   8AB6             ; Check platform or solid item is not in way.
2276   8AB6             
2277   8AB6 7E          plchk  ld a,(hl)           ; fetch map cell.
2278   8AB7 FE 02              cp WALL             ; is it passable?
2279   8AB9 28 F8              jr z,lrchkx         ; no.
2280   8ABB FE 04              cp FODDER           ; fodder has to be dug.
2281   8ABD 28 F4              jr z,lrchkx         ; not passable.
2282   8ABF FE 01              cp PLATFM           ; platform is solid.
2283   8AC1 28 06              jr z,plchkx         ; not passable.
2284   8AC3 FE 03              cp LADDER           ; is it a ladder?
2285   8AC5 28 EC              jr z,lrchkx         ; on ladder, deny movement.
2286   8AC7 AF          plchk0 xor a               ; report it as okay.
2287   8AC8 C9                 ret
2288   8AC9 3A 3A 7D    plchkx ld a,(dispx)        ; x coordinate.
2289   8ACC E6 07              and 7               ; position straddling blocks.
2290   8ACE 28 E3              jr z,lrchkx         ; on platform, deny movement.
2291   8AD0 18 F5              jr plchk0
2292   8AD2             
2293   8AD2             ; Check ladder is available.
2294   8AD2             
2295   8AD2 7E          ldchk  ld a,(hl)           ; fetch cell.
2296   8AD3 FE 03              cp LADDER           ; is it a ladder?
2297   8AD5 C9                 ret                 ; return with zero flag set accordingly.
2298   8AD6             
2299   8AD6             ; Get collectables.
2300   8AD6             
2301   8AD6 06 07       getcol ld b,COLECT         ; collectable blocks.
2302   8AD8 CD FE 8A           call tded           ; test for collectable blocks.
2303   8ADB B8                 cp b                ; did we find one?
2304   8ADC C0                 ret nz              ; none were found, job done.
2305   8ADD CD E5 8A           call gtblk          ; get block.
agdcode.asm(2306): error: Label not found: evnt20
2306   8AE0 CD 00 00           call evnt20         ; collected block event.
2307   8AE3 18 F1              jr getcol           ; repeat until none left.
2308   8AE5             
2309   8AE5             ; Get collectable block.
2310   8AE5             
2311   8AE5 36 00       gtblk  ld (hl),0           ; make it empty now.
2312   8AE7 11 00 FD           ld de,MAP           ; map address.
2313   8AEA A7                 and a               ; clear carry.
2314   8AEB ED 52              sbc hl,de           ; find cell number.
2315   8AED 7D                 ld a,l              ; get low byte of cell number.
2316   8AEE E6 1F              and 31              ; 0 - 31 is column.
2317   8AF0 57                 ld d,a              ; store y in d register.
2318   8AF1 29                 add hl,hl           ; multiply by 8.
2319   8AF2 29                 add hl,hl
2320   8AF3 29                 add hl,hl           ; x is now in h.
2321   8AF4 5C                 ld e,h              ; put x in e.
2322   8AF5 ED 53 3A 7D        ld (dispx),de       ; set display coordinates.
2323   8AF9 AF                 xor a               ; block zero.
2324   8AFA CD 1A 89           call pchr           ; display block on screen.
2325   8AFD C9                 ret
2326   8AFE             
2327   8AFE             ; Touched deadly block check.
2328   8AFE             ; Returns with DEADLY (must be non-zero) in accumulator if true.
2329   8AFE             
2330   8AFE DD 6E 08    tded   ld l,(ix+8)         ; x coordinate.
2331   8B01 DD 66 09           ld h,(ix+9)         ; y coordinate.
2332   8B04 22 3A 7D           ld (dispx),hl       ; set up test coordinates.
2333   8B07 CD 46 8B           call tstbl          ; get map address.
2334   8B0A 11 1F 00           ld de,31            ; default distance to next line down.
2335   8B0D B8                 cp b                ; is this the required block?
2336   8B0E C8                 ret z               ; yes.
2337   8B0F 23                 inc hl              ; next cell.
2338   8B10 7E                 ld a,(hl)           ; fetch type.
2339   8B11 B8                 cp b                ; is this deadly/custom?
2340   8B12 C8                 ret z               ; yes.
2341   8B13 3A 3B 7D           ld a,(dispy)        ; horizontal position.
2342   8B16 4F                 ld c,a              ; store column in c register.
2343   8B17 E6 07              and 7               ; is it straddling cells?
2344   8B19 28 05              jr z,tded0          ; no.
2345   8B1B 23                 inc hl              ; last cell.
2346   8B1C 7E                 ld a,(hl)           ; fetch type.
2347   8B1D B8                 cp b                ; is this the block?
2348   8B1E C8                 ret z               ; yes.
2349   8B1F 1B                 dec de              ; one less cell to next row down.
2350   8B20 19          tded0  add hl,de           ; point to next row.
2351   8B21 7E                 ld a,(hl)           ; fetch left cell block.
2352   8B22 B8                 cp b                ; is this fatal?
2353   8B23 C8                 ret z               ; yes.
2354   8B24 23                 inc hl              ; next cell.
2355   8B25 7E                 ld a,(hl)           ; fetch type.
2356   8B26 B8                 cp b                ; is this fatal?
2357   8B27 C8                 ret z               ; yes.
2358   8B28 79                 ld a,c              ; horizontal position.
2359   8B29 E6 07              and 7               ; is it straddling cells?
2360   8B2B 28 04              jr z,tded1          ; no.
2361   8B2D 23                 inc hl              ; last cell.
2362   8B2E 7E                 ld a,(hl)           ; fetch type.
2363   8B2F B8                 cp b                ; is this fatal?
2364   8B30 C8                 ret z               ; yes.
2365   8B31 3A 3A 7D    tded1  ld a,(dispx)        ; vertical position.
2366   8B34 E6 07              and 7               ; is it straddling cells?
2367   8B36 C8                 ret z               ; no, job done.
2368   8B37 19                 add hl,de           ; point to next row.
2369   8B38 7E                 ld a,(hl)           ; fetch left cell block.
2370   8B39 B8                 cp b                ; is this fatal?
2371   8B3A C8                 ret z               ; yes.
2372   8B3B 23                 inc hl              ; next cell.
2373   8B3C 7E                 ld a,(hl)           ; fetch type.
2374   8B3D B8                 cp b                ; is this fatal?
2375   8B3E C8                 ret z               ; yes.
2376   8B3F 79                 ld a,c              ; horizontal position.
2377   8B40 E6 07              and 7               ; is it straddling cells?
2378   8B42 C8                 ret z               ; no.
2379   8B43 23                 inc hl              ; last cell.
2380   8B44 7E                 ld a,(hl)           ; fetch final type.
2381   8B45 C9                 ret                 ; return with final type in accumulator.
2382   8B46             
2383   8B46             
2384   8B46             ; Fetch block type at (dispx, dispy).
2385   8B46             
2386   8B46 3A 3A 7D    tstbl  ld a,(dispx)        ; fetch x coord.
2387   8B49 07                 rlca                ; divide by 8,
2388   8B4A 07                 rlca                ; and multiply by 32.
2389   8B4B 57                 ld d,a              ; store in d.
2390   8B4C E6 E0              and 224             ; mask off high bits.
2391   8B4E 5F                 ld e,a              ; low byte.
2392   8B4F 7A                 ld a,d              ; restore shift result.
2393   8B50 E6 03              and 3               ; high bits.
2394   8B52 57                 ld d,a              ; got displacement in de.
2395   8B53 3A 3B 7D           ld a,(dispy)        ; y coord.
2396   8B56 1F                 rra                 ; divide by 8.
2397   8B57 1F                 rra
2398   8B58 1F                 rra
2399   8B59 E6 1F              and 31              ; only want 0 - 31.
2400   8B5B 83                 add a,e             ; add to displacement.
2401   8B5C 5F                 ld e,a              ; displacement in de.
2402   8B5D 21 00 FD           ld hl,MAP           ; position of dummy screen.
2403   8B60 19                 add hl,de           ; point to address.
2404   8B61 7E                 ld a,(hl)           ; fetch byte there.
2405   8B62 C9                 ret
2406   8B63             
2407   8B63             ; Jump - if we can.
2408   8B63             ; Requires initial speed to be set up in accumulator prior to call.
2409   8B63             
2410   8B63 ED 44       jump   neg                 ; switch sign so we jump up.
2411   8B65 4F                 ld c,a              ; store in c register.
2412   8B66             ;       ld a,(ix+8)         ; x coordinate.
2413   8B66             ;       ld h,(ix+9)         ; y coordinate.
2414   8B66             ;numsp4 add a,16            ; look down 16 pixels.
2415   8B66             ;       ld l,a              ; coords in hl.
2416   8B66             ;       and 7               ; are we on platform boundary?
2417   8B66             ;       ret nz              ; no, cannot jump.
2418   8B66             ;       ld (dispx),hl       ; set up test coordinates.
2419   8B66             ;       ld b,a              ; copy to b register.
2420   8B66             ;       call tstbl          ; get map address.
2421   8B66             ;       call plchk          ; block, platform check.
2422   8B66             ;       jr nz,jump0         ; it's solid, we can jump.
2423   8B66             ;       inc hl              ; look right one cell.
2424   8B66             ;       call plchk          ; block, platform check.
2425   8B66             ;       jr nz,jump0         ; it's solid, we can jump.
2426   8B66             ;       ld a,b              ; y coordinate.
2427   8B66             ;       and 7               ; position straddling block cells.
2428   8B66             ;       ret z               ; no more checks needed.
2429   8B66             ;       inc hl              ; look to third cell.
2430   8B66             ;       call plchk          ; block, platform check.
2431   8B66             ;       ret z               ; not solid, don't jump.
2432   8B66 DD 7E 0D    jump0  ld a,(ix+13)        ; jumping flag.
2433   8B69 A7                 and a               ; is it set?
2434   8B6A C0                 ret nz              ; already in the air.
2435   8B6B DD 34 0D           inc (ix+13)         ; set it.
2436   8B6E DD 71 0E           ld (ix+14),c        ; set jump height.
2437   8B71 C9                 ret
2438   8B72             
2439   8B72 DD 7E 0D    hop    ld a,(ix+13)        ; jumping flag.
2440   8B75 A7                 and a               ; is it set?
2441   8B76 C0                 ret nz              ; already in the air.
2442   8B77 DD 36 0D FF        ld (ix+13),255      ; set it.
2443   8B7B DD 36 0E 00        ld (ix+14),0        ; set jump table displacement.
2444   8B7F C9                 ret
2445   8B80             
2446   8B80             ; Random numbers code.
2447   8B80             ; Pseudo-random number generator, 8-bit.
2448   8B80             
2449   8B80 21 B9 87    random ld hl,seed          ; set up seed pointer.
2450   8B83 7E                 ld a,(hl)           ; get last random number.
2451   8B84 47                 ld b,a              ; copy to b register.
2452   8B85 0F                 rrca                ; multiply by 32.
2453   8B86 0F                 rrca
2454   8B87 0F                 rrca
2455   8B88 EE 1F              xor 31
2456   8B8A 80                 add a,b
2457   8B8B DE FF              sbc a,255
2458   8B8D 77                 ld (hl),a           ; store new seed.
2459   8B8E 32 32 7D           ld (varrnd),a       ; return number in variable.
2460   8B91 C9                 ret
2461   8B92             
2462   8B92             
2463   8B92             ; Keyboard test routine.
2464   8B92             
2465   8B92 4F          ktest  ld c,a              ; key to test in c.
2466   8B93 E6 07              and 7               ; mask bits d0-d2 for row.
2467   8B95 3C                 inc a               ; in range 1-8.
2468   8B96 47                 ld b,a              ; place in b.
2469   8B97 CB 39              srl c               ; divide c by 8
2470   8B99 CB 39              srl c               ; to find position within row.
2471   8B9B CB 39              srl c
2472   8B9D 3E 05              ld a,5              ; only 5 keys per row.
2473   8B9F 91                 sub c               ; subtract position.
2474   8BA0 4F                 ld c,a              ; put in c.
2475   8BA1 3E FE              ld a,254            ; high byte of port to read.
2476   8BA3 0F          ktest0 rrca                ; rotate into position.
2477   8BA4 10 FD              djnz ktest0         ; repeat until we've found relevant row.
2478   8BA6 DB FE              in a,(254)          ; read port (a=high, 254=low).
2479   8BA8 1F          ktest1 rra                 ; rotate bit out of result.
2480   8BA9 0D                 dec c               ; loop counter.
2481   8BAA C2 A8 8B           jp nz,ktest1        ; repeat until bit for position in carry.
2482   8BAD C9                 ret
2483   8BAE             
2484   8BAE             
2485   8BAE             ; Joystick and keyboard reading routines.
2486   8BAE             
2487   8BAE 3A 2E 7D    joykey ld a,(contrl)       ; control flag.
2488   8BB1 3D                 dec a               ; is it the keyboard?
2489   8BB2 28 18              jr z,joyjoy         ; no, it's Kempston joystick.
2490   8BB4 3D                 dec a               ; Sinclair?
2491   8BB5 28 34              jr z,joysin         ; read Sinclair joystick.
2492   8BB7             
2493   8BB7             ; Keyboard controls.
2494   8BB7             
2495   8BB7 21 DE EA           ld hl,keys+6        ; address of last key.
2496   8BBA 1E 00              ld e,0              ; zero reading.
2497   8BBC 16 07              ld d,7              ; keys to read.
2498   8BBE 7E          joyke0 ld a,(hl)           ; get key from table.
2499   8BBF CD 92 8B           call ktest          ; being pressed?
2500   8BC2 3F                 ccf                 ; complement the carry.
2501   8BC3 CB 13              rl e                ; rotate into reading.
2502   8BC5 2B                 dec hl              ; next key.
2503   8BC6 15                 dec d               ; one less to do.
2504   8BC7 C2 BE 8B           jp nz,joyke0        ; repeat for all keys.
2505   8BCA 18 1A              jr joyjo1           ; store the value.
2506   8BCC             
2507   8BCC             ; Kempston joystick controls.
2508   8BCC             
2509   8BCC 01 1F 00    joyjoy ld bc,31            ; port for Kempston interface.
2510   8BCF ED 78              in a,(c)            ; read it.
2511   8BD1 5F          joyjo3 ld e,a              ; copy to e register.
2512   8BD2 3A DD EA           ld a,(keys+5)       ; key six.
2513   8BD5 CD 92 8B           call ktest          ; being pressed?
2514   8BD8 38 02              jr c,joyjo0         ; not pressed.
2515   8BDA CB EB              set 5,e             ; set bit d5.
2516   8BDC 3A DE EA    joyjo0 ld a,(keys+6)       ; key seven.
2517   8BDF CD 92 8B           call ktest          ; being pressed?
2518   8BE2 38 02              jr c,joyjo1         ; not pressed.
2519   8BE4 CB F3              set 6,e             ; set bit d6.
2520   8BE6 7B          joyjo1 ld a,e              ; copy e register to accumulator.
2521   8BE7 32 09 7D    joyjo2 ld (joyval),a       ; remember value.
2522   8BEA C9                 ret
2523   8BEB             
2524   8BEB             ; Sinclair joystick controls.
2525   8BEB             
2526   8BEB 01 FE EF    joysin ld bc,61438         ; port for Sinclair 2.
2527   8BEE ED 78              in a,(c)            ; read joystick.
2528   8BF0 57                 ld d,a              ; clear values.
2529   8BF1 AF                 xor a               ; clear accumulator.
2530   8BF2 1E 10              ld e,16             ; Kempston fire bit value.
2531   8BF4 CB 42              bit 0,d             ; fire bit pressed?
2532   8BF6 CC 17 8C           call z,joysi0       ; add bit.
2533   8BF9 1E 01              ld e,1              ; Kempston bit value.
2534   8BFB CB 5A              bit 3,d             ; fire bit pressed?
2535   8BFD CC 17 8C           call z,joysi0       ; add bit.
2536   8C00 1E 02              ld e,2              ; Kempston bit value.
2537   8C02 CB 62              bit 4,d             ; fire bit pressed?
2538   8C04 CC 17 8C           call z,joysi0       ; add bit.
2539   8C07 1E 08              ld e,8              ; Kempston bit value.
2540   8C09 CB 4A              bit 1,d             ; fire bit pressed?
2541   8C0B CC 17 8C           call z,joysi0       ; add bit.
2542   8C0E 1E 04              ld e,4              ; Kempston bit value.
2543   8C10 CB 52              bit 2,d             ; fire bit pressed?
2544   8C12 CC 17 8C           call z,joysi0       ; add bit.
2545   8C15 18 BA              jr joyjo3           ; read last 2 keys a la Kempston.
2546   8C17             
2547   8C17 83          joysi0 add a,e             ; add bit value.
2548   8C18 C9                 ret
2549   8C19             
2550   8C19             ; Display message.
2551   8C19             
2552   8C19             ;dmsg   ld hl,nummsg        ; total messages.
2553   8C19             ;       cp (hl)             ; does this one exist?
2554   8C19             ;       ret nc              ; no, nothing to display.
2555   8C19 21 3E A5    dmsg   ld hl,msgdat        ; pointer to messages.
2556   8C1C CD 03 8D           call getwrd         ; get message number.
2557   8C1F CD F2 8C    dmsg3  call preprt         ; pre-printing stuff.
2558   8C22 CD CE 87           call checkx         ; make sure we're in a printable range.
2559   8C25 3A 5F 8C           ld a,(prtmod)       ; print mode.
2560   8C28 A7                 and a               ; standard size?
2561   8C29 C2 60 8C           jp nz,bmsg1         ; no, double-height text.
2562   8C2C E5          dmsg0  push hl             ; store string pointer.
2563   8C2D 7E                 ld a,(hl)           ; fetch byte to display.
2564   8C2E E6 7F              and 127             ; remove any end marker.
2565   8C30 FE 0D              cp 13               ; newline character?
2566   8C32 28 1B              jr z,dmsg1
2567   8C34 CD CE 88           call pchar          ; display character.
2568   8C37 CD B6 88           call gaadd          ; get attribute address.
2569   8C3A 3A 8D 5C           ld a,(23693)        ; current cell colours.
2570   8C3D 77                 ld (hl),a           ; write to attribute cell.
2571   8C3E CD E0 8C           call nexpos         ; display position.
2572   8C41 20 03              jr nz,dmsg2         ; not on a new line.
2573   8C43 CD EA 8C           call nexlin         ; next line down.
2574   8C46 E1          dmsg2  pop hl
2575   8C47 7E                 ld a,(hl)           ; fetch last character.
2576   8C48 17                 rla                 ; was it the end?
2577   8C49 DA 07 88           jp c,dscor2         ; yes, job done.
2578   8C4C 23                 inc hl              ; next character to display.
2579   8C4D 18 DD              jr dmsg0
2580   8C4F 21 3A 7D    dmsg1  ld hl,dispx         ; x coordinate.
2581   8C52 34                 inc (hl)            ; newline.
2582   8C53 7E                 ld a,(hl)           ; fetch position.
2583   8C54 FE 18              cp 24               ; past screen edge?
2584   8C56 38 02              jr c,dmsg4          ; no, it's okay.
2585   8C58 36 00              ld (hl),0           ; restart at top.
2586   8C5A 23          dmsg4  inc hl              ; y coordinate.
2587   8C5B 36 00              ld (hl),0           ; carriage return.
2588   8C5D 18 E7              jr dmsg2
2589   8C5F 00          prtmod defb 0              ; print mode, 0 = standard, 1 = double-height.
2590   8C60             
2591   8C60             ; Display message in big text.
2592   8C60             
2593   8C60 7E          bmsg1  ld a,(hl)           ; get character to display.
2594   8C61 E5                 push hl             ; store pointer to message.
2595   8C62 E6 7F              and 127             ; only want 7 bits.
2596   8C64 FE 0D              cp 13               ; newline character?
2597   8C66 28 0A              jr z,bmsg2
2598   8C68 CD 83 8C           call bchar          ; display big char.
2599   8C6B E1          bmsg3  pop hl              ; retrieve message pointer.
2600   8C6C 7E                 ld a,(hl)           ; look at last character.
2601   8C6D 23                 inc hl              ; next character in list.
2602   8C6E 17                 rla                 ; was terminator flag set?
2603   8C6F 30 EF              jr nc,bmsg1         ; no, keep going.
2604   8C71 C9                 ret
2605   8C72 21 2F 7D    bmsg2  ld hl,charx         ; x coordinate.
2606   8C75 34                 inc (hl)            ; newline.
2607   8C76 34                 inc (hl)            ; newline.
2608   8C77 7E                 ld a,(hl)           ; fetch position.
2609   8C78 FE 17              cp 23               ; past screen edge?
2610   8C7A 38 EF              jr c,bmsg3          ; no, it's okay.
2611   8C7C 36 00              ld (hl),0           ; restart at top.
2612   8C7E 23                 inc hl              ; y coordinate.
2613   8C7F 36 00              ld (hl),0           ; carriage return.
2614   8C81 18 E8              jr bmsg3
2615   8C83             
2616   8C83             
2617   8C83             ; Big character display.
2618   8C83             
2619   8C83 07          bchar  rlca                ; multiply char by 8.
2620   8C84 07                 rlca
2621   8C85 07                 rlca
2622   8C86 5F                 ld e,a              ; store shift in e.
2623   8C87 E6 07              and 7               ; only want high byte bits.
2624   8C89 57                 ld d,a              ; store in d.
2625   8C8A 7B                 ld a,e              ; restore shifted value.
2626   8C8B E6 F8              and 248             ; only want low byte bits.
2627   8C8D 5F                 ld e,a              ; that's the low byte.
2628   8C8E 2A 36 5C           ld hl,(23606)       ; address of font.
2629   8C91 19                 add hl,de           ; add displacement.
2630   8C92 CD 88 88           call gprad          ; get screen address.
2631   8C95 EB                 ex de,hl            ; font in de, screen address in hl.
2632   8C96 06 08              ld b,8              ; height of character in font.
2633   8C98 1A          bchar0 ld a,(de)           ; get a bit of the font.
2634   8C99 13                 inc de              ; next line of font.
2635   8C9A 77                 ld (hl),a           ; write to screen.
2636   8C9B 24                 inc h               ; down a line.
2637   8C9C 77                 ld (hl),a           ; write to screen.
2638   8C9D CD 19 8F           call nline          ; next line down.
2639   8CA0 10 F6              djnz bchar0         ; repeat.
2640   8CA2 CD B6 88           call gaadd          ; get attribute address.
2641   8CA5 3A 8D 5C           ld a,(23693)        ; current colour.
2642   8CA8 77                 ld (hl),a           ; set attribute.
2643   8CA9 4F                 ld c,a              ; copy colour to c.
2644   8CAA 11 20 00           ld de,32            ; distance to next line.
2645   8CAD 19                 add hl,de           ; point to second cell.
2646   8CAE 7C                 ld a,h              ; high byte of address.
2647   8CAF FE 5B              cp 91               ; past edge of screen?
2648   8CB1 30 01              jr nc,bchar1        ; yes, don't write to printer buffer/sysvars.
2649   8CB3 71                 ld (hl),c           ; set second cell's attributes.
2650   8CB4 CD E0 8C    bchar1 call nexpos         ; display position.
2651   8CB7 C2 BE 8C           jp nz,bchar2        ; not on a new line.
2652   8CBA 34          bchar3 inc (hl)            ; newline.
2653   8CBB CD EA 8C           call nexlin         ; next line check.
2654   8CBE C3 07 88    bchar2 jp dscor2           ; tidy up line and column variables.
2655   8CC1             
2656   8CC1             ; Display a character.
2657   8CC1             
2658   8CC1 47          achar  ld b,a              ; copy to b.
2659   8CC2 CD F2 8C           call preprt         ; get ready to print.
2660   8CC5 3A 5F 8C           ld a,(prtmod)       ; print mode.
2661   8CC8 A7                 and a               ; standard size?
2662   8CC9 78                 ld a,b              ; character in accumulator.
2663   8CCA C2 83 8C           jp nz,bchar         ; no, double-height text.
2664   8CCD CD CE 88           call pchar          ; display character.
2665   8CD0 CD B6 88           call gaadd          ; get attribute address.
2666   8CD3 3A 8D 5C           ld a,(23693)        ; current cell colours.
2667   8CD6 77                 ld (hl),a           ; write to attribute cell.
2668   8CD7 CD E0 8C           call nexpos         ; display position.
2669   8CDA CA BA 8C           jp z,bchar3         ; next line down.
2670   8CDD C3 BE 8C           jp bchar2           ; tidy up.
2671   8CE0             
2672   8CE0             ; Get next print column position.
2673   8CE0             
2674   8CE0 21 3B 7D    nexpos ld hl,dispy         ; display position.
2675   8CE3 7E                 ld a,(hl)           ; get coordinate.
2676   8CE4 3C                 inc a               ; move along one position.
2677   8CE5 E6 1F              and 31              ; reached edge of screen?
2678   8CE7 77                 ld (hl),a           ; set new position.
2679   8CE8 2B                 dec hl              ; point to x now.
2680   8CE9 C9                 ret                 ; return with status in zero flag.
2681   8CEA             
2682   8CEA             ; Get next print line position.
2683   8CEA             
2684   8CEA 34          nexlin inc (hl)            ; newline.
2685   8CEB 7E                 ld a,(hl)           ; vertical position.
2686   8CEC FE 18              cp 24               ; past screen edge?
2687   8CEE D8                 ret c               ; no, still okay.
2688   8CEF 36 00              ld (hl),0           ; restart at top.
2689   8CF1 C9                 ret
2690   8CF2             
2691   8CF2             ; Pre-print preliminaries.
2692   8CF2             
2693   8CF2 ED 5B 36 5C preprt ld de,(23606)       ; font pointer.
2694   8CF6 ED 53 CC 87        ld (grbase),de      ; set up graphics base.
2695   8CFA ED 5B 2F 7D prescr ld de,(charx)       ; display coordinates.
2696   8CFE ED 53 3A 7D        ld (dispx),de       ; set up general coordinates.
2697   8D02 C9                 ret
2698   8D03             
2699   8D03             ; On entry: hl points to word list
2700   8D03             ;           a contains word number.
2701   8D03             
2702   8D03 A7          getwrd and a               ; first word in list?
2703   8D04 C8                 ret z               ; yep, don't search.
2704   8D05 47                 ld b,a
2705   8D06 7E          getwd0 ld a,(hl)
2706   8D07 23                 inc hl
2707   8D08 FE 80              cp 128              ; found end?
2708   8D0A 38 FA              jr c,getwd0         ; no, carry on.
2709   8D0C 10 F8              djnz getwd0         ; until we have right number.
2710   8D0E C9                 ret
2711   8D0F             
2712   8D0F             
2713   8D0F             ; Bubble sort.
2714   8D0F             
2715   8D0F 06 0B       bsort  ld b,NUMSPR - 1     ; sprites to swap.
2716   8D11 DD 21 C4 92        ld ix,sprtab        ; sprite table.
2717   8D15 C5          bsort0 push bc             ; store loop counter for now.
2718   8D16             
2719   8D16 DD 7E 00           ld a,(ix+0)         ; first sprite type.
2720   8D19 3C                 inc a               ; is it switched off?
2721   8D1A 28 22              jr z,swemp          ; yes, may need to switch another in here.
2722   8D1C             
2723   8D1C DD 7E 11           ld a,(ix+TABSIZ)    ; check next slot exists.
2724   8D1F 3C                 inc a               ; is it enabled?
2725   8D20 28 08              jr z,bsort2         ; no, nothing to swap.
2726   8D22             
2727   8D22 DD 7E 14           ld a,(ix+(3+TABSIZ)); fetch next sprite's coordinate.
2728   8D25 DD BE 03           cp (ix+3)           ; compare with this x coordinate.
2729   8D28 38 09              jr c,bsort1         ; next sprite is higher - may need to switch.
2730   8D2A 11 11 00    bsort2 ld de,TABSIZ        ; distance to next odd/even entry.
2731   8D2D DD 19              add ix,de           ; next sprite.
2732   8D2F C1                 pop bc              ; retrieve loop counter.
2733   8D30 10 E3              djnz bsort0         ; repeat for remaining sprites.
2734   8D32 C9                 ret
2735   8D33             
2736   8D33 DD 7E 11    bsort1 ld a,(ix+TABSIZ)    ; sprite on/off flag.
2737   8D36 3C                 inc a               ; is it enabled?
2738   8D37 28 F1              jr z,bsort2         ; no, nothing to swap.
2739   8D39 CD 49 8D           call swspr          ; swap positions.
2740   8D3C 18 EC              jr bsort2
2741   8D3E             
2742   8D3E DD 7E 11    swemp  ld a,(ix+TABSIZ)    ; next table entry.
2743   8D41 3C                 inc a               ; is that one on?
2744   8D42 28 E6              jr z,bsort2         ; no, nothing to swap.
2745   8D44 CD 49 8D           call swspr          ; swap positions.
2746   8D47 18 E1              jr bsort2
2747   8D49             
2748   8D49             ; Swap sprites.
2749   8D49             
2750   8D49 DD E5       swspr  push ix             ; table address on stack.
2751   8D4B E1                 pop hl              ; pop into hl pair.
2752   8D4C 54                 ld d,h              ; copy to de pair.
2753   8D4D 5D                 ld e,l
2754   8D4E 01 11 00           ld bc,TABSIZ        ; distance to second entry.
2755   8D51 09                 add hl,bc           ; point to second sprite entry.
2756   8D52 06 11              ld b,TABSIZ         ; bytes to swap.
2757   8D54 4E          swspr0 ld c,(hl)           ; fetch second byte.
2758   8D55 1A                 ld a,(de)           ; fetch first byte.
2759   8D56 77                 ld (hl),a           ; copy to second.
2760   8D57 79                 ld a,c              ; second byte in accumulator.
2761   8D58 12                 ld (de),a           ; copy to first sprite entry.
2762   8D59 13                 inc de              ; next byte.
2763   8D5A 23                 inc hl              ; next byte.
2764   8D5B 10 F7              djnz swspr0         ; swap all bytes in table entry.
2765   8D5D C9                 ret
2766   8D5E             
2767   8D5E             
2768   8D5E             ; Process sprites.
2769   8D5E             
2770   8D5E 06 0C       pspr   ld b,NUMSPR         ; sprites to process.
2771   8D60 DD 21 C4 92        ld ix,sprtab        ; sprite table.
2772   8D64 C5          pspr1  push bc             ; store loop counter for now.
2773   8D65 DD 7E 00           ld a,(ix+0)         ; fetch sprite type.
2774   8D68 FE 09              cp 9                ; within range of sprite types?
2775   8D6A DC 76 8D           call c,pspr2        ; yes, process this one.
2776   8D6D 11 11 00           ld de,TABSIZ        ; distance to next odd/even entry.
2777   8D70 DD 19              add ix,de           ; next sprite.
2778   8D72 C1                 pop bc              ; retrieve loop counter.
2779   8D73 10 EF              djnz pspr1          ; repeat for remaining sprites.
2780   8D75 C9                 ret
2781   8D76 DD 22 8F 8D pspr2  ld (ogptr),ix       ; store original sprite pointer.
2782   8D7A CD 82 8D           call pspr3          ; do the routine.
2783   8D7D DD 2A 8F 8D rtorg  ld ix,(ogptr)       ; restore original pointer to sprite.
2784   8D81 C9          rtorg0 ret
2785   8D82 21 91 8D    pspr3  ld hl,evtyp0        ; sprite type events list.
2786   8D85 87          pspr4  add a,a             ; double accumulator.
2787   8D86 5F                 ld e,a              ; copy to de.
2788   8D87 16 00              ld d,0              ; no high byte.
2789   8D89 19                 add hl,de           ; point to address of routine.
2790   8D8A 5E                 ld e,(hl)           ; address low.
2791   8D8B 23                 inc hl              ; next byte of address.
2792   8D8C 56                 ld d,(hl)           ; address high.
2793   8D8D EB                 ex de,hl            ; swap address into hl.
2794   8D8E E9                 jp (hl)             ; go there.
2795   8D8F 00 00       ogptr  defw 0              ; original sprite pointer.
2796   8D91             
2797   8D91             ; Address of each sprite type's routine.
2798   8D91             
2799   8D91 6D 94       evtyp0 defw evnt00
2800   8D93 A8 97       evtyp1 defw evnt01
2801   8D95 B5 97       evtyp2 defw evnt02
2802   8D97 ED 9D       evtyp3 defw evnt03
2803   8D99 6C 9E       evtyp4 defw evnt04
2804   8D9B F0 9E       evtyp5 defw evnt05
2805   8D9D 5E A0       evtyp6 defw evnt06
2806   8D9F 0D A1       evtyp7 defw evnt07
2807   8DA1 0E A1       evtyp8 defw evnt08
2808   8DA3             
2809   8DA3             
2810   8DA3             ; Display sprites.
2811   8DA3             
2812   8DA3 06 06       dspr   ld b,NUMSPR/2       ; number of sprites to display.
2813   8DA5 C5          dspr0  push bc             ; store loop counter for now.
2814   8DA6 DD 7E 00           ld a,(ix+0)         ; get sprite type.
2815   8DA9 3C                 inc a               ; is it enabled?
2816   8DAA 20 21              jr nz,dspr1         ; yes, it needs deleting.
2817   8DAC DD 7E 05    dspr5  ld a,(ix+5)         ; new type.
2818   8DAF 3C                 inc a               ; is it enabled?
2819   8DB0 20 4E              jr nz,dspr3         ; yes, it needs drawing.
2820   8DB2             
2821   8DB2 DD E5       dspr2  push ix             ; put ix on stack.
2822   8DB4 E1                 pop hl              ; pop into hl.
2823   8DB5 5D                 ld e,l              ; copy to de.
2824   8DB6 54                 ld d,h
2825   8DB7             
2826   8DB7             ;dspr2  ld e,ixl            ; copy ix to de.
2827   8DB7             ;       ld d,ixh
2828   8DB7             ;       ld l,e              ; copy to hl.
2829   8DB7             ;       ld h,d
2830   8DB7 01 05 00           ld bc,5             ; distance to new type.
2831   8DBA 09                 add hl,bc           ; point to new properties.
2832   8DBB ED A0              ldi                 ; copy to old positions.
2833   8DBD ED A0              ldi
2834   8DBF ED A0              ldi
2835   8DC1 ED A0              ldi
2836   8DC3 ED A0              ldi
2837   8DC5 0E 22              ld c,TABSIZ*2       ; distance to next odd/even entry.
2838   8DC7 DD 09              add ix,bc           ; next sprite.
2839   8DC9 C1                 pop bc              ; retrieve loop counter.
2840   8DCA 10 D9              djnz dspr0          ; repeat for remaining sprites.
2841   8DCC C9                 ret
2842   8DCD             ;dspr1  ld a,(ix+3)         ; old x coord.
2843   8DCD             ;       cp 177              ; beyond maximum?
2844   8DCD             ;       jr nc,dspr5         ; yes, don't delete it.
2845   8DCD DD 7E 05    dspr1  ld a,(ix+5)         ; type of new sprite.
2846   8DD0 3C                 inc a               ; is this enabled?
2847   8DD1 20 06              jr nz,dspr4         ; yes, display both.
2848   8DD3 CD 70 8E    dspr6  call sspria         ; show single sprite.
2849   8DD6 C3 B2 8D           jp dspr2
2850   8DD9             
2851   8DD9             ; Displaying two sprites.  Don't bother redrawing if nothing has changed.
2852   8DD9             
2853   8DD9 DD 7E 04    dspr4  ld a,(ix+4)         ; old y.
2854   8DDC DD BE 09           cp (ix+9)           ; compare with new value.
2855   8DDF 20 19              jr nz,dspr7         ; they differ, need to redraw.
2856   8DE1 DD 7E 03           ld a,(ix+3)         ; old x.
2857   8DE4 DD BE 08           cp (ix+8)           ; compare against new value.
2858   8DE7 20 11              jr nz,dspr7         ; they differ, need to redraw.
2859   8DE9 DD 7E 02           ld a,(ix+2)         ; old frame.
2860   8DEC DD BE 07           cp (ix+7)           ; compare against new value.
2861   8DEF 20 09              jr nz,dspr7         ; they differ, need to redraw.
2862   8DF1 DD 7E 01           ld a,(ix+1)         ; old image.
2863   8DF4 DD BE 06           cp (ix+6)           ; compare against new value.
2864   8DF7 CA B2 8D           jp z,dspr2          ; everything is the same, don't redraw.
2865   8DFA CD 85 8E    dspr7  call sspric         ; delete old sprite, draw new one simultaneously.
2866   8DFD C3 B2 8D           jp dspr2
2867   8E00 CD 7F 8E    dspr3  call ssprib         ; show single sprite.
2868   8E03 C3 B2 8D           jp dspr2
2869   8E06             
2870   8E06             
2871   8E06             ; Get sprite address calculations.
2872   8E06             ; gspran = new sprite, gsprad = old sprite.
2873   8E06             
2874   8E06 DD 6E 08    gspran ld l,(ix+8)         ; new x coordinate.
2875   8E09 DD 66 09           ld h,(ix+9)         ; new y coordinate.
2876   8E0C 22 3A 7D           ld (dispx),hl       ; set display coordinates.
2877   8E0F DD 7E 06           ld a,(ix+6)         ; new sprite image.
2878   8E12 CD 19 91           call gfrm           ; fetch start frame for this sprite.
2879   8E15 7E                 ld a,(hl)           ; frame in accumulator.
2880   8E16 DD 86 07           add a,(ix+7)        ; new add frame number.
2881   8E19 C3 2F 8E           jp gspra0
2882   8E1C             
2883   8E1C DD 6E 03    gsprad ld l,(ix+3)         ; x coordinate.
2884   8E1F DD 66 04           ld h,(ix+4)         ; y coordinate.
2885   8E22 22 3A 7D           ld (dispx),hl       ; set display coordinates.
2886   8E25 DD 7E 01           ld a,(ix+1)         ; sprite image.
2887   8E28 CD 19 91           call gfrm           ; fetch start frame for this sprite.
2888   8E2B 7E                 ld a,(hl)           ; frame in accumulator.
2889   8E2C DD 86 02           add a,(ix+2)        ; add frame number.
2890   8E2F             
2891   8E2F 0F          gspra0 rrca                ; multiply by 128.
2892   8E30 57                 ld d,a              ; store in d.
2893   8E31 E6 80              and 128             ; low byte bit.
2894   8E33 5F                 ld e,a              ; got low byte.
2895   8E34 7A                 ld a,d              ; restore result.
2896   8E35 E6 7F              and 127             ; high byte bits.
2897   8E37 57                 ld d,a              ; displacement high byte.
2898   8E38 21 82 AC           ld hl,sprgfx        ; address of play sprites.
2899   8E3B 19                 add hl,de           ; point to frame.
2900   8E3C             
2901   8E3C 3A 3B 7D           ld a,(dispy)        ; y coordinate.
2902   8E3F E6 06              and 6               ; position within byte boundary.
2903   8E41 4F                 ld c,a              ; low byte of table displacement.
2904   8E42 07                 rlca                ; multiply by 32.
2905   8E43 07                 rlca                ; already a multiple
2906   8E44 07                 rlca                ; of 2, so just 4
2907   8E45 07                 rlca                ; shifts needed.
2908   8E46 5F                 ld e,a              ; put displacement in low byte of de.
2909   8E47 16 00              ld d,0              ; zero the high byte.
2910   8E49 42                 ld b,d              ; no high byte for mask displacement either.
2911   8E4A 19                 add hl,de           ; add to sprite address.
2912   8E4B EB                 ex de,hl            ; need it in de for now.
2913   8E4C 21 68 8E           ld hl,spmask        ; pointer to mask table.
2914   8E4F 09                 add hl,bc           ; add displacement to pointer.
2915   8E50 4E                 ld c,(hl)           ; left mask.
2916   8E51 23                 inc hl
2917   8E52 46                 ld b,(hl)           ; right mask.
2918   8E53             
2919   8E53             ; Drop into screen address routine.
2920   8E53             ; This routine returns a screen address for (dispx, dispy) in hl.
2921   8E53             
2922   8E53 3A 3A 7D    scadd  ld a,(dispx)        ; coordinate.
2923   8E56 6F                 ld l,a              ; low byte of table.
2924   8E57 26 FB              ld h,251            ; high byte of 64256 (SCADTB).
2925   8E59 7E                 ld a,(hl)           ; fetch high byte.
2926   8E5A 24                 inc h               ; point to low byte table.
2927   8E5B 6E                 ld l,(hl)           ; fetch low byte.
2928   8E5C 67                 ld h,a              ; hl points to start of line.
2929   8E5D 3A 3B 7D           ld a,(dispy)        ; y pixel coordinate.
2930   8E60 0F                 rrca                ; divide by 8.
2931   8E61 0F                 rrca
2932   8E62 0F                 rrca
2933   8E63 E6 1F              and 31              ; squares 0 - 31 across screen.
2934   8E65 85                 add a,l             ; add to address.
2935   8E66 6F                 ld l,a              ; copy to hl = address of screen.
2936   8E67 C9                 ret
2937   8E68             
2938   8E68             spmask defb 255,0,63,192,15,240,3,252
2938   8E68 FF003FC00FF003FC
2939   8E70             
2940   8E70             
2941   8E70             ; These are the sprite routines.
2942   8E70             ; sspria = single sprite, old (ix).
2943   8E70             ; ssprib = single sprite, new (ix+5).
2944   8E70             ; sspric = both sprites, old (ix) and new (ix+5).
2945   8E70             
2946   8E70 CD 1C 8E    sspria call gsprad         ; get old sprite address.
2947   8E73 3E 10       sspri2 ld a,16             ; vertical lines.
2948   8E75 08          sspri0 ex af,af'           ; store line counter away in alternate registers.
2949   8E76 CD 08 8F           call dline          ; draw a line.
2950   8E79 08                 ex af,af'           ; restore line counter.
2951   8E7A 3D                 dec a               ; one less to go.
2952   8E7B C2 75 8E           jp nz,sspri0
2953   8E7E C9                 ret
2954   8E7F             
2955   8E7F CD 06 8E    ssprib call gspran         ; get new sprite address.
2956   8E82 C3 73 8E           jp sspri2
2957   8E85             
2958   8E85 CD 1C 8E    sspric call gsprad         ; get old sprite address.
2959   8E88 D9                 exx                 ; store addresses.
2960   8E89 CD 06 8E           call gspran         ; get new sprite addresses.
2961   8E8C CD 08 8F           call dline          ; draw a line.
2962   8E8F D9                 exx                 ; restore old addresses.
2963   8E90 CD 08 8F           call dline          ; delete a line.
2964   8E93 D9                 exx                 ; flip to new sprite addresses.
2965   8E94 CD 08 8F           call dline          ; draw a line.
2966   8E97 D9                 exx                 ; restore old addresses.
2967   8E98 CD 08 8F           call dline          ; delete a line.
2968   8E9B D9                 exx                 ; flip to new sprite addresses.
2969   8E9C CD 08 8F           call dline          ; draw a line.
2970   8E9F D9                 exx                 ; restore old addresses.
2971   8EA0 CD 08 8F           call dline          ; delete a line.
2972   8EA3 D9                 exx                 ; flip to new sprite addresses.
2973   8EA4 CD 08 8F           call dline          ; draw a line.
2974   8EA7 D9                 exx                 ; restore old addresses.
2975   8EA8 CD 08 8F           call dline          ; delete a line.
2976   8EAB D9                 exx                 ; flip to new sprite addresses.
2977   8EAC CD 08 8F           call dline          ; draw a line.
2978   8EAF D9                 exx                 ; restore old addresses.
2979   8EB0 CD 08 8F           call dline          ; delete a line.
2980   8EB3 D9                 exx                 ; flip to new sprite addresses.
2981   8EB4 CD 08 8F           call dline          ; draw a line.
2982   8EB7 D9                 exx                 ; restore old addresses.
2983   8EB8 CD 08 8F           call dline          ; delete a line.
2984   8EBB D9                 exx                 ; flip to new sprite addresses.
2985   8EBC CD 08 8F           call dline          ; draw a line.
2986   8EBF D9                 exx                 ; restore old addresses.
2987   8EC0 CD 08 8F           call dline          ; delete a line.
2988   8EC3 D9                 exx                 ; flip to new sprite addresses.
2989   8EC4 CD 08 8F           call dline          ; draw a line.
2990   8EC7 D9                 exx                 ; restore old addresses.
2991   8EC8 CD 08 8F           call dline          ; delete a line.
2992   8ECB D9                 exx                 ; flip to new sprite addresses.
2993   8ECC CD 08 8F           call dline          ; draw a line.
2994   8ECF D9                 exx                 ; restore old addresses.
2995   8ED0 CD 08 8F           call dline          ; delete a line.
2996   8ED3 D9                 exx                 ; flip to new sprite addresses.
2997   8ED4 CD 08 8F           call dline          ; draw a line.
2998   8ED7 D9                 exx                 ; restore old addresses.
2999   8ED8 CD 08 8F           call dline          ; delete a line.
3000   8EDB D9                 exx                 ; flip to new sprite addresses.
3001   8EDC CD 08 8F           call dline          ; draw a line.
3002   8EDF D9                 exx                 ; restore old addresses.
3003   8EE0 CD 08 8F           call dline          ; delete a line.
3004   8EE3 D9                 exx                 ; flip to new sprite addresses.
3005   8EE4 CD 08 8F           call dline          ; draw a line.
3006   8EE7 D9                 exx                 ; restore old addresses.
3007   8EE8 CD 08 8F           call dline          ; delete a line.
3008   8EEB D9                 exx                 ; flip to new sprite addresses.
3009   8EEC CD 08 8F           call dline          ; draw a line.
3010   8EEF D9                 exx                 ; restore old addresses.
3011   8EF0 CD 08 8F           call dline          ; delete a line.
3012   8EF3 D9                 exx                 ; flip to new sprite addresses.
3013   8EF4 CD 08 8F           call dline          ; draw a line.
3014   8EF7 D9                 exx                 ; restore old addresses.
3015   8EF8 CD 08 8F           call dline          ; delete a line.
3016   8EFB D9                 exx                 ; flip to new sprite addresses.
3017   8EFC CD 08 8F           call dline          ; draw a line.
3018   8EFF D9                 exx                 ; restore old addresses.
3019   8F00 CD 08 8F           call dline          ; delete a line.
3020   8F03 D9                 exx                 ; flip to new sprite addresses.
3021   8F04 CD 08 8F           call dline          ; draw a line.
3022   8F07 D9                 exx                 ; restore old addresses.
3023   8F08             
3024   8F08             ; Drop through.
3025   8F08             ; Line drawn, now work out next target address.
3026   8F08             
3027   8F08 1A          dline  ld a,(de)           ; graphic data.
3028   8F09 A1                 and c               ; mask away what's not needed.
3029   8F0A AE                 xor (hl)            ; XOR with what's there.
3030   8F0B 77                 ld (hl),a           ; bung it in.
3031   8F0C 2C                 inc l               ; next screen address.
3032   8F0D 2C                 inc l               ; next screen address.
3033   8F0E 1A                 ld a,(de)           ; fetch data.
3034   8F0F A0                 and b               ; mask away unwanted bits.
3035   8F10 AE                 xor (hl)            ; XOR with what's there.
3036   8F11 77                 ld (hl),a           ; bung it in.
3037   8F12 13                 inc de              ; next graphic.
3038   8F13 2D                 dec l               ; one character cell to the left.
3039   8F14 1A                 ld a,(de)           ; second bit of data.
3040   8F15 AE                 xor (hl)            ; XOR with what's there.
3041   8F16 77                 ld (hl),a           ; bung it in.
3042   8F17 13                 inc de              ; point to next line of data.
3043   8F18 2D                 dec l               ; another char left.
3044   8F19             
3045   8F19             ; Line drawn, now work out next target address.
3046   8F19             
3047   8F19 24          nline  inc h               ; increment pixel.
3048   8F1A 7C                 ld a,h              ; get pixel address.
3049   8F1B E6 07              and 7               ; straddling character position?
3050   8F1D C0                 ret nz              ; no, we're on next line already.
3051   8F1E 7C                 ld a,h              ; get pixel address.
3052   8F1F D6 08              sub 8               ; subtract 8 for start of segment.
3053   8F21 67                 ld h,a              ; new high byte of address.
3054   8F22 7D                 ld a,l              ; get low byte of address.
3055   8F23 C6 20              add a,32            ; one line down.
3056   8F25 6F                 ld l,a              ; new low byte.
3057   8F26 D0                 ret nc              ; not reached next segment yet.
3058   8F27 7C                 ld a,h              ; address high.
3059   8F28 C6 08              add a,8             ; add 8 to next segment.
3060   8F2A 67                 ld h,a              ; new high byte.
3061   8F2B FE 58              cp 88               ; reached end of screen?
3062   8F2D D8                 ret c               ; not yet.
3063   8F2E 26 38              ld h,56             ; back to ROM.
3064   8F30 C9                 ret
3065   8F31             
3066   8F31             
3067   8F31             ; Animates a sprite.
3068   8F31             
3069   8F31 21 0A 7D    animsp ld hl,frmno         ; game frame.
3070   8F34 A6                 and (hl)            ; is it time to change the frame?
3071   8F35 C0                 ret nz              ; not this frame.
3072   8F36 DD 7E 06           ld a,(ix+6)         ; sprite image.
3073   8F39 CD 19 91           call gfrm           ; get frame data.
3074   8F3C 23                 inc hl              ; point to frames.
3075   8F3D DD 7E 07           ld a,(ix+7)         ; sprite frame.
3076   8F40 3C                 inc a               ; next one along.
3077   8F41 BE                 cp (hl)             ; reached the last frame?
3078   8F42 38 01              jr c,anims0         ; no, not yet.
3079   8F44 AF                 xor a               ; start at first frame.
3080   8F45 DD 77 07    anims0 ld (ix+7),a         ; new frame.
3081   8F48 C9                 ret
3082   8F49 21 0A 7D    animbk ld hl,frmno         ; game frame.
3083   8F4C A6                 and (hl)            ; is it time to change the frame?
3084   8F4D C0                 ret nz              ; not this frame.
3085   8F4E DD 7E 06           ld a,(ix+6)         ; sprite image.
3086   8F51 CD 19 91           call gfrm           ; get frame data.
3087   8F54 23                 inc hl              ; point to frames.
3088   8F55 DD 7E 07           ld a,(ix+7)         ; sprite frame.
3089   8F58 A7                 and a               ; first one?
3090   8F59 20 01              jr nz,rtanb0        ; yes, start at end.
3091   8F5B 7E                 ld a,(hl)           ; last sprite.
3092   8F5C 3D          rtanb0 dec a               ; next one along.
3093   8F5D 18 E6              jr anims0           ; set new frame.
3094   8F5F             
3095   8F5F             ; Check for collision with other sprite, strict enforcement.
3096   8F5F             
3097   8F5F 21 C4 92    sktyp  ld hl,sprtab        ; sprite table.
3098   8F62 3E 0C       numsp2 ld a,NUMSPR         ; number of sprites.
3099   8F64 08          sktyp0 ex af,af'           ; store loop counter.
3100   8F65 22 80 8F           ld (skptr),hl       ; store pointer to sprite.
3101   8F68 7E                 ld a,(hl)           ; get sprite type.
3102   8F69 B8                 cp b                ; is it the type we seek?
3103   8F6A 28 16              jr z,coltyp         ; yes, we can use this one.
3104   8F6C 2A 80 8F    sktyp1 ld hl,(skptr)       ; retrieve sprite pointer.
3105   8F6F 11 11 00           ld de,TABSIZ        ; size of each entry.
3106   8F72 19                 add hl,de           ; point to next sprite in table.
3107   8F73 08                 ex af,af'           ; restore loop counter.
3108   8F74 3D                 dec a               ; one less iteration.
3109   8F75 C2 64 8F           jp nz,sktyp0        ; keep going until we find a slot.
3110   8F78 21 00 00           ld hl,0             ; default to ROM address - no sprite.
3111   8F7B 22 80 8F           ld (skptr),hl       ; store pointer to sprite.
3112   8F7E B4                 or h                ; don't return with zero flag set.
3113   8F7F C9                 ret                 ; didn't find one.
3114   8F80 00 00       skptr  defw 0              ; search pointer.
3115   8F82             
3116   8F82 DD 7E 00    coltyp ld a,(ix+0)         ; current sprite type.
3117   8F85 B8                 cp b                ; seeking sprite of same type?
3118   8F86 28 27              jr z,colty1         ; yes, need to check we're not detecting ourselves.
3119   8F88 11 08 00    colty0 ld de,X             ; distance to x position in table.
3120   8F8B 19                 add hl,de           ; point to coords.
3121   8F8C 5E                 ld e,(hl)           ; fetch x coordinate.
3122   8F8D 23                 inc hl              ; now point to y.
3123   8F8E 56                 ld d,(hl)           ; that's y coordinate.
3124   8F8F             
3125   8F8F             ; Drop into collision detection.
3126   8F8F             
3127   8F8F DD 7E 08    colc16 ld a,(ix+X)         ; x coord.
3128   8F92 93                 sub e               ; subtract x.
3129   8F93 30 02              jr nc,colc1a        ; result is positive.
3130   8F95 ED 44              neg                 ; make negative positive.
3131   8F97 FE 10       colc1a cp 16               ; within x range?
3132   8F99 30 D1              jr nc,sktyp1        ; no - they've missed.
3133   8F9B 4F                 ld c,a              ; store difference.
3134   8F9C DD 7E 09           ld a,(ix+Y)         ; y coord.
3135   8F9F 92                 sub d               ; subtract y.
3136   8FA0 30 02              jr nc,colc1b        ; result is positive.
3137   8FA2 ED 44              neg                 ; make negative positive.
3138   8FA4 FE 10       colc1b cp 16               ; within y range?
3139   8FA6 30 C4              jr nc,sktyp1        ; no - they've missed.
3140   8FA8 81                 add a,c             ; add x difference.
3141   8FA9 FE 1A              cp 26               ; only 5 corner pixels touching?
3142   8FAB D8                 ret c               ; carry set if there's a collision.
3143   8FAC C3 6C 8F           jp sktyp1           ; try next sprite in table.
3144   8FAF             
3145   8FAF DD E5       colty1 push ix             ; base sprite address onto stack.
3146   8FB1 D1                 pop de              ; pop it into de.
3147   8FB2 EB                 ex de,hl            ; flip hl into de.
3148   8FB3 ED 52              sbc hl,de           ; compare the two.
3149   8FB5 EB                 ex de,hl            ; restore hl.
3150   8FB6 28 B4              jr z,sktyp1         ; addresses are identical.
3151   8FB8 C3 88 8F           jp colty0
3152   8FBB             
3153   8FBB             ; Display number.
3154   8FBB             
3155   8FBB 01 CC 8F    disply ld bc,displ0        ; display workspace.
3156   8FBE CD B4 84           call num2ch         ; convert accumulator to string.
3157   8FC1 0B                 dec bc              ; back one character.
3158   8FC2 0A                 ld a,(bc)           ; fetch digit.
3159   8FC3 F6 80              or 128              ; insert end marker.
3160   8FC5 02                 ld (bc),a           ; new value.
3161   8FC6 21 CC 8F           ld hl,displ0        ; display space.
3162   8FC9 C3 1F 8C           jp dmsg3            ; display the string.
3163   8FCC 00 00 00 8D displ0 defb 0,0,0,13+128
3164   8FD0             
3165   8FD0             
3166   8FD0             ; Initialise screen.
3167   8FD0             
3168   8FD0 3A A1 93    initsc ld a,(roomtb)       ; whereabouts in the map are we?
3169   8FD3 CD DD 8F           call tstsc          ; find displacement.
3170   8FD6 FE FF              cp 255              ; is it valid?
3171   8FD8 C8                 ret z               ; no, it's rubbish.
3172   8FD9 32 14 7D           ld (scno),a         ; store new room number.
3173   8FDC C9                 ret
3174   8FDD             
3175   8FDD             ; Test screen.
3176   8FDD             
3177   8FDD 21 1F 94    tstsc  ld hl,mapdat-MAPWID ; start of map data, subtract width for negative.
3178   8FE0 47                 ld b,a              ; store room in b for now.
3179   8FE1 C6 0B              add a,MAPWID        ; add width in case we're negative.
3180   8FE3 5F                 ld e,a              ; screen into e.
3181   8FE4 16 00              ld d,0              ; zeroise d.
3182   8FE6 19                 add hl,de           ; add displacement to map data.
3183   8FE7 7E                 ld a,(hl)           ; find room number there.
3184   8FE8 C9                 ret
3185   8FE9             
3186   8FE9             ; Screen left.
3187   8FE9             
3188   8FE9 3A A1 93    scrl   ld a,(roomtb)       ; present room table pointer.
3189   8FEC 3D                 dec a               ; room left.
3190   8FED CD DD 8F    scrl0  call tstsc          ; test screen.
3191   8FF0 3C                 inc a               ; is there a screen this way?
3192   8FF1 C8                 ret z               ; no, return to loop.
3193   8FF2 78                 ld a,b              ; restore room displacement.
3194   8FF3 32 A1 93           ld (roomtb),a       ; new room table position.
3195   8FF6 CD D0 8F    scrl1  call initsc         ; set new screen.
3196   8FF9 21 37 7D           ld hl,restfl        ; restart screen flag.
3197   8FFC 36 02              ld (hl),2           ; set it.
3198   8FFE C9                 ret
3199   8FFF 3A A1 93    scrr   ld a,(roomtb)       ; room table pointer.
3200   9002 3C                 inc a               ; room right.
3201   9003 18 E8              jr scrl0
3202   9005 3A A1 93    scru   ld a,(roomtb)       ; room table pointer.
3203   9008 D6 0B              sub MAPWID          ; room up.
3204   900A 18 E1              jr scrl0
3205   900C 3A A1 93    scrd   ld a,(roomtb)       ; room table pointer.
3206   900F C6 0B              add a,MAPWID        ; room down.
3207   9011 18 DA              jr scrl0
3208   9013             
3209   9013             ; Jump to new screen.
3210   9013             
3211   9013 21 2A 94    nwscr  ld hl,mapdat        ; start of map data.
3212   9016 01 00 50           ld bc,256*80        ; zero room count, 80 to search.
3213   9019 BE          nwscr0 cp (hl)             ; have we found a match for screen?
3214   901A 28 05              jr z,nwscr1         ; yes, set new point in map.
3215   901C 23                 inc hl              ; next room.
3216   901D 0C                 inc c               ; count rooms.
3217   901E 10 F9              djnz nwscr0         ; keep looking.
3218   9020 C9                 ret
3219   9021 79          nwscr1 ld a,c              ; room displacement.
3220   9022 32 A1 93           ld (roomtb),a       ; set the map position.
3221   9025 18 CF              jr scrl1            ; draw new room.
3222   9027             
3223   9027             
3224   9027             ; Gravity processing.
3225   9027             
3226   9027 DD 7E 0D    grav   ld a,(ix+13)        ; in-air flag.
3227   902A A7                 and a               ; are we in the air?
3228   902B C8                 ret z               ; no we are not.
3229   902C 3C                 inc a               ; increment it.
3230   902D CA 77 90           jp z,ogrv           ; set to 255, use old gravity.
3231   9030 DD 77 0D           ld (ix+13),a        ; write new setting.
3232   9033 1F                 rra                 ; every other frame.
3233   9034 30 0A              jr nc,grav0         ; don't apply gravity this time.
3234   9036 DD 7E 0E           ld a,(ix+14)        ; pixels to move.
3235   9039 FE 10              cp 16               ; reached maximum?
3236   903B 28 03              jr z,grav0          ; yes, continue.
3237   903D DD 34 0E           inc (ix+14)         ; slow down ascent/speed up fall.
3238   9040 DD 7E 0E    grav0  ld a,(ix+14)        ; get distance to move.
3239   9043 CB 2F              sra a               ; divide by 2.
3240   9045 A7                 and a               ; any movement required?
3241   9046 C8                 ret z               ; no, not this time.
3242   9047 FE 80              cp 128              ; is it up or down?
3243   9049 30 0C              jr nc,gravu         ; it's up.
3244   904B 47          gravd  ld b,a              ; set pixels to move.
3245   904C CD 58 8A    gravd0 call cangd          ; can we go down?
3246   904F 20 15              jr nz,gravst        ; can't move down, so stop.
3247   9051 DD 34 08           inc (ix+8)          ; adjust new x coord.
3248   9054 10 F6              djnz gravd0
3249   9056 C9                 ret
3250   9057 ED 44       gravu  neg                 ; flip the sign so it's positive.
3251   9059 47                 ld b,a              ; set pixels to move.
3252   905A CD 35 8A    gravu0 call cangu          ; can we go up?
3253   905D C2 FE 90           jp nz,ifalls        ; can't move up, go down next.
3254   9060 DD 35 08           dec (ix+8)          ; adjust new x coord.
3255   9063 10 F5              djnz gravu0
3256   9065 C9                 ret
3257   9066 DD 7E 0E    gravst ld a,(ix+14)        ; jump pointer high.
3258   9069 DD 36 0D 00        ld (ix+13),0        ; reset falling flag.
3259   906D DD 36 0E 00        ld (ix+14),0        ; store new speed.
3260   9071 FE 08              cp 8                ; was speed the maximum?
3261   9073 CA 73 A4    evftf  jp z,evnt15         ; yes, fallen too far.
3262   9076 C9                 ret
3263   9077             
3264   9077             ; Old gravity processing for compatibility with 4.6 and 4.7.
3265   9077             
3266   9077 DD 5E 0E    ogrv   ld e,(ix+14)        ; get index to table.
3267   907A 16 00              ld d,0              ; no high byte.
3268   907C 21 D7 EA           ld hl,jtab          ; jump table.
3269   907F 19                 add hl,de           ; hl points to jump value.
3270   9080 7E                 ld a,(hl)           ; pixels to move.
3271   9081 FE 63              cp 99               ; reached the end?
3272   9083 20 04              jr nz,ogrv0         ; no, continue.
3273   9085 2B                 dec hl              ; go back to previous value.
3274   9086 7E                 ld a,(hl)           ; fetch that from table.
3275   9087 18 03              jr ogrv1
3276   9089 DD 34 0E    ogrv0  inc (ix+14)         ; point to next table entry.
3277   908C A7          ogrv1  and a               ; any movement required?
3278   908D C8                 ret z               ; no, not this time.
3279   908E FE 80              cp 128              ; is it up or down?
3280   9090 30 0C              jr nc,ogrvu         ; it's up.
3281   9092 47          ogrvd  ld b,a              ; set pixels to move.
3282   9093 CD 58 8A    ogrvd0 call cangd          ; can we go down?
3283   9096 20 14              jr nz,ogrvst        ; can't move down, so stop.
3284   9098 DD 34 08           inc (ix+8)          ; adjust new x coord.
3285   909B 10 F6              djnz ogrvd0
3286   909D C9                 ret
3287   909E ED 44       ogrvu  neg                 ; flip the sign so it's positive.
3288   90A0 47                 ld b,a              ; set pixels to move.
3289   90A1 CD 35 8A    ogrvu0 call cangu          ; can we go up?
3290   90A4 20 1D              jr nz,ogrv2         ; can't move up, go down next.
3291   90A6 DD 35 08           dec (ix+8)          ; adjust new x coord.
3292   90A9 10 F6              djnz ogrvu0
3293   90AB C9                 ret
3294   90AC DD 5E 0E    ogrvst ld e,(ix+14)        ; get index to table.
3295   90AF 16 00              ld d,0              ; no high byte.
3296   90B1 21 D7 EA           ld hl,jtab          ; jump table.
3297   90B4 19                 add hl,de           ; hl points to jump value.
3298   90B5 7E                 ld a,(hl)           ; fetch byte from table.
3299   90B6 FE 63              cp 99               ; is it the end marker?
3300   90B8 DD 36 0D 00        ld (ix+13),0        ; reset jump flag.
3301   90BC DD 36 0E 00        ld (ix+14),0        ; reset pointer.
3302   90C0 C3 73 90           jp evftf
3303   90C3 21 D7 EA    ogrv2  ld hl,jtab          ; jump table.
3304   90C6 06 00              ld b,0              ; offset into table.
3305   90C8 7E          ogrv4  ld a,(hl)           ; fetch table byte.
3306   90C9 FE 64              cp 100              ; hit end or downward move?
3307   90CB 38 04              jr c,ogrv3          ; yes.
3308   90CD 23                 inc hl              ; next byte of table.
3309   90CE 04                 inc b               ; next offset.
3310   90CF 18 F7              jr ogrv4            ; keep going until we find crest/end of table.
3311   90D1 DD 70 0E    ogrv3  ld (ix+14),b        ; set next table offset.
3312   90D4 C9                 ret
3313   90D5             
3314   90D5             ; Initiate fall check.
3315   90D5             
3316   90D5 DD 7E 0D    ifall  ld a,(ix+13)        ; jump pointer flag.
3317   90D8 A7                 and a               ; are we in the air?
3318   90D9 C0                 ret nz              ; if set, we're already in the air.
3319   90DA DD 66 09           ld h,(ix+9)         ; y coordinate.
3320   90DD 3E 10              ld a,16             ; look down 16 pixels.
3321   90DF DD 86 08           add a,(ix+8)        ; add x coordinate.
3322   90E2 6F                 ld l,a              ; coords in hl.
3323   90E3 22 3A 7D           ld (dispx),hl       ; set up test coordinates.
3324   90E6 CD 46 8B           call tstbl          ; get map address.
3325   90E9 CD B6 8A           call plchk          ; block, platform check.
3326   90EC C0                 ret nz              ; it's solid, don't fall.
3327   90ED 23                 inc hl              ; look right one cell.
3328   90EE CD B6 8A           call plchk          ; block, platform check.
3329   90F1 C0                 ret nz              ; it's solid, don't fall.
3330   90F2 3A 3B 7D           ld a,(dispy)        ; y coordinate.
3331   90F5 E6 07              and 7               ; position straddling block cells.
3332   90F7 28 05              jr z,ifalls         ; no more checks needed.
3333   90F9 23                 inc hl              ; look to third cell.
3334   90FA CD B6 8A           call plchk          ; block, platform check.
3335   90FD C0                 ret nz              ; it's solid, don't fall.
3336   90FE DD 34 0D    ifalls inc (ix+13)         ; set in air flag.
3337   9101 DD 36 0E 00        ld (ix+14),0        ; initial speed = 0.
3338   9105 C9                 ret
3339   9106 DD 7E 0D    tfall  ld a,(ix+13)        ; jump pointer flag.
3340   9109 A7                 and a               ; are we in the air?
3341   910A C0                 ret nz              ; if set, we're already in the air.
3342   910B CD D5 90           call ifall          ; do fall test.
3343   910E DD 7E 0D           ld a,(ix+13)        ; get falling flag.
3344   9111 A7                 and a               ; is it set?
3345   9112 C8                 ret z               ; no.
3346   9113 DD 36 0D FF        ld (ix+13),255      ; we're using the table.
3347   9117 18 AA              jr ogrv2            ; find position in table.
3348   9119             
3349   9119             
3350   9119             ; Get frame data for a particular sprite.
3351   9119             
3352   9119 07          gfrm   rlca                ; multiple of 2.
3353   911A 5F                 ld e,a              ; copy to de.
3354   911B 16 00              ld d,0              ; no high byte as max sprite is 128.
3355   911D 2A 3C 7D           ld hl,(frmptr)      ; frames used by game.
3356   9120 19                 add hl,de           ; point to frame start.
3357   9121 C9                 ret
3358   9122             
3359   9122             ; Find sprite list for current room.
3360   9122             
3361   9122 3A 14 7D    sprlst ld a,(scno)         ; screen number.
3362   9125 2A 46 7D    sprls2 ld hl,(nmeptr)      ; pointer to enemies.
3363   9128 47                 ld b,a              ; loop counter in b register.
3364   9129 A7                 and a               ; is it the first screen?
3365   912A C8                 ret z               ; yes, don't need to search data.
3366   912B 11 04 00           ld de,NMESIZ        ; bytes to skip.
3367   912E 7E          sprls1 ld a,(hl)           ; fetch type of sprite.
3368   912F 3C                 inc a               ; is it an end marker?
3369   9130 28 03              jr z,sprls0         ; yes, end of this room.
3370   9132 19                 add hl,de           ; point to next sprite in list.
3371   9133 18 F9              jr sprls1           ; continue until end of room.
3372   9135 23          sprls0 inc hl              ; point to start of next screen.
3373   9136 10 F6              djnz sprls1         ; continue until room found.
3374   9138 C9                 ret
3375   9139             
3376   9139             
3377   9139             ; Clear all but a single player sprite.
3378   9139             
3379   9139 06 0C       nspr   ld b,NUMSPR         ; sprite slots in table.
3380   913B DD 21 C4 92        ld ix,sprtab        ; sprite table.
3381   913F 11 11 00           ld de,TABSIZ        ; distance to next odd/even entry.
3382   9142 DD 7E 00    nspr0  ld a,(ix+0)         ; fetch sprite type.
3383   9145 A7                 and a               ; is it a player?
3384   9146 28 0D              jr z,nspr1          ; yes, keep this one.
3385   9148 DD 36 00 FF        ld (ix+0),255       ; delete sprite.
3386   914C DD 36 05 FF        ld (ix+5),255       ; remove next type.
3387   9150 DD 19              add ix,de           ; next sprite.
3388   9152 10 EE              djnz nspr0          ; one less space in the table.
3389   9154 C9                 ret
3390   9155 DD 36 00 FF nspr1  ld (ix+0),255       ; delete sprite.
3391   9159 DD 19              add ix,de           ; point to next sprite.
3392   915B 10 01              djnz nspr2          ; one less to do.
3393   915D C9                 ret
3394   915E DD 36 00 FF nspr2  ld (ix+0),255       ; delete sprite.
3395   9162 DD 36 05 FF        ld (ix+5),255       ; remove next type.
3396   9166 DD 19              add ix,de           ; next sprite.
3397   9168 10 F4              djnz nspr2          ; one less space in the table.
3398   916A C9                 ret
3399   916B             
3400   916B             
3401   916B             ; Two initialisation routines.
3402   916B             ; Initialise sprites - copy everything from list to table.
3403   916B             
3404   916B 06 0C       ispr   ld b,NUMSPR         ; sprite slots in table.
3405   916D DD 21 C4 92        ld ix,sprtab        ; sprite table.
3406   9171 7E          ispr2  ld a,(hl)           ; fetch byte.
3407   9172 FE FF              cp 255              ; is it an end marker?
3408   9174 C8                 ret z               ; yes, no more to do.
3409   9175 DD 7E 00    ispr1  ld a,(ix+0)         ; fetch sprite type.
3410   9178 FE FF              cp 255              ; is it enabled yet?
3411   917A 20 07              jr nz,ispr4         ; yes, try another slot.
3412   917C DD 7E 05           ld a,(ix+5)         ; next type.
3413   917F FE FF              cp 255              ; is it enabled yet?
3414   9181 28 08              jr z,ispr3          ; no, process this one.
3415   9183 11 11 00    ispr4  ld de,TABSIZ        ; distance to next odd/even entry.
3416   9186 DD 19              add ix,de           ; next sprite.
3417   9188 10 EB              djnz ispr1          ; repeat for remaining sprites.
3418   918A C9                 ret                 ; no more room in table.
3419   918B CD C0 91    ispr3  call cpsp           ; initialise a sprite.
3420   918E 10 E1              djnz ispr2          ; one less space in the table.
3421   9190 C9                 ret
3422   9191             
3423   9191             ; Initialise sprites - but not player, we're keeping the old one.
3424   9191             
3425   9191 06 0C       kspr   ld b,NUMSPR         ; sprite slots in table.
3426   9193 DD 21 C4 92        ld ix,sprtab        ; sprite table.
3427   9197 7E          kspr2  ld a,(hl)           ; fetch byte.
3428   9198 FE FF              cp 255              ; is it an end marker?
3429   919A C8                 ret z               ; yes, no more to do.
3430   919B A7                 and a               ; is it a player sprite?
3431   919C 20 06              jr nz,kspr1         ; no, add to table as normal.
3432   919E 11 04 00           ld de,NMESIZ        ; distance to next item in list.
3433   91A1 19                 add hl,de           ; point to next one.
3434   91A2 18 F3              jr kspr2
3435   91A4 DD 7E 00    kspr1  ld a,(ix+0)         ; fetch sprite type.
3436   91A7 FE FF              cp 255              ; is it enabled yet?
3437   91A9 20 07              jr nz,kspr4         ; yes, try another slot.
3438   91AB DD 7E 05           ld a,(ix+5)         ; next type.
3439   91AE FE FF              cp 255              ; is it enabled yet?
3440   91B0 28 08              jr z,kspr3          ; no, process this one.
3441   91B2 11 11 00    kspr4  ld de,TABSIZ        ; distance to next odd/even entry.
3442   91B5 DD 19              add ix,de           ; next sprite.
3443   91B7 10 EB              djnz kspr1          ; repeat for remaining sprites.
3444   91B9 C9                 ret                 ; no more room in table.
3445   91BA CD C0 91    kspr3  call cpsp           ; copy sprite to table.
3446   91BD 10 D8              djnz kspr2          ; one less space in the table.
3447   91BF C9                 ret
3448   91C0             
3449   91C0             ; Copy sprite from list to table.
3450   91C0             
3451   91C0 7E          cpsp   ld a,(hl)           ; fetch byte from table.
3452   91C1 DD 77 00           ld (ix+0),a         ; set up type.
3453   91C4 DD 77 05           ld (ix+PAM1ST),a    ; set up type.
3454   91C7 23                 inc hl              ; move to next byte.
3455   91C8 7E                 ld a,(hl)           ; fetch byte from table.
3456   91C9 DD 77 06           ld (ix+6),a         ; set up image.
3457   91CC 23                 inc hl              ; move to next byte.
3458   91CD 7E                 ld a,(hl)           ; fetch byte from table.
3459   91CE DD 36 03 C8        ld (ix+3),200       ; set initial coordinate off screen.
3460   91D2 DD 77 08           ld (ix+8),a         ; set up coordinate.
3461   91D5 23                 inc hl              ; move to next byte.
3462   91D6 7E                 ld a,(hl)           ; fetch byte from table.
3463   91D7 DD 77 09           ld (ix+9),a         ; set up coordinate.
3464   91DA 23                 inc hl              ; move to next byte.
3465   91DB AF                 xor a               ; zeroes in accumulator.
3466   91DC DD 77 07           ld (ix+7),a         ; reset frame number.
3467   91DF DD 77 0A           ld (ix+10),a        ; reset direction.
3468   91E2             ;       ld (ix+12),a        ; reset parameter B.
3469   91E2 DD 77 0D           ld (ix+13),a        ; reset jump pointer low.
3470   91E5 DD 77 0E           ld (ix+14),a        ; reset jump pointer high.
3471   91E8 DD 36 10 FF        ld (ix+16),255      ; reset data pointer to auto-restore.
3472   91EC DD E5              push ix             ; store ix pair.
3473   91EE E5                 push hl             ; store hl pair.
3474   91EF C5                 push bc
3475   91F0 CD 0F A1    evis0  call evnt09         ; perform event.
3476   91F3 C1                 pop bc
3477   91F4 E1                 pop hl              ; restore hl.
3478   91F5 DD E1              pop ix              ; restore ix.
3479   91F7 11 11 00           ld de,TABSIZ        ; distance to next odd/even entry.
3480   91FA DD 19              add ix,de           ; next sprite.
3481   91FC C9                 ret
3482   91FD             
3483   91FD             ; Clear the play area window.
3484   91FD             
3485   91FD 2A 0B 7D    clw    ld hl,(wintop)      ; get coordinates of window.
3486   9200 22 3A 7D           ld (dispx),hl       ; put into dispx for calculation.
3487   9203 3A 0D 7D           ld a,(winhgt)       ; height of window.
3488   9206 47                 ld b,a              ; copy to b register.
3489   9207 C5          clw3   push bc             ; store lines on stack.
3490   9208 3A 0E 7D           ld a,(winwid)       ; width of window.
3491   920B 08          clw2   ex af,af'           ; store column counter.
3492   920C CD 88 88           call gprad          ; get print address.
3493   920F AF                 xor a               ; zero byute to write.
3494   9210 06 08              ld b,8              ; pixel height of each cell.
3495   9212 12          clw1   ld (de),a           ; copy to screen.
3496   9213 14                 inc d               ; next screen row down.
3497   9214 10 FC              djnz clw1
3498   9216 CD B6 88           call gaadd          ; get attribute address.
3499   9219 3A 8D 5C           ld a,(23693)        ; get colour.
3500   921C 77                 ld (hl),a           ; write colour.
3501   921D 21 3B 7D           ld hl,dispy         ; column position.
3502   9220 34                 inc (hl)            ; next column.
3503   9221 08                 ex af,af'           ; restore column counter.
3504   9222 3D                 dec a               ; one less to do.
3505   9223 20 E6              jr nz,clw2          ; repeat for remaining columns.
3506   9225 3A 0C 7D           ld a,(winlft)       ; get left edge.
3507   9228 32 3B 7D           ld (dispy),a        ; reset y.
3508   922B 21 3A 7D           ld hl,dispx         ; line.
3509   922E 34                 inc (hl)            ; next line down.
3510   922F C1                 pop bc              ; restore line counter.
3511   9230 10 D5              djnz clw3           ; repeat down the screen.
3512   9232 2A 0B 7D           ld hl,(wintop)      ; get coordinates of window.
3513   9235 22 2F 7D           ld (charx),hl       ; put into display position.
3514   9238 C9                 ret
3515   9239             
3516   9239             ; Effects code.
3517   9239             ; Ticker routine is called 25 times per second.
3518   9239             
3519   9239 C9          scrly  ret
3520   923A 9F 80              defw txtscr         ; get screen address.
3521   923C 06 08              ld b,8              ; 8 pixel rows.
3522   923E E5                 push hl             ; store screen address.
3523   923F C5          scrly1 push bc             ; store rows on stack.
3524   9240 E5                 push hl
3525   9241 3A 9A 80           ld a,(txtwid)       ; characters wide.
3526   9244 47                 ld b,a              ; put into the loop counter.
3527   9245 A7                 and a               ; reset carry flag.
3528   9246 CB 16       scrly0 rl (hl)             ; rotate left.
3529   9248 2D                 dec l               ; char left.
3530   9249 10 FB              djnz scrly0         ; repeat for width of ticker message.
3531   924B E1                 pop hl
3532   924C 24                 inc h               ; next row down.
3533   924D C1                 pop bc              ; retrieve row counter from stack.
3534   924E 10 EF              djnz scrly1         ; repeat for all rows.
3535   9250 2A 9B 80           ld hl,(txtpos)      ; get text pointer.
3536   9253 7E                 ld a,(hl)           ; find character we're displaying.
3537   9254 E6 7F              and 127             ; remove end marker bit if applicable.
3538   9256 FE 0D              cp 13               ; is it newline?
3539   9258 20 02              jr nz,scrly5        ; no, it's okay.
3540   925A 3E 20              ld a,32             ; convert to a space instead.
3541   925C 07          scrly5 rlca
3542   925D 07                 rlca
3543   925E 07                 rlca                ; multiply by 8 to find char.
3544   925F 47                 ld b,a              ; store shift in b.
3545   9260 E6 03              and 3               ; keep within 768-byte range of font.
3546   9262 57                 ld d,a              ; that's our high byte.
3547   9263 78                 ld a,b              ; restore the shift.
3548   9264 E6 F8              and 248
3549   9266 5F                 ld e,a
3550   9267 2A 36 5C           ld hl,(23606)       ; font address.
3551   926A 19                 add hl,de           ; point to image of character.
3552   926B EB                 ex de,hl            ; need the address in de.
3553   926C E1                 pop hl
3554   926D             
3555   926D 3A 99 80           ld a,(txtbit)
3556   9270 4F                 ld c,a
3557   9271 06 08              ld b,8
3558   9273 1A          scrly3 ld a,(de)           ; get image of char line.
3559   9274 A1                 and c               ; test relevant bit of char.
3560   9275 28 01              jr z,scrly2         ; not set - skip.
3561   9277 34                 inc (hl)            ; set bit.
3562   9278 24          scrly2 inc h               ; next line of window.
3563   9279 13                 inc de              ; next line of char.
3564   927A 10 F7              djnz scrly3
3565   927C 21 99 80           ld hl,txtbit        ; bit of text to display.
3566   927F CB 0E              rrc (hl)            ; next bit of char to use.
3567   9281 D0                 ret nc              ; not reached end of character yet.
3568   9282 2A 9B 80           ld hl,(txtpos)      ; text pointer.
3569   9285 7E                 ld a,(hl)           ; what was the character?
3570   9286 23                 inc hl              ; next character in message.
3571   9287 17                 rla                 ; end of message?
3572   9288             ;       ret nc              ; not yet, exit here.
3573   9288             ;       ld a,201            ; code for ret.
3574   9288             ;       ld (scrly),a        ; disable scrolling routine.
3575   9288 30 03              jr nc,scrly6        ; not yet - continue.
3576   928A 2A 9D 80    scrly4 ld hl,(txtini)      ; start of scrolling message.
3577   928D 22 9B 80    scrly6 ld (txtpos),hl      ; new text pointer position.
3578   9290 C9                 ret
3579   9291             
3580   9291 CD FA 8C    iscrly call prescr         ; set up display position.
3581   9294 21 3E A5           ld hl,msgdat        ; text messages.
3582   9297 78                 ld a,b              ; width.
3583   9298 3D                 dec a               ; subtract one.
3584   9299 FE 20              cp 32               ; is it between 1 and 32?
3585   929B 30 0B              jr nc,iscrl0        ; no, disable messages.
3586   929D 79                 ld a,c              ; message number.
3587   929E 50                 ld d,b              ; copy width to d.
3588   929F CD 03 8D           call getwrd         ; find message start.
3589   92A2 42                 ld b,d              ; restore width to b register.
3590   92A3 22 9D 80           ld (txtini),hl      ; set initial text position.
3591   92A6 3E 2A              ld a,42             ; code for ld hl,(nn).
3592   92A8 32 39 92    iscrl0 ld (scrly),a        ; enable/disable scrolling routine.
3593   92AB CD FA 8C           call prescr         ; set up display position.
3594   92AE CD 88 88           call gprad          ; get print address.
3595   92B1 68                 ld l,b              ; width in b so copy to hl.
3596   92B2 26 00              ld h,0              ; no high byte.
3597   92B4 2B                 dec hl              ; width minus one.
3598   92B5 19                 add hl,de           ; add width.
3599   92B6 22 9F 80           ld (txtscr),hl      ; set text screen address.
3600   92B9 78                 ld a,b              ; width.
3601   92BA 32 9A 80           ld (txtwid),a       ; set width in working storage.
3602   92BD 21 99 80           ld hl,txtbit        ; bit of text to display.
3603   92C0 36 80              ld (hl),128         ; start with leftmost bit.
3604   92C2 18 C6              jr scrly4
3605   92C4             
3606   92C4             ; Sprite table.
3607   92C4             ; ix+0  = type.
3608   92C4             ; ix+1  = sprite image number.
3609   92C4             ; ix+2  = frame.
3610   92C4             ; ix+3  = x coord.
3611   92C4             ; ix+4  = y coord.
3612   92C4             
3613   92C4             ; ix+5  = new type.
3614   92C4             ; ix+6  = new image number.
3615   92C4             ; ix+7  = new frame.
3616   92C4             ; ix+8  = new x coord.
3617   92C4             ; ix+9  = new y coord.
3618   92C4             
3619   92C4             ; ix+10 = direction.
3620   92C4             ; ix+11 = parameter 1.
3621   92C4             ; ix+12 = parameter 2.
3622   92C4             ; ix+13 = jump pointer low.
3623   92C4             ; ix+14 = jump pointer high.
3624   92C4             ; ix+15 = data pointer low.
3625   92C4             ; ix+16 = data pointer high.
3626   92C4             
3627   92C4             
3628   92C4             sprtab equ $
3629   92C4             
3630   92C4             ;       block NUMSPR * TABSIZ,255
3631   92C4             
3632   92C4                    defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
3632   92C4 FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3633   92D5                    defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
3633   92D5 FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3634   92E6                    defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
3634   92E6 FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3635   92F7                    defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
3635   92F7 FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3636   9308                    defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
3636   9308 FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3637   9319                    defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
3637   9319 FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3638   932A                    defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
3638   932A FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3639   933B                    defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
3639   933B FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3640   934C                    defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
3640   934C FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3641   935D                    defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
3641   935D FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3642   936E                    defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
3642   936E FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3643   937F                    defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
3643   937F FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3644   9390             ssprit defb 255,255,255,255,255,255,255,0,192,120,0,0,0,255,255,255,255
3644   9390 FFFFFFFFFFFFFF00C078000000FFFFFFFF
3645   93A1             
3646   93A1 22          roomtb defb 34                     ; room number.
3647   93A2             
3648   93A2             ; Everything below here will be generated by the editors.
3649   93A2             
3650   93A2             ; Sounds.
3651   93A2             
3652   93A2 8F          fx1    defb 128+15         ; volume and mixer.
3653   93A3 1F                 defb 31             ; white noise.
3654   93A4 E8 03              defw 1000           ; tone register.
3655   93A6 8F                 defb 128+15         ; volume and mixer.
3656   93A7 19                 defb 25             ; white noise.
3657   93A8 E8 03              defw 1000           ; tone register.
3658   93AA 8E                 defb 128+14         ; volume and mixer.
3659   93AB 13                 defb 19             ; white noise.
3660   93AC E8 03              defw 1000           ; tone register.
3661   93AE 8D                 defb 128+13         ; volume and mixer.
3662   93AF 0D                 defb 13             ; white noise.
3663   93B0 E8 03              defw 1000           ; tone register.
3664   93B2 8C                 defb 128+12         ; volume and mixer.
3665   93B3 07                 defb 7              ; white noise.
3666   93B4 E8 03              defw 1000           ; tone register.
3667   93B6 8B                 defb 128+11         ; volume and mixer.
3668   93B7 00                 defb 0              ; white noise.
3669   93B8 E8 03              defw 1000           ; tone register.
3670   93BA 8A                 defb 128+10         ; volume and mixer.
3671   93BB 06                 defb 6              ; white noise.
3672   93BC E8 03              defw 1000           ; tone register.
3673   93BE 88                 defb 128+8          ; volume and mixer.
3674   93BF 0C                 defb 12             ; white noise.
3675   93C0 E8 03              defw 1000           ; tone register.
3676   93C2 86                 defb 128+6          ; volume and mixer.
3677   93C3 12                 defb 18             ; white noise.
3678   93C4 E8 03              defw 1000           ; tone register.
3679   93C6 83                 defb 128+3          ; volume and mixer.
3680   93C7 18                 defb 24             ; white noise.
3681   93C8 E8 03              defw 1000           ; tone register.
3682   93CA FF                 defb 255
3683   93CB             
3684   93CB 4F          fx2    defb 064+15         ; volume and mixer.
3685   93CC 1B                 defb 27             ; white noise.
3686   93CD E8 03              defw 1000           ; tone register.
3687   93CF 4E                 defb 064+14         ; volume and mixer.
3688   93D0 1F                 defb 31             ; white noise.
3689   93D1 D0 07              defw 2000           ; tone register.
3690   93D3 4D                 defb 064+13         ; volume and mixer.
3691   93D4 1C                 defb 28             ; white noise.
3692   93D5 B8 0B              defw 3000           ; tone register.
3693   93D7 4C                 defb 064+12         ; volume and mixer.
3694   93D8 1F                 defb 31             ; white noise.
3695   93D9 D0 07              defw 2000           ; tone register.
3696   93DB 4B                 defb 064+11         ; volume and mixer.
3697   93DC 1D                 defb 29             ; white noise.
3698   93DD E8 03              defw 1000           ; tone register.
3699   93DF 4A                 defb 064+10         ; volume and mixer.
3700   93E0 1F                 defb 31             ; white noise.
3701   93E1 D0 07              defw 2000           ; tone register.
3702   93E3 49                 defb 064+9          ; volume and mixer.
3703   93E4 1E                 defb 30             ; white noise.
3704   93E5 B8 0B              defw 3000           ; tone register.
3705   93E7 48                 defb 064+8          ; volume and mixer.
3706   93E8 1F                 defb 31             ; white noise.
3707   93E9 D0 07              defw 2000           ; tone register.
3708   93EB 47                 defb 064+7          ; volume and mixer.
3709   93EC 1F                 defb 31             ; white noise.
3710   93ED E8 03              defw 1000           ; tone register.
3711   93EF 46                 defb 064+6          ; volume and mixer.
3712   93F0 1F                 defb 31             ; white noise.
3713   93F1 D0 07              defw 2000           ; tone register.
3714   93F3 FF                 defb 255
3715   93F4             
3716   93F4 4F          fx3    defb 064+15         ; volume and mixer.
3717   93F5 00                 defb 0              ; white noise.
3718   93F6 A0 0F              defw 4000           ; tone register.
3719   93F8 4F                 defb 064+15         ; volume and mixer.
3720   93F9 00                 defb 0              ; white noise.
3721   93FA 04 10              defw 4100           ; tone register.
3722   93FC 4E                 defb 064+14         ; volume and mixer.
3723   93FD 00                 defb 0              ; white noise.
3724   93FE 68 10              defw 4200           ; tone register.
3725   9400 4E                 defb 064+14         ; volume and mixer.
3726   9401 00                 defb 0              ; white noise.
3727   9402 CC 10              defw 4300           ; tone register.
3728   9404 4D                 defb 064+13         ; volume and mixer.
3729   9405 00                 defb 0              ; white noise.
3730   9406 30 11              defw 4400           ; tone register.
3731   9408 4D                 defb 064+13         ; volume and mixer.
3732   9409 00                 defb 0              ; white noise.
3733   940A 94 11              defw 4500           ; tone register.
3734   940C 4C                 defb 064+12         ; volume and mixer.
3735   940D 00                 defb 0              ; white noise.
3736   940E F8 11              defw 4600           ; tone register.
3737   9410 4C                 defb 064+12         ; volume and mixer.
3738   9411 00                 defb 0              ; white noise.
3739   9412 5C 12              defw 4700           ; tone register.
3740   9414 4B                 defb 064+11         ; volume and mixer.
3741   9415 00                 defb 0              ; white noise.
3742   9416 C0 12              defw 4800           ; tone register.
3743   9418 4A                 defb 064+10         ; volume and mixer.
3744   9419 00                 defb 0              ; white noise.
3745   941A 24 13              defw 4900           ; tone register.
3746   941C FF                 defb 255
3747   941D             
3748   941D 63                 defb 99             ; temporary marker.
3749   941E             
3750   941E             ; User routine.  Put your own code in here to be called with USER instruction.
3751   941E             ; if USER has an argument it will be passed in the accumulator.
3752   941E             
3753   941E C9          user   ret
3754   941F             
3755   941F             ; Game-specific data and events code generated by the compiler ------------------
3756   941F             
3757   941F             
3758   941F             WINDOWTOP equ 0
3759   941F             WINDOWLFT equ 2
3760   941F             WINDOWHGT equ 20
3761   941F             WINDOWWID equ 28 ;@
3762   941F             MAPWID equ 11
3763   941F                    defb 255,255,255,255,255,255,255,255,255,255,255
3763   941F FFFFFFFFFFFFFFFFFFFFFF
3764   942A             mapdat equ $
3765   942A                    defb 255,27,255,20,255,23,255,255,255,255,255
3765   942A FF1BFF14FF17FFFFFFFFFF
3766   9435                    defb 255,255,255,19,21,22,24,25,26,255,255
3766   9435 FFFFFF13151618191AFFFF
3767   9440                    defb 255,255,14,13,12,11,10,18,17,255,255
3767   9440 FFFF0E0D0C0B0A1211FFFF
3768   944B                    defb 255,255,255,15,3,0,4,6,8,255,255
3768   944B FFFFFF0F0300040608FFFF
3769   9456                    defb 255,255,255,16,2,1,5,7,9,255,255
3769   9456 FFFFFF100201050709FFFF
3770   9461                    defb 255,255,255,255,255,255,255,255,255,255,255
3770   9461 FFFFFFFFFFFFFFFFFFFFFF
3771   946C 26          stmap  defb 38
3772   946D             evnt00 equ $
3773   946D CD 58 8A           call cangd
3774   9470 C2 76 94           jp nz,a00017
3775   9473 CD D5 90           call ifall
3776   9476 CD 2C 87    a00017 call skobj
3777   9479 32 33 7D           ld (varobj),a
3778   947C 3E FF              ld a,255
3779   947E 21 33 7D           ld hl,varobj
3780   9481 BE                 cp (hl)
3781   9482 CA 73 95           jp z,a00465
3782   9485 3A 33 7D           ld a,(varobj)
3783   9488 CD B9 86           call getob
3784   948B 3E 32              ld a,50
3785   948D 32 C5 7F           ld (sndtyp),a
3786   9490 3E 01              ld a,1
3787   9492 21 14 7D           ld hl,scno
3788   9495 BE                 cp (hl)
3789   9496 C2 B5 94           jp nz,a00128
3790   9499 3A 20 7D           ld a,(vark)
3791   949C 3C                 inc a
3792   949D 32 20 7D           ld (vark),a
3793   94A0 3E 4F              ld a,79
3794   94A2 32 8D 5C           ld (23693),a
3795   94A5 3E 14              ld a,20
3796   94A7 32 2F 7D           ld (charx),a
3797   94AA 3E 1D              ld a,29
3798   94AC 32 30 7D           ld (chary),a
3799   94AF 3A 20 7D           ld a,(vark)
3800   94B2 CD BB 8F           call disply
3801   94B5 3E 10       a00128 ld a,16
3802   94B7 21 14 7D           ld hl,scno
3803   94BA BE                 cp (hl)
3804   94BB C2 DA 94           jp nz,a00194
3805   94BE 3A 20 7D           ld a,(vark)
3806   94C1 3C                 inc a
3807   94C2 32 20 7D           ld (vark),a
3808   94C5 3E 4F              ld a,79
3809   94C7 32 8D 5C           ld (23693),a
3810   94CA 3E 14              ld a,20
3811   94CC 32 2F 7D           ld (charx),a
3812   94CF 3E 1D              ld a,29
3813   94D1 32 30 7D           ld (chary),a
3814   94D4 3A 20 7D           ld a,(vark)
3815   94D7 CD BB 8F           call disply
3816   94DA 3E 07       a00194 ld a,7
3817   94DC 21 14 7D           ld hl,scno
3818   94DF BE                 cp (hl)
3819   94E0 C2 07 95           jp nz,a00272
3820   94E3 3E 03              ld a,3
3821   94E5 CD E7 86           call gotob
3822   94E8 DA 07 95           jp c,a00272
3823   94EB 3A 20 7D           ld a,(vark)
3824   94EE 3C                 inc a
3825   94EF 32 20 7D           ld (vark),a
3826   94F2 3E 4F              ld a,79
3827   94F4 32 8D 5C           ld (23693),a
3828   94F7 3E 14              ld a,20
3829   94F9 32 2F 7D           ld (charx),a
3830   94FC 3E 1D              ld a,29
3831   94FE 32 30 7D           ld (chary),a
3832   9501 3A 20 7D           ld a,(vark)
3833   9504 CD BB 8F           call disply
3834   9507 3E 0D       a00272 ld a,13
3835   9509 21 14 7D           ld hl,scno
3836   950C BE                 cp (hl)
3837   950D C2 1F 95           jp nz,a00314
3838   9510 3E 09              ld a,9
3839   9512 CD E7 86           call gotob
3840   9515 DA 1F 95           jp c,a00314
3841   9518 3A 18 7D           ld a,(varc)
3842   951B 3C                 inc a
3843   951C 32 18 7D           ld (varc),a
3844   951F 3E 11       a00314 ld a,17
3845   9521 21 14 7D           ld hl,scno
3846   9524 BE                 cp (hl)
3847   9525 C2 49 95           jp nz,a00389
3848   9528 3A 15 7D           ld a,(numlif)
3849   952B 3C                 inc a
3850   952C 32 15 7D           ld (numlif),a
3851   952F 3E 4E              ld a,78
3852   9531 32 8D 5C           ld (23693),a
3853   9534 3E 15              ld a,21
3854   9536 32 2F 7D           ld (charx),a
3855   9539 3E 1D              ld a,29
3856   953B 32 30 7D           ld (chary),a
3857   953E 3A 15 7D           ld a,(numlif)
3858   9541 CD BB 8F           call disply
3859   9544 3E 01              ld a,1
3860   9546 32 1D 7D           ld (varh),a
3861   9549 3E 13       a00389 ld a,19
3862   954B 21 14 7D           ld hl,scno
3863   954E BE                 cp (hl)
3864   954F C2 73 95           jp nz,a00465
3865   9552 3A 15 7D           ld a,(numlif)
3866   9555 3C                 inc a
3867   9556 32 15 7D           ld (numlif),a
3868   9559 3E 4E              ld a,78
3869   955B 32 8D 5C           ld (23693),a
3870   955E 3E 15              ld a,21
3871   9560 32 2F 7D           ld (charx),a
3872   9563 3E 1D              ld a,29
3873   9565 32 30 7D           ld (chary),a
3874   9568 3A 15 7D           ld a,(numlif)
3875   956B CD BB 8F           call disply
3876   956E 3E 01              ld a,1
3877   9570 32 1E 7D           ld (vari),a
3878   9573 3E DF       a00465 ld a,223
3879   9575 DD BE 09           cp (ix+9)
3880   9578 D2 8F 95           jp nc,a00510
3881   957B CD FF 8F           call scrr
3882   957E 3E 20              ld a,32
3883   9580 DD 77 09           ld (ix+9),a
3884   9583 DD 7E 08           ld a,(ix+8)
3885   9586 32 24 7D           ld (varo),a
3886   9589 DD 7E 09           ld a,(ix+9)
3887   958C 32 25 7D           ld (varp),a
3888   958F 3E 10       a00510 ld a,16
3889   9591 DD BE 09           cp (ix+9)
3890   9594 DA AB 95           jp c,a00554
3891   9597 CD E9 8F           call scrl
3892   959A 3E D0              ld a,208
3893   959C DD 77 09           ld (ix+9),a
3894   959F DD 7E 08           ld a,(ix+8)
3895   95A2 32 24 7D           ld (varo),a
3896   95A5 DD 7E 09           ld a,(ix+9)
3897   95A8 32 25 7D           ld (varp),a
3898   95AB 3E 02       a00554 ld a,2
3899   95AD DD BE 08           cp (ix+8)
3900   95B0 DA C7 95           jp c,a00599
3901   95B3 CD 05 90           call scru
3902   95B6 3E 8C              ld a,140
3903   95B8 DD 77 08           ld (ix+8),a
3904   95BB DD 7E 08           ld a,(ix+8)
3905   95BE 32 24 7D           ld (varo),a
3906   95C1 DD 7E 09           ld a,(ix+9)
3907   95C4 32 25 7D           ld (varp),a
3908   95C7 3E 8C       a00599 ld a,140
3909   95C9 DD BE 08           cp (ix+8)
3910   95CC D2 E3 95           jp nc,a00644
3911   95CF CD 0C 90           call scrd
3912   95D2 3E 08              ld a,8
3913   95D4 DD 77 08           ld (ix+8),a
3914   95D7 DD 7E 08           ld a,(ix+8)
3915   95DA 32 24 7D           ld (varo),a
3916   95DD DD 7E 09           ld a,(ix+9)
3917   95E0 32 25 7D           ld (varp),a
3918   95E3 CD FD 89    a00644 call laddd
3919   95E6 C2 FC 95           jp nz,a00683
3920   95E9 3E 02              ld a,2
3921   95EB 32 21 7D           ld (varl),a
3922   95EE CD 0D 8A           call laddu
3923   95F1 C2 F9 95           jp nz,a00679
3924   95F4 3E 01              ld a,1
3925   95F6 32 21 7D           ld (varl),a
3926   95F9 C3 00 96    a00679 jp a00691
3927   95FC AF          a00683 xor a
3928   95FD 32 21 7D           ld (varl),a
3929   9600 3A 09 7D    a00691 ld a,(joyval)
3930   9603 E6 01              and 1
3931   9605 CA 89 96           jp z,a00931
3932   9608 CD 86 8A           call cangr
3933   960B C2 89 96           jp nz,a00931
3934   960E 3A 09 7D           ld a,(joyval)
3935   9611 E6 04              and 4
3936   9613 CA 38 96           jp z,a00787
3937   9616 CD FD 89           call laddd
3938   9619 C2 1F 96           jp nz,a00741
3939   961C C3 35 96           jp a00783
3940   961F AF          a00741 xor a
3941   9620 21 16 7D           ld hl,vara
3942   9623 BE                 cp (hl)
3943   9624 C2 2B 96           jp nz,a00766
3944   9627 AF                 xor a
3945   9628 CD 31 8F           call animsp
3946   962B AF          a00766 xor a
3947   962C DD 77 06           ld (ix+6),a
3948   962F DD 34 09           inc (ix+9)
3949   9632 DD 34 09           inc (ix+9)
3950   9635 C3 89 96    a00783 jp a00931
3951   9638 3A 09 7D    a00787 ld a,(joyval)
3952   963B E6 08              and 8
3953   963D CA 62 96           jp z,a00860
3954   9640 CD 0D 8A           call laddu
3955   9643 C2 49 96           jp nz,a00814
3956   9646 C3 5F 96           jp a00855
3957   9649 AF          a00814 xor a
3958   964A DD 77 06           ld (ix+6),a
3959   964D AF                 xor a
3960   964E 21 16 7D           ld hl,vara
3961   9651 BE                 cp (hl)
3962   9652 C2 59 96           jp nz,a00846
3963   9655 AF                 xor a
3964   9656 CD 31 8F           call animsp
3965   9659 DD 34 09    a00846 inc (ix+9)
3966   965C DD 34 09           inc (ix+9)
3967   965F C3 89 96    a00855 jp a00931
3968   9662 3E 01       a00860 ld a,1
3969   9664 32 19 7D           ld (vard),a
3970   9667 AF                 xor a
3971   9668 DD 77 06           ld (ix+6),a
3972   966B AF                 xor a
3973   966C 21 16 7D           ld hl,vara
3974   966F BE                 cp (hl)
3975   9670 C2 83 96           jp nz,a00922
3976   9673 AF                 xor a
3977   9674 CD 31 8F           call animsp
3978   9677 AF                 xor a
3979   9678 DD BE 07           cp (ix+7)
3980   967B C2 83 96           jp nz,a00922
3981   967E 3E 14              ld a,20
3982   9680 32 C5 7F           ld (sndtyp),a
3983   9683 DD 34 09    a00922 inc (ix+9)
3984   9686 DD 34 09           inc (ix+9)
3985   9689 3A 09 7D    a00931 ld a,(joyval)
3986   968C E6 02              and 2
3987   968E CA 15 97           jp z,a01171
3988   9691 CD 7B 8A           call cangl
3989   9694 C2 15 97           jp nz,a01171
3990   9697 3A 09 7D           ld a,(joyval)
3991   969A E6 04              and 4
3992   969C CA C2 96           jp z,a01027
3993   969F CD FD 89           call laddd
3994   96A2 C2 A8 96           jp nz,a00981
3995   96A5 C3 BF 96           jp a01022
3996   96A8 AF          a00981 xor a
3997   96A9 21 16 7D           ld hl,vara
3998   96AC BE                 cp (hl)
3999   96AD C2 B4 96           jp nz,a01005
4000   96B0 AF                 xor a
4001   96B1 CD 31 8F           call animsp
4002   96B4 3E 01       a01005 ld a,1
4003   96B6 DD 77 06           ld (ix+6),a
4004   96B9 DD 35 09           dec (ix+9)
4005   96BC DD 35 09           dec (ix+9)
4006   96BF C3 15 97    a01022 jp a01171
4007   96C2 3A 09 7D    a01027 ld a,(joyval)
4008   96C5 E6 08              and 8
4009   96C7 CA ED 96           jp z,a01100
4010   96CA CD 0D 8A           call laddu
4011   96CD C2 D3 96           jp nz,a01054
4012   96D0 C3 EA 96           jp a01095
4013   96D3 3E 01       a01054 ld a,1
4014   96D5 DD 77 06           ld (ix+6),a
4015   96D8 AF                 xor a
4016   96D9 21 16 7D           ld hl,vara
4017   96DC BE                 cp (hl)
4018   96DD C2 E4 96           jp nz,a01086
4019   96E0 AF                 xor a
4020   96E1 CD 31 8F           call animsp
4021   96E4 DD 35 09    a01086 dec (ix+9)
4022   96E7 DD 35 09           dec (ix+9)
4023   96EA C3 15 97    a01095 jp a01171
4024   96ED 3E 02       a01100 ld a,2
4025   96EF 32 19 7D           ld (vard),a
4026   96F2 3E 01              ld a,1
4027   96F4 DD 77 06           ld (ix+6),a
4028   96F7 AF                 xor a
4029   96F8 21 16 7D           ld hl,vara
4030   96FB BE                 cp (hl)
4031   96FC C2 0F 97           jp nz,a01162
4032   96FF AF                 xor a
4033   9700 CD 31 8F           call animsp
4034   9703 AF                 xor a
4035   9704 DD BE 07           cp (ix+7)
4036   9707 C2 0F 97           jp nz,a01162
4037   970A 3E 14              ld a,20
4038   970C 32 C5 7F           ld (sndtyp),a
4039   970F DD 35 09    a01162 dec (ix+9)
4040   9712 DD 35 09           dec (ix+9)
4041   9715 3A 09 7D    a01171 ld a,(joyval)
4042   9718 E6 08              and 8
4043   971A CA 3F 97           jp z,a01244
4044   971D 3E 03              ld a,3
4045   971F 32 19 7D           ld (vard),a
4046   9722 CD 0D 8A           call laddu
4047   9725 C2 3F 97           jp nz,a01244
4048   9728 3E 02              ld a,2
4049   972A DD 77 06           ld (ix+6),a
4050   972D AF                 xor a
4051   972E 21 16 7D           ld hl,vara
4052   9731 BE                 cp (hl)
4053   9732 C2 39 97           jp nz,a01235
4054   9735 AF                 xor a
4055   9736 CD 31 8F           call animsp
4056   9739 DD 35 08    a01235 dec (ix+8)
4057   973C DD 35 08           dec (ix+8)
4058   973F 3A 09 7D    a01244 ld a,(joyval)
4059   9742 E6 04              and 4
4060   9744 CA 69 97           jp z,a01317
4061   9747 3E 03              ld a,3
4062   9749 32 19 7D           ld (vard),a
4063   974C CD FD 89           call laddd
4064   974F C2 69 97           jp nz,a01317
4065   9752 3E 02              ld a,2
4066   9754 DD 77 06           ld (ix+6),a
4067   9757 AF                 xor a
4068   9758 21 16 7D           ld hl,vara
4069   975B BE                 cp (hl)
4070   975C C2 63 97           jp nz,a01308
4071   975F AF                 xor a
4072   9760 CD 31 8F           call animsp
4073   9763 DD 34 08    a01308 inc (ix+8)
4074   9766 DD 34 08           inc (ix+8)
4075   9769 3A 09 7D    a01317 ld a,(joyval)
4076   976C E6 10              and 16
4077   976E CA 90 97           jp z,a01382
4078   9771 3E 01              ld a,1
4079   9773 21 21 7D           ld hl,varl
4080   9776 BE                 cp (hl)
4081   9777 C2 7D 97           jp nz,a01351
4082   977A C3 90 97           jp a01382
4083   977D CD 58 8A    a01351 call cangd
4084   9780 C2 86 97           jp nz,a01365
4085   9783 C3 90 97           jp a01382
4086   9786 3E 28       a01365 ld a,40
4087   9788 32 C5 7F           ld (sndtyp),a
4088   978B 3E 07              ld a,7
4089   978D CD 63 8B           call jump
4090   9790 06 05       a01382 ld b,DEADLY
4091   9792 CD FE 8A           call tded
4092   9795 B8                 cp b
4093   9796 C2 A5 97           jp nz,a01418
4094   9799 3A 24 7D           ld a,(varo)
4095   979C DD 77 08           ld (ix+8),a
4096   979F 3A 25 7D           ld a,(varp)
4097   97A2 DD 77 09           ld (ix+9),a
4098   97A5 C3 27 90    a01418 jp grav
4099   97A8             evnt01 equ $
4100   97A8 AF                 xor a
4101   97A9 21 16 7D           ld hl,vara
4102   97AC BE                 cp (hl)
4103   97AD C2 B4 97           jp nz,b00027
4104   97B0 AF                 xor a
4105   97B1 CD 31 8F           call animsp
4106   97B4 C9          b00027 ret
4107   97B5             evnt02 equ $
4108   97B5 AF                 xor a
4109   97B6 21 16 7D           ld hl,vara
4110   97B9 BE                 cp (hl)
4111   97BA C2 C1 97           jp nz,c00027
4112   97BD AF                 xor a
4113   97BE CD 31 8F           call animsp
4114   97C1 06 00       c00027 ld b,0
4115   97C3 CD 5F 8F           call sktyp
4116   97C6 D2 EC 9D           jp nc,c02813
4117   97C9 3A 09 7D           ld a,(joyval)
4118   97CC E6 40              and 64
4119   97CE CA EC 9D           jp z,c02813
4120   97D1 3E 09              ld a,9
4121   97D3 CD 48 7D           call minve
4122   97D6 CD 2D 7F           call silenc
4123   97D9 DD 7E 08           ld a,(ix+8)
4124   97DC 32 1A 7D           ld (vare),a
4125   97DF DD 7E 09           ld a,(ix+9)
4126   97E2 32 1B 7D           ld (varf),a
4127   97E5 AF                 xor a
4128   97E6 21 14 7D           ld hl,scno
4129   97E9 BE                 cp (hl)
4130   97EA C2 6A 98           jp nz,c00324
4131   97ED AF                 xor a
4132   97EE 21 34 7D           ld hl,varopt
4133   97F1 BE                 cp (hl)
4134   97F2 C2 6A 98           jp nz,c00324
4135   97F5 3E 08              ld a,8
4136   97F7 32 2F 7D           ld (charx),a
4137   97FA 3E 1C              ld a,28
4138   97FC 32 30 7D           ld (chary),a
4139   97FF 21 6C A9           ld hl,chgfx
4140   9802 22 CC 87           ld (grbase),hl
4141   9805 2A 2F 7D           ld hl,(charx)
4142   9808 22 3A 7D           ld (dispx),hl
4143   980B AF                 xor a
4144   980C CD FF 88           call pattr
4145   980F 2A 3A 7D           ld hl,(dispx)
4146   9812 22 2F 7D           ld (charx),hl
4147   9815 21 6C A9           ld hl,chgfx
4148   9818 22 CC 87           ld (grbase),hl
4149   981B 2A 2F 7D           ld hl,(charx)
4150   981E 22 3A 7D           ld (dispx),hl
4151   9821 AF                 xor a
4152   9822 CD FF 88           call pattr
4153   9825 2A 3A 7D           ld hl,(dispx)
4154   9828 22 2F 7D           ld (charx),hl
4155   982B 3E 09              ld a,9
4156   982D 32 2F 7D           ld (charx),a
4157   9830 3E 1C              ld a,28
4158   9832 32 30 7D           ld (chary),a
4159   9835 21 6C A9           ld hl,chgfx
4160   9838 22 CC 87           ld (grbase),hl
4161   983B 2A 2F 7D           ld hl,(charx)
4162   983E 22 3A 7D           ld (dispx),hl
4163   9841 AF                 xor a
4164   9842 CD FF 88           call pattr
4165   9845 2A 3A 7D           ld hl,(dispx)
4166   9848 22 2F 7D           ld (charx),hl
4167   984B 21 6C A9           ld hl,chgfx
4168   984E 22 CC 87           ld (grbase),hl
4169   9851 2A 2F 7D           ld hl,(charx)
4170   9854 22 3A 7D           ld (dispx),hl
4171   9857 AF                 xor a
4172   9858 CD FF 88           call pattr
4173   985B 2A 3A 7D           ld hl,(dispx)
4174   985E 22 2F 7D           ld (charx),hl
4175   9861 3E 50              ld a,80
4176   9863 32 C5 7F           ld (sndtyp),a
4177   9866 DD 36 05 FF        ld (ix+5),255
4178   986A 3E 0B       c00324 ld a,11
4179   986C 21 14 7D           ld hl,scno
4180   986F BE                 cp (hl)
4181   9870 C2 F1 98           jp nz,c00563
4182   9873 3E 05              ld a,5
4183   9875 21 34 7D           ld hl,varopt
4184   9878 BE                 cp (hl)
4185   9879 C2 F1 98           jp nz,c00563
4186   987C 3E 02              ld a,2
4187   987E 32 2F 7D           ld (charx),a
4188   9881 3E 14              ld a,20
4189   9883 32 30 7D           ld (chary),a
4190   9886 21 6C A9           ld hl,chgfx
4191   9889 22 CC 87           ld (grbase),hl
4192   988C 2A 2F 7D           ld hl,(charx)
4193   988F 22 3A 7D           ld (dispx),hl
4194   9892 AF                 xor a
4195   9893 CD FF 88           call pattr
4196   9896 2A 3A 7D           ld hl,(dispx)
4197   9899 22 2F 7D           ld (charx),hl
4198   989C 21 6C A9           ld hl,chgfx
4199   989F 22 CC 87           ld (grbase),hl
4200   98A2 2A 2F 7D           ld hl,(charx)
4201   98A5 22 3A 7D           ld (dispx),hl
4202   98A8 AF                 xor a
4203   98A9 CD FF 88           call pattr
4204   98AC 2A 3A 7D           ld hl,(dispx)
4205   98AF 22 2F 7D           ld (charx),hl
4206   98B2 3E 03              ld a,3
4207   98B4 32 2F 7D           ld (charx),a
4208   98B7 3E 14              ld a,20
4209   98B9 32 30 7D           ld (chary),a
4210   98BC 21 6C A9           ld hl,chgfx
4211   98BF 22 CC 87           ld (grbase),hl
4212   98C2 2A 2F 7D           ld hl,(charx)
4213   98C5 22 3A 7D           ld (dispx),hl
4214   98C8 AF                 xor a
4215   98C9 CD FF 88           call pattr
4216   98CC 2A 3A 7D           ld hl,(dispx)
4217   98CF 22 2F 7D           ld (charx),hl
4218   98D2 21 6C A9           ld hl,chgfx
4219   98D5 22 CC 87           ld (grbase),hl
4220   98D8 2A 2F 7D           ld hl,(charx)
4221   98DB 22 3A 7D           ld (dispx),hl
4222   98DE AF                 xor a
4223   98DF CD FF 88           call pattr
4224   98E2 2A 3A 7D           ld hl,(dispx)
4225   98E5 22 2F 7D           ld (charx),hl
4226   98E8 3E 3C              ld a,60
4227   98EA 32 C5 7F           ld (sndtyp),a
4228   98ED DD 36 05 FF        ld (ix+5),255
4229   98F1 3E 04       c00563 ld a,4
4230   98F3 21 14 7D           ld hl,scno
4231   98F6 BE                 cp (hl)
4232   98F7 C2 9B 99           jp nz,c00859
4233   98FA 3E 06              ld a,6
4234   98FC 21 34 7D           ld hl,varopt
4235   98FF BE                 cp (hl)
4236   9900 C2 9B 99           jp nz,c00859
4237   9903 3E 47              ld a,71
4238   9905 32 8D 5C           ld (23693),a
4239   9908 3E 02              ld a,2
4240   990A 32 2F 7D           ld (charx),a
4241   990D 3E 0B              ld a,11
4242   990F 32 30 7D           ld (chary),a
4243   9912 21 6C A9           ld hl,chgfx
4244   9915 22 CC 87           ld (grbase),hl
4245   9918 2A 2F 7D           ld hl,(charx)
4246   991B 22 3A 7D           ld (dispx),hl
4247   991E 3E 15              ld a,21
4248   9920 CD FF 88           call pattr
4249   9923 2A 3A 7D           ld hl,(dispx)
4250   9926 22 2F 7D           ld (charx),hl
4251   9929 21 6C A9           ld hl,chgfx
4252   992C 22 CC 87           ld (grbase),hl
4253   992F 2A 2F 7D           ld hl,(charx)
4254   9932 22 3A 7D           ld (dispx),hl
4255   9935 3E 16              ld a,22
4256   9937 CD FF 88           call pattr
4257   993A 2A 3A 7D           ld hl,(dispx)
4258   993D 22 2F 7D           ld (charx),hl
4259   9940 3E 03              ld a,3
4260   9942 32 2F 7D           ld (charx),a
4261   9945 3E 0B              ld a,11
4262   9947 32 30 7D           ld (chary),a
4263   994A 21 6C A9           ld hl,chgfx
4264   994D 22 CC 87           ld (grbase),hl
4265   9950 2A 2F 7D           ld hl,(charx)
4266   9953 22 3A 7D           ld (dispx),hl
4267   9956 3E 15              ld a,21
4268   9958 CD FF 88           call pattr
4269   995B 2A 3A 7D           ld hl,(dispx)
4270   995E 22 2F 7D           ld (charx),hl
4271   9961 21 6C A9           ld hl,chgfx
4272   9964 22 CC 87           ld (grbase),hl
4273   9967 2A 2F 7D           ld hl,(charx)
4274   996A 22 3A 7D           ld (dispx),hl
4275   996D 3E 16              ld a,22
4276   996F CD FF 88           call pattr
4277   9972 2A 3A 7D           ld hl,(dispx)
4278   9975 22 2F 7D           ld (charx),hl
4279   9978 3E 3C              ld a,60
4280   997A 32 C5 7F           ld (sndtyp),a
4281   997D DD 36 05 FF        ld (ix+5),255
4282   9981 3E 88              ld a,136
4283   9983 DD 77 08           ld (ix+8),a
4284   9986 3E 18              ld a,24
4285   9988 DD 77 09           ld (ix+9),a
4286   998B DD 7E 09           ld a,(ix+9)
4287   998E 67                 ld h,a
4288   998F DD 7E 08           ld a,(ix+8)
4289   9992 6F                 ld l,a
4290   9993 22 3A 7D           ld (dispx),hl
4291   9996 3E 06              ld a,6
4292   9998 CD 09 87           call drpob
4293   999B 3E 09       c00859 ld a,9
4294   999D 21 14 7D           ld hl,scno
4295   99A0 BE                 cp (hl)
4296   99A1 C2 3C 9A           jp nz,c01145
4297   99A4 3E 08              ld a,8
4298   99A6 21 34 7D           ld hl,varopt
4299   99A9 BE                 cp (hl)
4300   99AA C2 3C 9A           jp nz,c01145
4301   99AD 3E 04              ld a,4
4302   99AF 32 2F 7D           ld (charx),a
4303   99B2 3E 02              ld a,2
4304   99B4 32 30 7D           ld (chary),a
4305   99B7 21 6C A9           ld hl,chgfx
4306   99BA 22 CC 87           ld (grbase),hl
4307   99BD 2A 2F 7D           ld hl,(charx)
4308   99C0 22 3A 7D           ld (dispx),hl
4309   99C3 AF                 xor a
4310   99C4 CD FF 88           call pattr
4311   99C7 2A 3A 7D           ld hl,(dispx)
4312   99CA 22 2F 7D           ld (charx),hl
4313   99CD 21 6C A9           ld hl,chgfx
4314   99D0 22 CC 87           ld (grbase),hl
4315   99D3 2A 2F 7D           ld hl,(charx)
4316   99D6 22 3A 7D           ld (dispx),hl
4317   99D9 AF                 xor a
4318   99DA CD FF 88           call pattr
4319   99DD 2A 3A 7D           ld hl,(dispx)
4320   99E0 22 2F 7D           ld (charx),hl
4321   99E3 3E 05              ld a,5
4322   99E5 32 2F 7D           ld (charx),a
4323   99E8 3E 02              ld a,2
4324   99EA 32 30 7D           ld (chary),a
4325   99ED 21 6C A9           ld hl,chgfx
4326   99F0 22 CC 87           ld (grbase),hl
4327   99F3 2A 2F 7D           ld hl,(charx)
4328   99F6 22 3A 7D           ld (dispx),hl
4329   99F9 AF                 xor a
4330   99FA CD FF 88           call pattr
4331   99FD 2A 3A 7D           ld hl,(dispx)
4332   9A00 22 2F 7D           ld (charx),hl
4333   9A03 21 6C A9           ld hl,chgfx
4334   9A06 22 CC 87           ld (grbase),hl
4335   9A09 2A 2F 7D           ld hl,(charx)
4336   9A0C 22 3A 7D           ld (dispx),hl
4337   9A0F AF                 xor a
4338   9A10 CD FF 88           call pattr
4339   9A13 2A 3A 7D           ld hl,(dispx)
4340   9A16 22 2F 7D           ld (charx),hl
4341   9A19 3E 2D              ld a,45
4342   9A1B 32 C5 7F           ld (sndtyp),a
4343   9A1E DD 36 05 FF        ld (ix+5),255
4344   9A22 3E 88              ld a,136
4345   9A24 DD 77 08           ld (ix+8),a
4346   9A27 3E 18              ld a,24
4347   9A29 DD 77 09           ld (ix+9),a
4348   9A2C DD 7E 09           ld a,(ix+9)
4349   9A2F 67                 ld h,a
4350   9A30 DD 7E 08           ld a,(ix+8)
4351   9A33 6F                 ld l,a
4352   9A34 22 3A 7D           ld (dispx),hl
4353   9A37 3E 08              ld a,8
4354   9A39 CD 09 87           call drpob
4355   9A3C 3E 14       c01145 ld a,20
4356   9A3E 21 14 7D           ld hl,scno
4357   9A41 BE                 cp (hl)
4358   9A42 C2 B3 9A           jp nz,c01353
4359   9A45 3E 0F              ld a,15
4360   9A47 21 34 7D           ld hl,varopt
4361   9A4A BE                 cp (hl)
4362   9A4B C2 B3 9A           jp nz,c01353
4363   9A4E 3E 04              ld a,4
4364   9A50 32 2F 7D           ld (charx),a
4365   9A53 3E 08              ld a,8
4366   9A55 32 30 7D           ld (chary),a
4367   9A58 21 6C A9           ld hl,chgfx
4368   9A5B 22 CC 87           ld (grbase),hl
4369   9A5E 2A 2F 7D           ld hl,(charx)
4370   9A61 22 3A 7D           ld (dispx),hl
4371   9A64 3E 3C              ld a,60
4372   9A66 CD FF 88           call pattr
4373   9A69 2A 3A 7D           ld hl,(dispx)
4374   9A6C 22 2F 7D           ld (charx),hl
4375   9A6F 3E 05              ld a,5
4376   9A71 32 2F 7D           ld (charx),a
4377   9A74 3E 08              ld a,8
4378   9A76 32 30 7D           ld (chary),a
4379   9A79 21 6C A9           ld hl,chgfx
4380   9A7C 22 CC 87           ld (grbase),hl
4381   9A7F 2A 2F 7D           ld hl,(charx)
4382   9A82 22 3A 7D           ld (dispx),hl
4383   9A85 3E 3D              ld a,61
4384   9A87 CD FF 88           call pattr
4385   9A8A 2A 3A 7D           ld hl,(dispx)
4386   9A8D 22 2F 7D           ld (charx),hl
4387   9A90 3E 50              ld a,80
4388   9A92 32 C5 7F           ld (sndtyp),a
4389   9A95 DD 36 05 FF        ld (ix+5),255
4390   9A99 3E 08              ld a,8
4391   9A9B DD 77 08           ld (ix+8),a
4392   9A9E 3E D8              ld a,216
4393   9AA0 DD 77 09           ld (ix+9),a
4394   9AA3 DD 7E 09           ld a,(ix+9)
4395   9AA6 67                 ld h,a
4396   9AA7 DD 7E 08           ld a,(ix+8)
4397   9AAA 6F                 ld l,a
4398   9AAB 22 3A 7D           ld (dispx),hl
4399   9AAE 3E 0F              ld a,15
4400   9AB0 CD 09 87           call drpob
4401   9AB3 3E 0D       c01353 ld a,13
4402   9AB5 21 14 7D           ld hl,scno
4403   9AB8 BE                 cp (hl)
4404   9AB9 C2 1E 9B           jp nz,c01544
4405   9ABC 3E 07              ld a,7
4406   9ABE 21 34 7D           ld hl,varopt
4407   9AC1 BE                 cp (hl)
4408   9AC2 C2 1E 9B           jp nz,c01544
4409   9AC5 3E 11              ld a,17
4410   9AC7 32 2F 7D           ld (charx),a
4411   9ACA 3E 0E              ld a,14
4412   9ACC 32 30 7D           ld (chary),a
4413   9ACF 21 6C A9           ld hl,chgfx
4414   9AD2 22 CC 87           ld (grbase),hl
4415   9AD5 2A 2F 7D           ld hl,(charx)
4416   9AD8 22 3A 7D           ld (dispx),hl
4417   9ADB AF                 xor a
4418   9ADC CD FF 88           call pattr
4419   9ADF 2A 3A 7D           ld hl,(dispx)
4420   9AE2 22 2F 7D           ld (charx),hl
4421   9AE5 21 6C A9           ld hl,chgfx
4422   9AE8 22 CC 87           ld (grbase),hl
4423   9AEB 2A 2F 7D           ld hl,(charx)
4424   9AEE 22 3A 7D           ld (dispx),hl
4425   9AF1 AF                 xor a
4426   9AF2 CD FF 88           call pattr
4427   9AF5 2A 3A 7D           ld hl,(dispx)
4428   9AF8 22 2F 7D           ld (charx),hl
4429   9AFB 3E 2D              ld a,45
4430   9AFD 32 C5 7F           ld (sndtyp),a
4431   9B00 DD 36 05 FF        ld (ix+5),255
4432   9B04 3E 30              ld a,48
4433   9B06 DD 77 08           ld (ix+8),a
4434   9B09 3E D8              ld a,216
4435   9B0B DD 77 09           ld (ix+9),a
4436   9B0E DD 7E 09           ld a,(ix+9)
4437   9B11 67                 ld h,a
4438   9B12 DD 7E 08           ld a,(ix+8)
4439   9B15 6F                 ld l,a
4440   9B16 22 3A 7D           ld (dispx),hl
4441   9B19 3E 07              ld a,7
4442   9B1B CD 09 87           call drpob
4443   9B1E 3E 0E       c01544 ld a,14
4444   9B20 21 14 7D           ld hl,scno
4445   9B23 BE                 cp (hl)
4446   9B24 C2 74 9B           jp nz,c01697
4447   9B27 3E 0B              ld a,11
4448   9B29 21 34 7D           ld hl,varopt
4449   9B2C BE                 cp (hl)
4450   9B2D C2 74 9B           jp nz,c01697
4451   9B30 3E 0F              ld a,15
4452   9B32 32 2F 7D           ld (charx),a
4453   9B35 3E 07              ld a,7
4454   9B37 32 30 7D           ld (chary),a
4455   9B3A 21 6C A9           ld hl,chgfx
4456   9B3D 22 CC 87           ld (grbase),hl
4457   9B40 2A 2F 7D           ld hl,(charx)
4458   9B43 22 3A 7D           ld (dispx),hl
4459   9B46 3E 38              ld a,56
4460   9B48 CD FF 88           call pattr
4461   9B4B 2A 3A 7D           ld hl,(dispx)
4462   9B4E 22 2F 7D           ld (charx),hl
4463   9B51 3E 50              ld a,80
4464   9B53 32 C5 7F           ld (sndtyp),a
4465   9B56 DD 36 05 FF        ld (ix+5),255
4466   9B5A 3E 88              ld a,136
4467   9B5C DD 77 08           ld (ix+8),a
4468   9B5F 3E 18              ld a,24
4469   9B61 DD 77 09           ld (ix+9),a
4470   9B64 DD 7E 09           ld a,(ix+9)
4471   9B67 67                 ld h,a
4472   9B68 DD 7E 08           ld a,(ix+8)
4473   9B6B 6F                 ld l,a
4474   9B6C 22 3A 7D           ld (dispx),hl
4475   9B6F 3E 0B              ld a,11
4476   9B71 CD 09 87           call drpob
4477   9B74 3E 05       c01697 ld a,5
4478   9B76 21 14 7D           ld hl,scno
4479   9B79 BE                 cp (hl)
4480   9B7A C2 EE 9B           jp nz,c01912
4481   9B7D 3E 0A              ld a,10
4482   9B7F 21 34 7D           ld hl,varopt
4483   9B82 BE                 cp (hl)
4484   9B83 C2 EE 9B           jp nz,c01912
4485   9B86 DD 7E 08           ld a,(ix+8)
4486   9B89 32 1A 7D           ld (vare),a
4487   9B8C DD 7E 09           ld a,(ix+9)
4488   9B8F 32 1B 7D           ld (varf),a
4489   9B92 3E 48              ld a,72
4490   9B94 DD 77 08           ld (ix+8),a
4491   9B97 3E B0              ld a,176
4492   9B99 DD 77 09           ld (ix+9),a
4493   9B9C DD 7E 09           ld a,(ix+9)
4494   9B9F 67                 ld h,a
4495   9BA0 DD 7E 08           ld a,(ix+8)
4496   9BA3 6F                 ld l,a
4497   9BA4 22 3A 7D           ld (dispx),hl
4498   9BA7 3E 0A              ld a,10
4499   9BA9 CD 09 87           call drpob
4500   9BAC 3E 3C              ld a,60
4501   9BAE 32 C5 7F           ld (sndtyp),a
4502   9BB1 DD 36 05 FF        ld (ix+5),255
4503   9BB5 3A 1B 7D           ld a,(varf)
4504   9BB8 DD 77 09           ld (ix+9),a
4505   9BBB 3A 1A 7D           ld a,(vare)
4506   9BBE DD 77 08           ld (ix+8),a
4507   9BC1 DD E5              push ix
4508   9BC3 06 4B              ld b,75
4509   9BC5 CD 1A 7F           call delay
4510   9BC8 DD E1              pop ix
4511   9BCA 0E 18              ld c,24
4512   9BCC DD 7E 09           ld a,(ix+9)
4513   9BCF 81                 add a,c
4514   9BD0 DD 77 09           ld (ix+9),a
4515   9BD3 DD 7E 09           ld a,(ix+9)
4516   9BD6 67                 ld h,a
4517   9BD7 DD 7E 08           ld a,(ix+8)
4518   9BDA 6F                 ld l,a
4519   9BDB 22 3A 7D           ld (dispx),hl
4520   9BDE 3E 0E              ld a,14
4521   9BE0 CD 09 87           call drpob
4522   9BE3 3A 1B 7D           ld a,(varf)
4523   9BE6 DD 77 09           ld (ix+9),a
4524   9BE9 3E 46              ld a,70
4525   9BEB 32 C5 7F           ld (sndtyp),a
4526   9BEE 3E 0E       c01912 ld a,14
4527   9BF0 21 14 7D           ld hl,scno
4528   9BF3 BE                 cp (hl)
4529   9BF4 C2 72 9C           jp nz,c02144
4530   9BF7 3E 0E              ld a,14
4531   9BF9 21 34 7D           ld hl,varopt
4532   9BFC BE                 cp (hl)
4533   9BFD C2 72 9C           jp nz,c02144
4534   9C00 3E 09              ld a,9
4535   9C02 32 2F 7D           ld (charx),a
4536   9C05 3E 0B              ld a,11
4537   9C07 32 30 7D           ld (chary),a
4538   9C0A 21 6C A9           ld hl,chgfx
4539   9C0D 22 CC 87           ld (grbase),hl
4540   9C10 2A 2F 7D           ld hl,(charx)
4541   9C13 22 3A 7D           ld (dispx),hl
4542   9C16 3E 37              ld a,55
4543   9C18 CD FF 88           call pattr
4544   9C1B 2A 3A 7D           ld hl,(dispx)
4545   9C1E 22 2F 7D           ld (charx),hl
4546   9C21 21 6C A9           ld hl,chgfx
4547   9C24 22 CC 87           ld (grbase),hl
4548   9C27 2A 2F 7D           ld hl,(charx)
4549   9C2A 22 3A 7D           ld (dispx),hl
4550   9C2D 3E 48              ld a,72
4551   9C2F CD FF 88           call pattr
4552   9C32 2A 3A 7D           ld hl,(dispx)
4553   9C35 22 2F 7D           ld (charx),hl
4554   9C38 21 6C A9           ld hl,chgfx
4555   9C3B 22 CC 87           ld (grbase),hl
4556   9C3E 2A 2F 7D           ld hl,(charx)
4557   9C41 22 3A 7D           ld (dispx),hl
4558   9C44 3E 49              ld a,73
4559   9C46 CD FF 88           call pattr
4560   9C49 2A 3A 7D           ld hl,(dispx)
4561   9C4C 22 2F 7D           ld (charx),hl
4562   9C4F 3E 3C              ld a,60
4563   9C51 32 C5 7F           ld (sndtyp),a
4564   9C54 DD 36 05 FF        ld (ix+5),255
4565   9C58 3E 88              ld a,136
4566   9C5A DD 77 08           ld (ix+8),a
4567   9C5D 3E 18              ld a,24
4568   9C5F DD 77 09           ld (ix+9),a
4569   9C62 DD 7E 09           ld a,(ix+9)
4570   9C65 67                 ld h,a
4571   9C66 DD 7E 08           ld a,(ix+8)
4572   9C69 6F                 ld l,a
4573   9C6A 22 3A 7D           ld (dispx),hl
4574   9C6D 3E 0E              ld a,14
4575   9C6F CD 09 87           call drpob
4576   9C72 3E 10       c02144 ld a,16
4577   9C74 21 14 7D           ld hl,scno
4578   9C77 BE                 cp (hl)
4579   9C78 C2 CF 9C           jp nz,c02311
4580   9C7B 3E 09              ld a,9
4581   9C7D 21 34 7D           ld hl,varopt
4582   9C80 BE                 cp (hl)
4583   9C81 C2 CF 9C           jp nz,c02311
4584   9C84 3E 48              ld a,72
4585   9C86 DD 77 08           ld (ix+8),a
4586   9C89 3E 78              ld a,120
4587   9C8B DD 77 09           ld (ix+9),a
4588   9C8E DD 7E 09           ld a,(ix+9)
4589   9C91 67                 ld h,a
4590   9C92 DD 7E 08           ld a,(ix+8)
4591   9C95 6F                 ld l,a
4592   9C96 22 3A 7D           ld (dispx),hl
4593   9C99 3E 09              ld a,9
4594   9C9B CD 09 87           call drpob
4595   9C9E 3E 3C              ld a,60
4596   9CA0 32 C5 7F           ld (sndtyp),a
4597   9CA3 DD 36 05 FF        ld (ix+5),255
4598   9CA7 DD E5              push ix
4599   9CA9 06 32              ld b,50
4600   9CAB CD 1A 7F           call delay
4601   9CAE DD E1              pop ix
4602   9CB0 3E 50              ld a,80
4603   9CB2 32 C5 7F           ld (sndtyp),a
4604   9CB5 3E 80              ld a,128
4605   9CB7 DD 77 08           ld (ix+8),a
4606   9CBA 3E A8              ld a,168
4607   9CBC DD 77 09           ld (ix+9),a
4608   9CBF DD 7E 09           ld a,(ix+9)
4609   9CC2 67                 ld h,a
4610   9CC3 DD 7E 08           ld a,(ix+8)
4611   9CC6 6F                 ld l,a
4612   9CC7 22 3A 7D           ld (dispx),hl
4613   9CCA 3E 02              ld a,2
4614   9CCC CD 09 87           call drpob
4615   9CCF 3E 0F       c02311 ld a,15
4616   9CD1 21 14 7D           ld hl,scno
4617   9CD4 BE                 cp (hl)
4618   9CD5 C2 3C 9D           jp nz,c02503
4619   9CD8 3E 11              ld a,17
4620   9CDA 21 34 7D           ld hl,varopt
4621   9CDD BE                 cp (hl)
4622   9CDE C2 3C 9D           jp nz,c02503
4623   9CE1 3E 0F              ld a,15
4624   9CE3 32 2F 7D           ld (charx),a
4625   9CE6 3E 14              ld a,20
4626   9CE8 32 30 7D           ld (chary),a
4627   9CEB 21 6C A9           ld hl,chgfx
4628   9CEE 22 CC 87           ld (grbase),hl
4629   9CF1 2A 2F 7D           ld hl,(charx)
4630   9CF4 22 3A 7D           ld (dispx),hl
4631   9CF7 3E 34              ld a,52
4632   9CF9 CD FF 88           call pattr
4633   9CFC 2A 3A 7D           ld hl,(dispx)
4634   9CFF 22 2F 7D           ld (charx),hl
4635   9D02 21 6C A9           ld hl,chgfx
4636   9D05 22 CC 87           ld (grbase),hl
4637   9D08 2A 2F 7D           ld hl,(charx)
4638   9D0B 22 3A 7D           ld (dispx),hl
4639   9D0E 3E 34              ld a,52
4640   9D10 CD FF 88           call pattr
4641   9D13 2A 3A 7D           ld hl,(dispx)
4642   9D16 22 2F 7D           ld (charx),hl
4643   9D19 3E 3C              ld a,60
4644   9D1B 32 C5 7F           ld (sndtyp),a
4645   9D1E DD 36 05 FF        ld (ix+5),255
4646   9D22 3E 88              ld a,136
4647   9D24 DD 77 08           ld (ix+8),a
4648   9D27 3E 18              ld a,24
4649   9D29 DD 77 09           ld (ix+9),a
4650   9D2C DD 7E 09           ld a,(ix+9)
4651   9D2F 67                 ld h,a
4652   9D30 DD 7E 08           ld a,(ix+8)
4653   9D33 6F                 ld l,a
4654   9D34 22 3A 7D           ld (dispx),hl
4655   9D37 3E 11              ld a,17
4656   9D39 CD 09 87           call drpob
4657   9D3C 3E 17       c02503 ld a,23
4658   9D3E 21 14 7D           ld hl,scno
4659   9D41 BE                 cp (hl)
4660   9D42 C2 A5 9D           jp nz,c02689
4661   9D45 3E 12              ld a,18
4662   9D47 21 34 7D           ld hl,varopt
4663   9D4A BE                 cp (hl)
4664   9D4B C2 A5 9D           jp nz,c02689
4665   9D4E 3E 05              ld a,5
4666   9D50 32 2F 7D           ld (charx),a
4667   9D53 3E 18              ld a,24
4668   9D55 32 30 7D           ld (chary),a
4669   9D58 21 6C A9           ld hl,chgfx
4670   9D5B 22 CC 87           ld (grbase),hl
4671   9D5E 2A 2F 7D           ld hl,(charx)
4672   9D61 22 3A 7D           ld (dispx),hl
4673   9D64 AF                 xor a
4674   9D65 CD FF 88           call pattr
4675   9D68 2A 3A 7D           ld hl,(dispx)
4676   9D6B 22 2F 7D           ld (charx),hl
4677   9D6E 3E 2D              ld a,45
4678   9D70 32 C5 7F           ld (sndtyp),a
4679   9D73 DD E5              push ix
4680   9D75 06 32              ld b,50
4681   9D77 CD 1A 7F           call delay
4682   9D7A DD E1              pop ix
4683   9D7C 3E 06              ld a,6
4684   9D7E 32 2F 7D           ld (charx),a
4685   9D81 3E 18              ld a,24
4686   9D83 32 30 7D           ld (chary),a
4687   9D86 21 6C A9           ld hl,chgfx
4688   9D89 22 CC 87           ld (grbase),hl
4689   9D8C 2A 2F 7D           ld hl,(charx)
4690   9D8F 22 3A 7D           ld (dispx),hl
4691   9D92 AF                 xor a
4692   9D93 CD FF 88           call pattr
4693   9D96 2A 3A 7D           ld hl,(dispx)
4694   9D99 22 2F 7D           ld (charx),hl
4695   9D9C 3E 2D              ld a,45
4696   9D9E 32 C5 7F           ld (sndtyp),a
4697   9DA1 DD 36 05 FF        ld (ix+5),255
4698   9DA5 3E 0A       c02689 ld a,10
4699   9DA7 21 14 7D           ld hl,scno
4700   9DAA BE                 cp (hl)
4701   9DAB C2 E0 9D           jp nz,c02794
4702   9DAE 3E 10              ld a,16
4703   9DB0 21 34 7D           ld hl,varopt
4704   9DB3 BE                 cp (hl)
4705   9DB4 C2 E0 9D           jp nz,c02794
4706   9DB7 3E 04              ld a,4
4707   9DB9 32 2F 7D           ld (charx),a
4708   9DBC 3E 11              ld a,17
4709   9DBE 32 30 7D           ld (chary),a
4710   9DC1 21 6C A9           ld hl,chgfx
4711   9DC4 22 CC 87           ld (grbase),hl
4712   9DC7 2A 2F 7D           ld hl,(charx)
4713   9DCA 22 3A 7D           ld (dispx),hl
4714   9DCD AF                 xor a
4715   9DCE CD FF 88           call pattr
4716   9DD1 2A 3A 7D           ld hl,(dispx)
4717   9DD4 22 2F 7D           ld (charx),hl
4718   9DD7 3E 2D              ld a,45
4719   9DD9 32 C5 7F           ld (sndtyp),a
4720   9DDC DD 36 05 FF        ld (ix+5),255
4721   9DE0 3A 1A 7D    c02794 ld a,(vare)
4722   9DE3 DD 77 08           ld (ix+8),a
4723   9DE6 3A 1B 7D           ld a,(varf)
4724   9DE9 DD 77 09           ld (ix+9),a
4725   9DEC C9          c02813 ret
4726   9DED             evnt03 equ $
4727   9DED AF                 xor a
4728   9DEE 21 18 7D           ld hl,varc
4729   9DF1 BE                 cp (hl)
4730   9DF2 C2 5F 9E           jp nz,d00201
4731   9DF5 AF                 xor a
4732   9DF6 DD BE 0B           cp (ix+11)
4733   9DF9 C2 30 9E           jp nz,d00119
4734   9DFC CD 7B 8A           call cangl
4735   9DFF C2 28 9E           jp nz,d00106
4736   9E02 DD 35 09           dec (ix+9)
4737   9E05 DD 35 09           dec (ix+9)
4738   9E08 0E 10              ld c,16
4739   9E0A DD 7E 09           ld a,(ix+9)
4740   9E0D 91                 sub c
4741   9E0E DD 77 09           ld (ix+9),a
4742   9E11 CD 58 8A           call cangd
4743   9E14 C2 1C 9E           jp nz,d00085
4744   9E17 3E 01              ld a,1
4745   9E19 DD 77 0B           ld (ix+11),a
4746   9E1C 0E 10       d00085 ld c,16
4747   9E1E DD 7E 09           ld a,(ix+9)
4748   9E21 81                 add a,c
4749   9E22 DD 77 09           ld (ix+9),a
4750   9E25 C3 2D 9E           jp d00115
4751   9E28 3E 01       d00106 ld a,1
4752   9E2A DD 77 0B           ld (ix+11),a
4753   9E2D C3 5F 9E    d00115 jp d00201
4754   9E30 CD 86 8A    d00119 call cangr
4755   9E33 C2 5B 9E           jp nz,d00193
4756   9E36 DD 34 09           inc (ix+9)
4757   9E39 DD 34 09           inc (ix+9)
4758   9E3C 0E 10              ld c,16
4759   9E3E DD 7E 09           ld a,(ix+9)
4760   9E41 81                 add a,c
4761   9E42 DD 77 09           ld (ix+9),a
4762   9E45 CD 58 8A           call cangd
4763   9E48 C2 4F 9E           jp nz,d00172
4764   9E4B AF                 xor a
4765   9E4C DD 77 0B           ld (ix+11),a
4766   9E4F 0E 10       d00172 ld c,16
4767   9E51 DD 7E 09           ld a,(ix+9)
4768   9E54 91                 sub c
4769   9E55 DD 77 09           ld (ix+9),a
4770   9E58 C3 5F 9E           jp d00201
4771   9E5B AF          d00193 xor a
4772   9E5C DD 77 0B           ld (ix+11),a
4773   9E5F AF          d00201 xor a
4774   9E60 CD 31 8F           call animsp
4775   9E63 06 00              ld b,0
4776   9E65 CD 5F 8F           call sktyp
4777   9E68 D2 6B 9E           jp nc,d00222
4778   9E6B C9          d00222 ret
4779   9E6C             evnt04 equ $
4780   9E6C 3E 47              ld a,71
4781   9E6E E6 07              and 7
4782   9E70 4F                 ld c,a
4783   9E71 CD 54 80           call cspr
4784   9E74 AF                 xor a
4785   9E75 DD BE 0B           cp (ix+11)
4786   9E78 C2 A3 9E           jp nz,e00099
4787   9E7B CD 58 8A           call cangd
4788   9E7E C2 96 9E           jp nz,e00078
4789   9E81 DD 34 08           inc (ix+8)
4790   9E84 DD 34 08           inc (ix+8)
4791   9E87 AF                 xor a
4792   9E88 21 16 7D           ld hl,vara
4793   9E8B BE                 cp (hl)
4794   9E8C C2 93 9E           jp nz,e00073
4795   9E8F AF                 xor a
4796   9E90 CD 31 8F           call animsp
4797   9E93 C3 A0 9E    e00073 jp e00095
4798   9E96 3E 01       e00078 ld a,1
4799   9E98 DD 77 0B           ld (ix+11),a
4800   9E9B 3E 23              ld a,35
4801   9E9D 32 C5 7F           ld (sndtyp),a
4802   9EA0 C3 C7 9E    e00095 jp e00164
4803   9EA3 CD 35 8A    e00099 call cangu
4804   9EA6 C2 BE 9E           jp nz,e00147
4805   9EA9 DD 35 08           dec (ix+8)
4806   9EAC DD 35 08           dec (ix+8)
4807   9EAF AF                 xor a
4808   9EB0 21 16 7D           ld hl,vara
4809   9EB3 BE                 cp (hl)
4810   9EB4 C2 BB 9E           jp nz,e00142
4811   9EB7 AF                 xor a
4812   9EB8 CD 31 8F           call animsp
4813   9EBB C3 C7 9E    e00142 jp e00164
4814   9EBE AF          e00147 xor a
4815   9EBF DD 77 0B           ld (ix+11),a
4816   9EC2 3E 23              ld a,35
4817   9EC4 32 C5 7F           ld (sndtyp),a
4818   9EC7 06 00       e00164 ld b,0
4819   9EC9 CD 5F 8F           call sktyp
4820   9ECC D2 CF 9E           jp nc,e00177
4821   9ECF 3E 03       e00177 ld a,3
4822   9ED1 DD BE 06           cp (ix+6)
4823   9ED4 C2 DF 9E           jp nz,e00204
4824   9ED7 3E 46              ld a,70
4825   9ED9 E6 07              and 7
4826   9EDB 4F                 ld c,a
4827   9EDC CD 54 80           call cspr
4828   9EDF 3E 06       e00204 ld a,6
4829   9EE1 DD BE 06           cp (ix+6)
4830   9EE4 C2 EF 9E           jp nz,e00232
4831   9EE7 3E 4D              ld a,77
4832   9EE9 E6 07              and 7
4833   9EEB 4F                 ld c,a
4834   9EEC CD 54 80           call cspr
4835   9EEF C9          e00232 ret
4836   9EF0             evnt05 equ $
4837   9EF0 AF                 xor a
4838   9EF1 21 16 7D           ld hl,vara
4839   9EF4 BE                 cp (hl)
4840   9EF5 C2 FC 9E           jp nz,f00027
4841   9EF8 AF                 xor a
4842   9EF9 CD 31 8F           call animsp
4843   9EFC 06 00       f00027 ld b,0
4844   9EFE CD 5F 8F           call sktyp
4845   9F01 D2 5D A0           jp nc,f00647
4846   9F04 3A 09 7D           ld a,(joyval)
4847   9F07 E6 40              and 64
4848   9F09 CA 5D A0           jp z,f00647
4849   9F0C 3E 09              ld a,9
4850   9F0E CD 48 7D           call minve
4851   9F11 CD 2D 7F           call silenc
4852   9F14 DD 7E 08           ld a,(ix+8)
4853   9F17 32 1A 7D           ld (vare),a
4854   9F1A DD 7E 09           ld a,(ix+9)
4855   9F1D 32 1B 7D           ld (varf),a
4856   9F20 3E 19              ld a,25
4857   9F22 21 14 7D           ld hl,scno
4858   9F25 BE                 cp (hl)
4859   9F26 C2 A7 9F           jp nz,f00325
4860   9F29 3E 04              ld a,4
4861   9F2B 21 34 7D           ld hl,varopt
4862   9F2E BE                 cp (hl)
4863   9F2F C2 A7 9F           jp nz,f00325
4864   9F32 3E 09              ld a,9
4865   9F34 32 2F 7D           ld (charx),a
4866   9F37 3E 0E              ld a,14
4867   9F39 32 30 7D           ld (chary),a
4868   9F3C 21 6C A9           ld hl,chgfx
4869   9F3F 22 CC 87           ld (grbase),hl
4870   9F42 2A 2F 7D           ld hl,(charx)
4871   9F45 22 3A 7D           ld (dispx),hl
4872   9F48 AF                 xor a
4873   9F49 CD FF 88           call pattr
4874   9F4C 2A 3A 7D           ld hl,(dispx)
4875   9F4F 22 2F 7D           ld (charx),hl
4876   9F52 21 6C A9           ld hl,chgfx
4877   9F55 22 CC 87           ld (grbase),hl
4878   9F58 2A 2F 7D           ld hl,(charx)
4879   9F5B 22 3A 7D           ld (dispx),hl
4880   9F5E AF                 xor a
4881   9F5F CD FF 88           call pattr
4882   9F62 2A 3A 7D           ld hl,(dispx)
4883   9F65 22 2F 7D           ld (charx),hl
4884   9F68 3E 0A              ld a,10
4885   9F6A 32 2F 7D           ld (charx),a
4886   9F6D 3E 0E              ld a,14
4887   9F6F 32 30 7D           ld (chary),a
4888   9F72 21 6C A9           ld hl,chgfx
4889   9F75 22 CC 87           ld (grbase),hl
4890   9F78 2A 2F 7D           ld hl,(charx)
4891   9F7B 22 3A 7D           ld (dispx),hl
4892   9F7E AF                 xor a
4893   9F7F CD FF 88           call pattr
4894   9F82 2A 3A 7D           ld hl,(dispx)
4895   9F85 22 2F 7D           ld (charx),hl
4896   9F88 21 6C A9           ld hl,chgfx
4897   9F8B 22 CC 87           ld (grbase),hl
4898   9F8E 2A 2F 7D           ld hl,(charx)
4899   9F91 22 3A 7D           ld (dispx),hl
4900   9F94 AF                 xor a
4901   9F95 CD FF 88           call pattr
4902   9F98 2A 3A 7D           ld hl,(dispx)
4903   9F9B 22 2F 7D           ld (charx),hl
4904   9F9E 3E 32              ld a,50
4905   9FA0 32 C5 7F           ld (sndtyp),a
4906   9FA3 DD 36 05 FF        ld (ix+5),255
4907   9FA7 3E 01       f00325 ld a,1
4908   9FA9 21 14 7D           ld hl,scno
4909   9FAC BE                 cp (hl)
4910   9FAD C2 2E A0           jp nz,f00564
4911   9FB0 3E 04              ld a,4
4912   9FB2 21 34 7D           ld hl,varopt
4913   9FB5 BE                 cp (hl)
4914   9FB6 C2 2E A0           jp nz,f00564
4915   9FB9 3E 0F              ld a,15
4916   9FBB 32 2F 7D           ld (charx),a
4917   9FBE 3E 16              ld a,22
4918   9FC0 32 30 7D           ld (chary),a
4919   9FC3 21 6C A9           ld hl,chgfx
4920   9FC6 22 CC 87           ld (grbase),hl
4921   9FC9 2A 2F 7D           ld hl,(charx)
4922   9FCC 22 3A 7D           ld (dispx),hl
4923   9FCF AF                 xor a
4924   9FD0 CD FF 88           call pattr
4925   9FD3 2A 3A 7D           ld hl,(dispx)
4926   9FD6 22 2F 7D           ld (charx),hl
4927   9FD9 21 6C A9           ld hl,chgfx
4928   9FDC 22 CC 87           ld (grbase),hl
4929   9FDF 2A 2F 7D           ld hl,(charx)
4930   9FE2 22 3A 7D           ld (dispx),hl
4931   9FE5 AF                 xor a
4932   9FE6 CD FF 88           call pattr
4933   9FE9 2A 3A 7D           ld hl,(dispx)
4934   9FEC 22 2F 7D           ld (charx),hl
4935   9FEF 3E 10              ld a,16
4936   9FF1 32 2F 7D           ld (charx),a
4937   9FF4 3E 16              ld a,22
4938   9FF6 32 30 7D           ld (chary),a
4939   9FF9 21 6C A9           ld hl,chgfx
4940   9FFC 22 CC 87           ld (grbase),hl
4941   9FFF 2A 2F 7D           ld hl,(charx)
4942   A002 22 3A 7D           ld (dispx),hl
4943   A005 AF                 xor a
4944   A006 CD FF 88           call pattr
4945   A009 2A 3A 7D           ld hl,(dispx)
4946   A00C 22 2F 7D           ld (charx),hl
4947   A00F 21 6C A9           ld hl,chgfx
4948   A012 22 CC 87           ld (grbase),hl
4949   A015 2A 2F 7D           ld hl,(charx)
4950   A018 22 3A 7D           ld (dispx),hl
4951   A01B AF                 xor a
4952   A01C CD FF 88           call pattr
4953   A01F 2A 3A 7D           ld hl,(dispx)
4954   A022 22 2F 7D           ld (charx),hl
4955   A025 3E 32              ld a,50
4956   A027 32 C5 7F           ld (sndtyp),a
4957   A02A DD 36 05 FF        ld (ix+5),255
4958   A02E 3E 05       f00564 ld a,5
4959   A030 21 14 7D           ld hl,scno
4960   A033 BE                 cp (hl)
4961   A034 C2 5D A0           jp nz,f00647
4962   A037 3E 03              ld a,3
4963   A039 21 20 7D           ld hl,vark
4964   A03C BE                 cp (hl)
4965   A03D C2 51 A0           jp nz,f00628
4966   A040 3E 13              ld a,19
4967   A042 21 34 7D           ld hl,varopt
4968   A045 BE                 cp (hl)
4969   A046 C2 51 A0           jp nz,f00628
4970   A049 3E 1B              ld a,27
4971   A04B 32 14 7D           ld (scno),a
4972   A04E CD 13 90           call nwscr
4973   A051 3A 1A 7D    f00628 ld a,(vare)
4974   A054 DD 77 08           ld (ix+8),a
4975   A057 3A 1B 7D           ld a,(varf)
4976   A05A DD 77 09           ld (ix+9),a
4977   A05D C9          f00647 ret
4978   A05E             evnt06 equ $
4979   A05E AF                 xor a
4980   A05F DD BE 0B           cp (ix+11)
4981   A062 C2 8E A0           jp nz,g00085
4982   A065 CD 7B 8A           call cangl
4983   A068 C2 86 A0           jp nz,g00072
4984   A06B DD 35 09           dec (ix+9)
4985   A06E DD 35 09           dec (ix+9)
4986   A071 0E 10              ld c,16
4987   A073 DD 7E 09           ld a,(ix+9)
4988   A076 91                 sub c
4989   A077 DD 77 09           ld (ix+9),a
4990   A07A 0E 10              ld c,16
4991   A07C DD 7E 09           ld a,(ix+9)
4992   A07F 81                 add a,c
4993   A080 DD 77 09           ld (ix+9),a
4994   A083 C3 8B A0           jp g00080
4995   A086 3E 01       g00072 ld a,1
4996   A088 DD 77 0B           ld (ix+11),a
4997   A08B C3 B3 A0    g00080 jp g00149
4998   A08E CD 86 8A    g00085 call cangr
4999   A091 C2 AF A0           jp nz,g00141
5000   A094 DD 34 09           inc (ix+9)
5001   A097 DD 34 09           inc (ix+9)
5002   A09A 0E 10              ld c,16
5003   A09C DD 7E 09           ld a,(ix+9)
5004   A09F 81                 add a,c
5005   A0A0 DD 77 09           ld (ix+9),a
5006   A0A3 0E 10              ld c,16
5007   A0A5 DD 7E 09           ld a,(ix+9)
5008   A0A8 91                 sub c
5009   A0A9 DD 77 09           ld (ix+9),a
5010   A0AC C3 B3 A0           jp g00149
5011   A0AF AF          g00141 xor a
5012   A0B0 DD 77 0B           ld (ix+11),a
5013   A0B3 3E 01       g00149 ld a,1
5014   A0B5 DD BE 0B           cp (ix+11)
5015   A0B8 C2 D4 A0           jp nz,g00208
5016   A0BB AF                 xor a
5017   A0BC 21 16 7D           ld hl,vara
5018   A0BF BE                 cp (hl)
5019   A0C0 C2 D4 A0           jp nz,g00208
5020   A0C3 AF                 xor a
5021   A0C4 CD 31 8F           call animsp
5022   A0C7 3E 03              ld a,3
5023   A0C9 DD BE 07           cp (ix+7)
5024   A0CC C2 D4 A0           jp nz,g00208
5025   A0CF 3E 23              ld a,35
5026   A0D1 32 C5 7F           ld (sndtyp),a
5027   A0D4 AF          g00208 xor a
5028   A0D5 DD BE 0B           cp (ix+11)
5029   A0D8 C2 F4 A0           jp nz,g00267
5030   A0DB AF                 xor a
5031   A0DC 21 16 7D           ld hl,vara
5032   A0DF BE                 cp (hl)
5033   A0E0 C2 F4 A0           jp nz,g00267
5034   A0E3 AF                 xor a
5035   A0E4 CD 49 8F           call animbk
5036   A0E7 3E 03              ld a,3
5037   A0E9 DD BE 07           cp (ix+7)
5038   A0EC C2 F4 A0           jp nz,g00267
5039   A0EF 3E 23              ld a,35
5040   A0F1 32 C5 7F           ld (sndtyp),a
5041   A0F4 06 00       g00267 ld b,0
5042   A0F6 CD 5F 8F           call sktyp
5043   A0F9 D2 FC A0           jp nc,g00280
5044   A0FC 3E 08       g00280 ld a,8
5045   A0FE DD BE 06           cp (ix+6)
5046   A101 C2 0C A1           jp nz,g00308
5047   A104 3E 06              ld a,6
5048   A106 E6 07              and 7
5049   A108 4F                 ld c,a
5050   A109 CD 54 80           call cspr
5051   A10C C9          g00308 ret
5052   A10D             evnt07 equ $
5053   A10D C9                 ret
5054   A10E             evnt08 equ $
5055   A10E C9                 ret
5056   A10F             evnt09 equ $
5057   A10F 3E 04              ld a,4
5058   A111 DD BE 05           cp (ix+5)
5059   A114 C2 1C A1           jp nz,j00024
5060   A117 3E 01              ld a,1
5061   A119 DD 77 0B           ld (ix+11),a
5062   A11C AF          j00024 xor a
5063   A11D DD BE 05           cp (ix+5)
5064   A120 C2 36 A1           jp nz,j00068
5065   A123 3A 24 7D           ld a,(varo)
5066   A126 DD 77 08           ld (ix+8),a
5067   A129 3A 25 7D           ld a,(varp)
5068   A12C DD 77 09           ld (ix+9),a
5069   A12F DD 7E 08           ld a,(ix+8)
5070   A132 3C                 inc a
5071   A133 DD 77 08           ld (ix+8),a
5072   A136 C9          j00068 ret
5073   A137             evnt10 equ $
5074   A137 3A 16 7D           ld a,(vara)
5075   A13A 3C                 inc a
5076   A13B 32 16 7D           ld (vara),a
5077   A13E 3E 02              ld a,2
5078   A140 21 16 7D           ld hl,vara
5079   A143 BE                 cp (hl)
5080   A144 D2 4B A1           jp nc,k00040
5081   A147 AF                 xor a
5082   A148 32 16 7D           ld (vara),a
5083   A14B 3E 01       k00040 ld a,1
5084   A14D 21 1D 7D           ld hl,varh
5085   A150 BE                 cp (hl)
5086   A151 C2 95 A1           jp nz,k00168
5087   A154 3E 0C              ld a,12
5088   A156 CD E7 86           call gotob
5089   A159 DA 95 A1           jp c,k00168
5090   A15C DD 7E 08           ld a,(ix+8)
5091   A15F 32 1A 7D           ld (vare),a
5092   A162 DD 7E 09           ld a,(ix+9)
5093   A165 32 1B 7D           ld (varf),a
5094   A168 3E 28              ld a,40
5095   A16A DD 77 08           ld (ix+8),a
5096   A16D 3E 58              ld a,88
5097   A16F DD 77 09           ld (ix+9),a
5098   A172 DD 7E 09           ld a,(ix+9)
5099   A175 67                 ld h,a
5100   A176 DD 7E 08           ld a,(ix+8)
5101   A179 6F                 ld l,a
5102   A17A 22 3A 7D           ld (dispx),hl
5103   A17D 3E 0C              ld a,12
5104   A17F CD 09 87           call drpob
5105   A182 3A 1A 7D           ld a,(vare)
5106   A185 DD 77 08           ld (ix+8),a
5107   A188 3A 1B 7D           ld a,(varf)
5108   A18B DD 77 09           ld (ix+9),a
5109   A18E 3A 1D 7D           ld a,(varh)
5110   A191 3C                 inc a
5111   A192 32 1D 7D           ld (varh),a
5112   A195 3E 01       k00168 ld a,1
5113   A197 21 1E 7D           ld hl,vari
5114   A19A BE                 cp (hl)
5115   A19B C2 DF A1           jp nz,k00295
5116   A19E 3E 0D              ld a,13
5117   A1A0 CD E7 86           call gotob
5118   A1A3 DA DF A1           jp c,k00295
5119   A1A6 DD 7E 08           ld a,(ix+8)
5120   A1A9 32 1A 7D           ld (vare),a
5121   A1AC DD 7E 09           ld a,(ix+9)
5122   A1AF 32 1B 7D           ld (varf),a
5123   A1B2 3E 08              ld a,8
5124   A1B4 DD 77 08           ld (ix+8),a
5125   A1B7 3E 18              ld a,24
5126   A1B9 DD 77 09           ld (ix+9),a
5127   A1BC DD 7E 09           ld a,(ix+9)
5128   A1BF 67                 ld h,a
5129   A1C0 DD 7E 08           ld a,(ix+8)
5130   A1C3 6F                 ld l,a
5131   A1C4 22 3A 7D           ld (dispx),hl
5132   A1C7 3E 0D              ld a,13
5133   A1C9 CD 09 87           call drpob
5134   A1CC 3A 1A 7D           ld a,(vare)
5135   A1CF DD 77 08           ld (ix+8),a
5136   A1D2 3A 1B 7D           ld a,(varf)
5137   A1D5 DD 77 09           ld (ix+9),a
5138   A1D8 3A 1E 7D           ld a,(vari)
5139   A1DB 3C                 inc a
5140   A1DC 32 1E 7D           ld (vari),a
5141   A1DF 3E 1B       k00295 ld a,27
5142   A1E1 21 14 7D           ld hl,scno
5143   A1E4 BE                 cp (hl)
5144   A1E5 C2 28 A2           jp nz,k00425
5145   A1E8 AF                 xor a
5146   A1E9 21 1C 7D           ld hl,varg
5147   A1EC BE                 cp (hl)
5148   A1ED C2 28 A2           jp nz,k00425
5149   A1F0 3E 45              ld a,69
5150   A1F2 32 8D 5C           ld (23693),a
5151   A1F5 3E 02              ld a,2
5152   A1F7 32 2F 7D           ld (charx),a
5153   A1FA 3E 03              ld a,3
5154   A1FC 32 30 7D           ld (chary),a
5155   A1FF 3E 0B              ld a,11
5156   A201 CD 19 8C           call dmsg
5157   A204 3E 46              ld a,70
5158   A206 32 8D 5C           ld (23693),a
5159   A209 3E 12              ld a,18
5160   A20B 32 2F 7D           ld (charx),a
5161   A20E 3E 0C              ld a,12
5162   A210 32 30 7D           ld (chary),a
5163   A213 3E 14              ld a,20
5164   A215 CD 19 8C           call dmsg
5165   A218 3A 1C 7D           ld a,(varg)
5166   A21B 3C                 inc a
5167   A21C 32 1C 7D           ld (varg),a
5168   A21F DD E5              push ix
5169   A221 06 19              ld b,25
5170   A223 CD 1A 7F           call delay
5171   A226 DD E1              pop ix
5172   A228 3E 1B       k00425 ld a,27
5173   A22A 21 14 7D           ld hl,scno
5174   A22D BE                 cp (hl)
5175   A22E C2 38 A2           jp nz,k00456
5176   A231 CD 04 7F           call prskey
5177   A234 21 39 7D           ld hl,gamwon
5178   A237 74                 ld (hl),h
5179   A238 C9          k00456 ret
5180   A239             evnt11 equ $
5181   A239 C9                 ret
5182   A23A             evnt12 equ $
5183   A23A 3E 46              ld a,70
5184   A23C 32 8D 5C           ld (23693),a
5185   A23F CD F3 7F           call cls
5186   A242 3E 02              ld a,2
5187   A244 32 2F 7D           ld (charx),a
5188   A247 3E 0A              ld a,10
5189   A249 32 30 7D           ld (chary),a
5190   A24C AF                 xor a
5191   A24D CD 19 8C           call dmsg
5192   A250 3E 01              ld a,1
5193   A252 32 2F 7D           ld (charx),a
5194   A255 3E 12              ld a,18
5195   A257 CD 19 8C           call dmsg
5196   A25A 3E 45              ld a,69
5197   A25C 32 8D 5C           ld (23693),a
5198   A25F 3E 04              ld a,4
5199   A261 32 2F 7D           ld (charx),a
5200   A264 AF                 xor a
5201   A265 32 30 7D           ld (chary),a
5202   A268 3E 0C              ld a,12
5203   A26A CD 19 8C           call dmsg
5204   A26D 3E 44              ld a,68
5205   A26F 32 8D 5C           ld (23693),a
5206   A272 3E 12              ld a,18
5207   A274 32 2F 7D           ld (charx),a
5208   A277 AF                 xor a
5209   A278 32 30 7D           ld (chary),a
5210   A27B 3E 0D              ld a,13
5211   A27D CD 19 8C           call dmsg
5212   A280 3E 47              ld a,71
5213   A282 32 8D 5C           ld (23693),a
5214   A285 3E 01              ld a,1
5215   A287 32 2F 7D           ld (charx),a
5216   A28A 3E 0F              ld a,15
5217   A28C 32 30 7D           ld (chary),a
5218   A28F 3E 0E              ld a,14
5219   A291 CD 19 8C           call dmsg
5220   A294 3E 08              ld a,8
5221   A296 32 2F 7D           ld (charx),a
5222   A299 3E 02              ld a,2
5223   A29B 32 30 7D           ld (chary),a
5224   A29E 3E 0F              ld a,15
5225   A2A0 CD 19 8C           call dmsg
5226   A2A3 3E 46              ld a,70
5227   A2A5 32 8D 5C           ld (23693),a
5228   A2A8 3E 04              ld a,4
5229   A2AA 32 2F 7D           ld (charx),a
5230   A2AD 3E 1D              ld a,29
5231   A2AF 32 30 7D           ld (chary),a
5232   A2B2 3E 10              ld a,16
5233   A2B4 CD 19 8C           call dmsg
5234   A2B7 3E 05              ld a,5
5235   A2B9 32 8D 5C           ld (23693),a
5236   A2BC 3E 06              ld a,6
5237   A2BE 32 2F 7D           ld (charx),a
5238   A2C1 3E 08              ld a,8
5239   A2C3 32 30 7D           ld (chary),a
5240   A2C6 3E 0A              ld a,10
5241   A2C8 CD 19 8C           call dmsg
5242   A2CB 3E 0A              ld a,10
5243   A2CD 32 2F 7D           ld (charx),a
5244   A2D0 3E 08              ld a,8
5245   A2D2 32 30 7D           ld (chary),a
5246   A2D5 3E 0A              ld a,10
5247   A2D7 CD 19 8C           call dmsg
5248   A2DA 3E 08              ld a,8
5249   A2DC 32 2F 7D           ld (charx),a
5250   A2DF 3E 17              ld a,23
5251   A2E1 32 30 7D           ld (chary),a
5252   A2E4 3E 0A              ld a,10
5253   A2E6 CD 19 8C           call dmsg
5254   A2E9 3E 45              ld a,69
5255   A2EB 32 8D 5C           ld (23693),a
5256   A2EE 3E 09              ld a,9
5257   A2F0 32 2F 7D           ld (charx),a
5258   A2F3 3E 17              ld a,23
5259   A2F5 32 30 7D           ld (chary),a
5260   A2F8 3E 0A              ld a,10
5261   A2FA CD 19 8C           call dmsg
5262   A2FD 3E 4E              ld a,78
5263   A2FF 32 8D 5C           ld (23693),a
5264   A302 3E 04              ld a,4
5265   A304 32 2F 7D           ld (charx),a
5266   A307 3E 14              ld a,20
5267   A309 32 30 7D           ld (chary),a
5268   A30C 3E 08              ld a,8
5269   A30E CD 19 8C           call dmsg
5270   A311 3E 56              ld a,86
5271   A313 32 8D 5C           ld (23693),a
5272   A316 3E 0C              ld a,12
5273   A318 32 2F 7D           ld (charx),a
5274   A31B 3E 0A              ld a,10
5275   A31D 32 30 7D           ld (chary),a
5276   A320 3E 08              ld a,8
5277   A322 CD 19 8C           call dmsg
5278   A325 3E 5E              ld a,94
5279   A327 32 8D 5C           ld (23693),a
5280   A32A 3E 0C              ld a,12
5281   A32C 32 2F 7D           ld (charx),a
5282   A32F 3E 0C              ld a,12
5283   A331 32 30 7D           ld (chary),a
5284   A334 3E 08              ld a,8
5285   A336 CD 19 8C           call dmsg
5286   A339 3E 66              ld a,102
5287   A33B 32 8D 5C           ld (23693),a
5288   A33E 3E 0C              ld a,12
5289   A340 32 2F 7D           ld (charx),a
5290   A343 3E 0B              ld a,11
5291   A345 32 30 7D           ld (chary),a
5292   A348 3E 08              ld a,8
5293   A34A CD 19 8C           call dmsg
5294   A34D 3E 42              ld a,66
5295   A34F 32 8D 5C           ld (23693),a
5296   A352 3E 15              ld a,21
5297   A354 32 2F 7D           ld (charx),a
5298   A357 3E 11              ld a,17
5299   A359 CD 19 8C           call dmsg
5300   A35C CD 04 7F           call prskey
5301   A35F C9                 ret
5302   A360             evnt13 equ $
5303   A360 AF                 xor a
5304   A361 CD 9B 22           call 8859
5305   A364 3E 4D              ld a,77
5306   A366 32 8D 5C           ld (23693),a
5307   A369 CD F3 7F           call cls
5308   A36C CD 2D 7F           call silenc
5309   A36F 3E 4B              ld a,75
5310   A371 32 8D 5C           ld (23693),a
5311   A374 3E 14              ld a,20
5312   A376 32 2F 7D           ld (charx),a
5313   A379 3E 02              ld a,2
5314   A37B 32 30 7D           ld (chary),a
5315   A37E AF                 xor a
5316   A37F CD 19 8C           call dmsg
5317   A382 3E 4D              ld a,77
5318   A384 32 8D 5C           ld (23693),a
5319   A387 AF                 xor a
5320   A388 32 18 7D           ld (varc),a
5321   A38B AF                 xor a
5322   A38C 32 1C 7D           ld (varg),a
5323   A38F 3E 80              ld a,128
5324   A391 32 24 7D           ld (varo),a
5325   A394 3E 20              ld a,32
5326   A396 32 25 7D           ld (varp),a
5327   A399 3E 03              ld a,3
5328   A39B 32 15 7D           ld (numlif),a
5329   A39E AF                 xor a
5330   A39F 32 20 7D           ld (vark),a
5331   A3A2 AF                 xor a
5332   A3A3 32 1A 7D           ld (vare),a
5333   A3A6 AF                 xor a
5334   A3A7 32 1B 7D           ld (varf),a
5335   A3AA AF                 xor a
5336   A3AB 32 2F 7D           ld (charx),a
5337   A3AE 3E 01              ld a,1
5338   A3B0 32 30 7D           ld (chary),a
5339   A3B3 3E 03              ld a,3
5340   A3B5 CD 19 8C           call dmsg
5341   A3B8 3E 15              ld a,21
5342   A3BA 32 81 5C           ld (loopa),a
5343   A3BD 3E 01       n00169 ld a,1
5344   A3BF 32 30 7D           ld (chary),a
5345   A3C2 3E 03              ld a,3
5346   A3C4 CD 19 8C           call dmsg
5347   A3C7 21 81 5C           ld hl,loopa
5348   A3CA 35                 dec (hl)
5349   A3CB C2 BD A3           jp nz,n00169
5350   A3CE 3E 01              ld a,1
5351   A3D0 32 30 7D           ld (chary),a
5352   A3D3 3E 04              ld a,4
5353   A3D5 CD 19 8C           call dmsg
5354   A3D8 AF                 xor a
5355   A3D9 32 2F 7D           ld (charx),a
5356   A3DC 3E 1E              ld a,30
5357   A3DE 32 30 7D           ld (chary),a
5358   A3E1 3E 03              ld a,3
5359   A3E3 CD 19 8C           call dmsg
5360   A3E6 3E 15              ld a,21
5361   A3E8 32 81 5C           ld (loopa),a
5362   A3EB 3E 1E       n00249 ld a,30
5363   A3ED 32 30 7D           ld (chary),a
5364   A3F0 3E 03              ld a,3
5365   A3F2 CD 19 8C           call dmsg
5366   A3F5 21 81 5C           ld hl,loopa
5367   A3F8 35                 dec (hl)
5368   A3F9 C2 EB A3           jp nz,n00249
5369   A3FC 3E 16              ld a,22
5370   A3FE 32 2F 7D           ld (charx),a
5371   A401 3E 02              ld a,2
5372   A403 32 30 7D           ld (chary),a
5373   A406 3E 05              ld a,5
5374   A408 CD 19 8C           call dmsg
5375   A40B 3E 16              ld a,22
5376   A40D 32 2F 7D           ld (charx),a
5377   A410 3E 1E              ld a,30
5378   A412 32 30 7D           ld (chary),a
5379   A415 3E 06              ld a,6
5380   A417 CD 19 8C           call dmsg
5381   A41A 3E 4E              ld a,78
5382   A41C 32 8D 5C           ld (23693),a
5383   A41F 3E 15              ld a,21
5384   A421 32 2F 7D           ld (charx),a
5385   A424 3E 16              ld a,22
5386   A426 32 30 7D           ld (chary),a
5387   A429 3E 01              ld a,1
5388   A42B CD 19 8C           call dmsg
5389   A42E 3E 15              ld a,21
5390   A430 32 2F 7D           ld (charx),a
5391   A433 3E 1D              ld a,29
5392   A435 32 30 7D           ld (chary),a
5393   A438 3A 15 7D           ld a,(numlif)
5394   A43B CD BB 8F           call disply
5395   A43E 3E 15              ld a,21
5396   A440 32 2F 7D           ld (charx),a
5397   A443 3E 02              ld a,2
5398   A445 32 30 7D           ld (chary),a
5399   A448 3E 07              ld a,7
5400   A44A CD 19 8C           call dmsg
5401   A44D 3E 4F              ld a,79
5402   A44F 32 8D 5C           ld (23693),a
5403   A452 3E 14              ld a,20
5404   A454 32 2F 7D           ld (charx),a
5405   A457 3E 13              ld a,19
5406   A459 32 30 7D           ld (chary),a
5407   A45C 3E 02              ld a,2
5408   A45E CD 19 8C           call dmsg
5409   A461 3E 14              ld a,20
5410   A463 32 2F 7D           ld (charx),a
5411   A466 3E 1D              ld a,29
5412   A468 32 30 7D           ld (chary),a
5413   A46B 3A 20 7D           ld a,(vark)
5414   A46E CD BB 8F           call disply
5415   A471 C9                 ret
5416   A472             evnt14 equ $
5417   A472 C9                 ret
5418   A473             evnt15 equ $
5419   A473 C9                 ret
5420   A474             evnt16 equ $
5421   A474 3E 3C              ld a,60
5422   A476 32 C5 7F           ld (sndtyp),a
5423   A479 DD E5              push ix
5424   A47B 47                 ld b,a
5425   A47C CD 1A 7F           call delay
5426   A47F DD E1              pop ix
5427   A481 3A 15 7D           ld a,(numlif)
5428   A484 3D                 dec a
5429   A485 32 15 7D           ld (numlif),a
5430   A488 3A 24 7D           ld a,(varo)
5431   A48B DD 77 08           ld (ix+8),a
5432   A48E 3A 25 7D           ld a,(varp)
5433   A491 DD 77 09           ld (ix+9),a
5434   A494 3E 4E              ld a,78
5435   A496 32 8D 5C           ld (23693),a
5436   A499 3E 15              ld a,21
5437   A49B 32 2F 7D           ld (charx),a
5438   A49E 3E 1D              ld a,29
5439   A4A0 32 30 7D           ld (chary),a
5440   A4A3 3A 15 7D           ld a,(numlif)
5441   A4A6 CD BB 8F           call disply
5442   A4A9 C9                 ret
5443   A4AA             evnt17 equ $
5444   A4AA DD E5              push ix
5445   A4AC 06 32              ld b,50
5446   A4AE CD 1A 7F           call delay
5447   A4B1 DD E1              pop ix
5448   A4B3 CD F3 7F           call cls
5449   A4B6 3E 4D              ld a,77
5450   A4B8 32 8D 5C           ld (23693),a
5451   A4BB 3E 0A              ld a,10
5452   A4BD 32 2F 7D           ld (charx),a
5453   A4C0 3E 0A              ld a,10
5454   A4C2 32 30 7D           ld (chary),a
5455   A4C5 AF                 xor a
5456   A4C6 CD 19 8C           call dmsg
5457   A4C9 3E 09              ld a,9
5458   A4CB 32 2F 7D           ld (charx),a
5459   A4CE 3E 12              ld a,18
5460   A4D0 CD 19 8C           call dmsg
5461   A4D3 3E CE              ld a,206
5462   A4D5 32 8D 5C           ld (23693),a
5463   A4D8 3E 0C              ld a,12
5464   A4DA 32 2F 7D           ld (charx),a
5465   A4DD 3E 0C              ld a,12
5466   A4DF 32 30 7D           ld (chary),a
5467   A4E2 3E 15              ld a,21
5468   A4E4 CD 19 8C           call dmsg
5469   A4E7 3E 4F              ld a,79
5470   A4E9 32 8D 5C           ld (23693),a
5471   A4EC 3E 0E              ld a,14
5472   A4EE 32 2F 7D           ld (charx),a
5473   A4F1 3E 0F              ld a,15
5474   A4F3 32 30 7D           ld (chary),a
5475   A4F6 3E 0E              ld a,14
5476   A4F8 CD 19 8C           call dmsg
5477   A4FB DD E5              push ix
5478   A4FD 06 C8              ld b,200
5479   A4FF CD 1A 7F           call delay
5480   A502 DD E1              pop ix
5481   A504 C9                 ret
5482   A505             evnt18 equ $
5483   A505 3E 45              ld a,69
5484   A507 32 8D 5C           ld (23693),a
5485   A50A CD F3 7F           call cls
5486   A50D DD E5              push ix
5487   A50F 06 32              ld b,50
5488   A511 CD 1A 7F           call delay
5489   A514 DD E1              pop ix
5490   A516 3E 01              ld a,1
5491   A518 32 2F 7D           ld (charx),a
5492   A51B AF                 xor a
5493   A51C 32 30 7D           ld (chary),a
5494   A51F 3E 13              ld a,19
5495   A521 CD 19 8C           call dmsg
5496   A524 3E 46              ld a,70
5497   A526 32 8D 5C           ld (23693),a
5498   A529 3E 15              ld a,21
5499   A52B 32 2F 7D           ld (charx),a
5500   A52E 3E 0B              ld a,11
5501   A530 32 30 7D           ld (chary),a
5502   A533 3E 14              ld a,20
5503   A535 CD 19 8C           call dmsg
5504   A538 CD 04 7F           call prskey
5505   A53B C9                 ret
5506   A53C             evnt19 equ $
5507   A53C C9                 ret
5508   A53D C9          ptcusr ret
5509   A53E             msgdat equ $
5510   A53E                    defb 'FOGGYS;QUEST',141
5510   A53E 464F474759533B51554553548D
5511   A54B                    defb 'LIVES:',141
5511   A54B 4C495645533A8D
5512   A552                    defb 'CRYSTALS:',141
5512   A552 4352595354414C533A8D
5513   A55C 40 8D              defb '@',141
5514   A55E 60 8D              defb '`',141
5515   A560                    defb '____________________________',141
5515   A560 5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F8D
5516   A57D 24 8D              defb '$',141
5517   A57F                    defb 'BY:;J.BLYTHE',141
5517   A57F 42593A3B4A2E424C595448458D
5518   A58C 78 8D              defb 'x',141
5519   A58E                    defb ';KEY;BLUE;;',13
5519   A58E 3B4B45593B424C55453B3B0D
5520   A59A                    defb 'CRYSTAL;BLU',13
5520   A59A 4352595354414C3B424C550D
5521   A5A6                    defb 'CRYSTAL;RED',13
5521   A5A6 4352595354414C3B5245440D
5522   A5B2                    defb 'CRYSTAL;GRN',13
5522   A5B2 4352595354414C3B47524E0D
5523   A5BE                    defb ';;KEY;RED;;',13
5523   A5BE 3B3B4B45593B5245443B3B0D
5524   A5CA                    defb ';KEY;PINK;;',13
5524   A5CA 3B4B45593B50494E4B3B3B0D
5525   A5D6                    defb ';;LADDER;;;',13
5525   A5D6 3B3B4C41444445523B3B3B0D
5526   A5E2                    defb ';;;BOMB;;;;',13
5526   A5E2 3B3B3B424F4D423B3B3B3B0D
5527   A5EE                    defb ';THE;CUBE;;',13
5527   A5EE 3B5448453B435542453B3B0D
5528   A5FA                    defb ';THE;SKULL;',13
5528   A5FA 3B5448453B534B554C4C3B0D
5529   A606                    defb ';PIT;PLANT;',13
5529   A606 3B5049543B504C414E543B0D
5530   A612                    defb ';;;ROCK;;;;',13
5530   A612 3B3B3B524F434B3B3B3B3B0D
5531   A61E                    defb 'EXTRA;LIFE;',13
5531   A61E 45585452413B4C4946453B0D
5532   A62A                    defb 'EXTRA;LIFE;',13
5532   A62A 45585452413B4C4946453B0D
5533   A636                    defb ';;A;SEED;;;',13
5533   A636 3B3B413B534545443B3B3B0D
5534   A642                    defb ';;BALLOON;;',13
5534   A642 3B3B42414C4C4F4F4E3B3B0D
5535   A64E                    defb ';PICK;AXE;;',13
5535   A64E 3B5049434B3B4158453B3B0D
5536   A65A                    defb ';;BRICKS;;;',13
5536   A65A 3B3B425249434B533B3B3B0D
5537   A666                    defb ';ICE;DRILL;',13
5537   A666 3B4943453B4452494C4C3B0D
5538   A672                    defb ';;SPLICER;;',141
5538   A672 3B3B53504C494345523B3B8D
5539   A67E 7A 8D              defb 'z',141
5540   A680                    defb 'WELL;DONE;FOGGY!!',141
5540   A680 57454C4C3B444F4E453B464F47475921218D
5541   A692                    defb ';;;;;;;;w___________x__y;;;.',13
5541   A692 3B3B3B3B3B3B3B3B775F5F5F5F5F5F5F5F5F5F5F785F5F793B3B3B2E0D
5542   A6AF                    defb ';.;;;;;;@;;;;;;;;;;;;;;@',13
5542   A6AF 3B2E3B3B3B3B3B3B403B3B3B3B3B3B3B3B3B3B3B3B3B3B400D
5543   A6C8                    defb ';;;;;;;;z;;;CONTROLS;;;@;.',13
5543   A6C8 3B3B3B3B3B3B3B3B7A3B3B3B434F4E54524F4C533B3B3B403B2E0D
5544   A6E3                    defb ';;;;;.;;@;;;;;;;;;;;;;;@;;;;;;.',13
5544   A6E3 3B3B3B3B3B2E3B3B403B3B3B3B3B3B3B3B3B3B3B3B3B3B403B3B3B3B3B3B2E0D
5545   A703                    defb ';;;;.;;;@;;1;KEYBOARD;;z',13
5545   A703 3B3B3B3B2E3B3B3B403B3B313B4B4559424F4152443B3B7A0D
5546   A71C                    defb ';;;;;;;;@;;2;KEMPSTON;;@',13
5546   A71C 3B3B3B3B3B3B3B3B403B3B323B4B454D5053544F4E3B3B400D
5547   A735                    defb ';;;;;;;;z;;3;SINCLAIR;;@;;;;.',13
5547   A735 3B3B3B3B3B3B3B3B7A3B3B333B53494E434C4149523B3B403B3B3B3B2E0D
5548   A753                    defb ';;;;;;.;@;;;;;;;;;;;;;;@;;;;;.',13
5548   A753 3B3B3B3B3B3B2E3B403B3B3B3B3B3B3B3B3B3B3B3B3B3B403B3B3B3B3B2E0D
5549   A772                    defb ';;.;;;;;`_xx___________$;;.',13
5549   A772 3B3B2E3B3B3B3B3B605F78785F5F5F5F5F5F5F5F5F5F5F243B3B2E0D
5550   A78E 0D                 defb 13
5551   A78F                    defb ';;;;;;;;;;KEYS:O,P,Q,A',13
5551   A78F 3B3B3B3B3B3B3B3B3B3B4B4559533A4F2C502C512C410D
5552   A7A6                    defb ';;;;;;;;;;;;;;;I-INV.',13
5552   A7A6 3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B492D494E562E0D
5553   A7BC                    defb ';;;;;;;;;;;;;;;SPC-JUMP',141
5553   A7BC 3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B5350432D4A554D508D
5554   A7D4                    defb ';;;;;;;;;RUCKSACK;GAMES',13
5554   A7D4 3B3B3B3B3B3B3B3B3B5255434B5341434B3B47414D45530D
5555   A7EC                    defb ';;;;;;;c;2017;JOHN;BLYTHE',141
5555   A7EC 3B3B3B3B3B3B3B633B323031373B4A4F484E3B424C595448458D
5556   A806 2F 2B 8D           defb '/+',141
5557   A809 3E 8D              defb '>',141
5558   A80B 3F 8D              defb '?',141
5559   A80D                    defb ';;;;;;;;;POWERED;BY;AGD',141
5559   A80D 3B3B3B3B3B3B3B3B3B504F57455245443B42593B4147448D
5560   A825                    defb ';;;;;;;;;;v',13
5560   A825 3B3B3B3B3B3B3B3B3B3B760D
5561   A831                    defb ';;;;;;;;;;u',141
5561   A831 3B3B3B3B3B3B3B3B3B3B758D
5562   A83D                    defb ';;;HOME;AT;LAST.;FOGGY;TAKES;A',13
5562   A83D 3B3B3B484F4D453B41543B4C4153542E3B464F4747593B54414B45533B410D
5563   A85C 3B 0D              defb ';',13
5564   A85E                    defb ';WELL;EARNED;REST;FROM;HOLIDAYS.',13
5564   A85E 3B57454C4C3B4541524E45443B524553543B46524F4D3B484F4C49444159532E
5564   A87E 0D
5565   A87F 3B 0D              defb ';',13
5566   A881                    defb ';;;;TIME;FOR;BIT;OF;TREASURE',13
5566   A881 3B3B3B3B54494D453B464F523B4249543B4F463B54524541535552450D
5567   A89E 3B 0D              defb ';',13
5568   A8A0                    defb ';;;;;;;;HUNTING;INSTEAD!!!',13
5568   A8A0 3B3B3B3B3B3B3B3B48554E54494E473B494E53544541442121210D
5569   A8BB 3B 0D              defb ';',13
5570   A8BD 3B 0D              defb ';',13
5571   A8BF                    defb ';;;;;;;THANKS;FOR;PLAYING!',13
5571   A8BF 3B3B3B3B3B3B3B5448414E4B533B464F523B504C4159494E47210D
5572   A8DA 3B 0D              defb ';',13
5573   A8DC                    defb ';CREDITS..',13
5573   A8DC 3B435245444954532E2E0D
5574   A8E7 3B 0D              defb ';',13
5575   A8E9                    defb ';CODING;AND;GFX;-;JOHN;BLYTHE',13
5575   A8E9 3B434F44494E473B414E443B4746583B2D3B4A4F484E3B424C595448450D
5576   A907                    defb ';ADDITIONAL;CODE;-;ANDY;JOHNS',13
5576   A907 3B4144444954494F4E414C3B434F44453B2D3B414E44593B4A4F484E530D
5577   A925 3B 0D              defb ';',13
5578   A927                    defb ';MANY;THANKS;TO..',13
5578   A927 3B4D414E593B5448414E4B533B544F2E2E0D
5579   A939                    defb ';JONATHAN CAULDWELL;FOR;AGD',141
5579   A939 3B4A4F4E415448414E204341554C4457454C4C3B464F523B4147448D
5580   A955                    defb 'PRESS;A;KEY',141
5580   A955 50524553533B413B4B45598D
5581   A961                    defb 'IS;OVER..',141
5581   A961 49533B4F5645522E2E8D
5582   A96B 16          nummsg defb 22
5583   A96C             chgfx  equ $
5584   A96C                    defb 0,0,0,0,0,0,0,0
5584   A96C 0000000000000000
5585   A974                    defb 12,108,97,128,30,222,222,32
5585   A974 0C6C61801EDEDE20
5586   A97C                    defb 70,6,102,97,0,51,179,48
5586   A97C 460666610033B330
5587   A984                    defb 0,8,65,0,16,0,130,32
5587   A984 0008410010008220
5588   A98C                    defb 126,129,141,141,129,161,129,126
5588   A98C 7E818D8D81A1817E
5589   A994                    defb 255,126,189,90,165,66,129,0
5589   A994 FF7EBD5AA5428100
5590   A99C                    defb 255,126,189,90,165,66,129,0
5590   A99C FF7EBD5AA5428100
5591   A9A4                    defb 255,126,189,90,165,66,129,0
5591   A9A4 FF7EBD5AA5428100
5592   A9AC                    defb 255,126,189,90,165,66,129,0
5592   A9AC FF7EBD5AA5428100
5593   A9B4                    defb 239,239,170,69,170,0,239,0
5593   A9B4 EFEFAA45AA00EF00
5594   A9BC                    defb 248,254,174,87,171,23,139,87
5594   A9BC F8FEAE57AB178B57
5595   A9C4                    defb 75,87,75,87,0,87,75,87
5595   A9C4 4B574B5700574B57
5596   A9CC                    defb 75,87,74,69,34,48,15,0
5596   A9CC 4B574A4522300F00
5597   A9D4                    defb 126,255,170,85,3,187,56,66
5597   A9D4 7EFFAA5503BB3842
5598   A9DC                    defb 183,183,0,248,240,0,192,128
5598   A9DC B7B700F8F000C080
5599   A9E4                    defb 215,215,0,29,13,0,3,1
5599   A9E4 D7D7001D0D000301
5600   A9EC                    defb 12,25,30,76,56,28,14,24
5600   A9EC 0C191E4C381C0E18
5601   A9F4                    defb 12,88,48,38,72,68,36,24
5601   A9F4 0C58302648442418
5602   A9FC                    defb 239,239,170,69,170,0,239,0
5602   A9FC EFEFAA45AA00EF00
5603   AA04                    defb 0,0,0,0,0,0,0,0
5603   AA04 0000000000000000
5604   AA0C                    defb 181,0,96,6,0,85,170,255
5604   AA0C B50060060055AAFF
5605   AA14                    defb 96,96,96,255,170,0,64,96
5605   AA14 606060FFAA004060
5606   AA1C                    defb 6,6,6,255,170,0,4,6
5606   AA1C 060606FFAA000406
5607   AA24                    defb 132,41,16,90,32,148,1,40
5607   AA24 8429105A20940128
5608   AA2C                    defb 79,159,0,79,0,159,149,79
5608   AA2C 4F9F004F009F954F
5609   AA34                    defb 250,253,0,250,0,253,85,250
5609   AA34 FAFD00FA00FD55FA
5610   AA3C                    defb 126,129,141,141,129,161,129,126
5610   AA3C 7E818D8D81A1817E
5611   AA44                    defb 126,129,141,141,129,161,129,126
5611   AA44 7E818D8D81A1817E
5612   AA4C                    defb 168,130,42,162,136,42,162,42
5612   AA4C A8822AA2882AA22A
5613   AA54                    defb 168,130,42,162,136,42,162,42
5613   AA54 A8822AA2882AA22A
5614   AA5C                    defb 168,130,42,162,136,42,162,42
5614   AA5C A8822AA2882AA22A
5615   AA64                    defb 0,0,0,0,66,16,36,255
5615   AA64 00000000421024FF
5616   AA6C                    defb 219,255,85,170,255,0,30,12
5616   AA6C DBFF55AAFF001E0C
5617   AA74                    defb 109,255,85,170,255,0,120,48
5617   AA74 6DFF55AAFF007830
5618   AA7C                    defb 63,64,180,160,128,133,255,0
5618   AA7C 3F40B4A08085FF00
5619   AA84                    defb 252,2,1,5,13,161,255,0
5619   AA84 FC0201050DA1FF00
5620   AA8C                    defb 240,252,87,172,240,44,5,14
5620   AA8C F0FC57ACF02C050E
5621   AA94                    defb 13,63,245,58,15,26,160,112
5621   AA94 0D3FF53A0F1AA070
5622   AA9C                    defb 0,0,0,0,0,0,0,0
5622   AA9C 0000000000000000
5623   AAA4                    defb 0,0,0,0,0,0,0,0
5623   AAA4 0000000000000000
5624   AAAC                    defb 0,0,0,0,0,0,0,0
5624   AAAC 0000000000000000
5625   AAB4                    defb 0,0,0,0,0,0,0,0
5625   AAB4 0000000000000000
5626   AABC                    defb 254,124,184,80,160,64,128,0
5626   AABC FE7CB850A0408000
5627   AAC4                    defb 127,62,29,10,5,2,1,0
5627   AAC4 7F3E1D0A05020100
5628   AACC                    defb 0,0,0,0,0,0,0,0
5628   AACC 0000000000000000
5629   AAD4                    defb 0,0,0,0,32,0,0,0
5629   AAD4 0000000020000000
5630   AADC                    defb 0,0,0,8,0,0,0,0
5630   AADC 0000000800000000
5631   AAE4                    defb 0,0,0,0,0,0,0,0
5631   AAE4 0000000000000000
5632   AAEC                    defb 0,0,0,0,0,0,0,0
5632   AAEC 0000000000000000
5633   AAF4                    defb 128,64,160,208,232,244,250,253
5633   AAF4 8040A0D0E8F4FAFD
5634   AAFC                    defb 8,0,8,255,128,0,128,0
5634   AAFC 080008FF80008000
5635   AB04                    defb 1,2,5,11,23,47,95,191
5635   AB04 0102050B172F5FBF
5636   AB0C                    defb 0,106,64,0,64,0,66,0
5636   AB0C 006A400040004200
5637   AB14                    defb 24,24,36,36,102,126,231,255
5637   AB14 18182424667EE7FF
5638   AB1C                    defb 0,0,0,0,0,0,0,0
5638   AB1C 0000000000000000
5639   AB24                    defb 54,111,221,221,122,50,1,0
5639   AB24 366FDDDD7A320100
5640   AB2C                    defb 124,214,191,255,235,213,170,124
5640   AB2C 7CD6BFFFEBD5AA7C
5641   AB34                    defb 56,254,255,221,243,127,157,98
5641   AB34 38FEFFDDF37F9D62
5642   AB3C                    defb 0,112,236,222,254,251,223,62
5642   AB3C 0070ECDEFEFBDF3E
5643   AB44                    defb 0,15,63,111,254,249,239,112
5643   AB44 000F3F6FFEF9EF70
5644   AB4C                    defb 60,78,191,255,245,106,52,24
5644   AB4C 3C4EBFFFF56A3418
5645   AB54                    defb 8,8,4,8,16,32,16,8
5645   AB54 0808040810201008
5646   AB5C                    defb 255,255,255,255,255,255,255,255
5646   AB5C FFFFFFFFFFFFFFFF
5647   AB64                    defb 85,171,87,175,95,191,127,255
5647   AB64 55AB57AF5FBF7FFF
5648   AB6C                    defb 1,2,5,10,21,42,85,170
5648   AB6C 0102050A152A55AA
5649   AB74                    defb 61,104,208,168,208,128,192,128
5649   AB74 3D68D0A8D080C080
5650   AB7C                    defb 188,22,11,21,11,1,3,1
5650   AB7C BC160B150B010301
5651   AB84                    defb 255,117,170,16,66,0,0,0
5651   AB84 FF75AA1042000000
5652   AB8C                    defb 0,0,0,0,0,0,0,0
5652   AB8C 0000000000000000
5653   AB94                    defb 139,197,227,241,185,221,175,151
5653   AB94 8BC5E3F1B9DDAF97
5654   AB9C                    defb 255,250,210,82,64,64,0,0
5654   AB9C FFFAD25240400000
5655   ABA4                    defb 0,0,0,0,0,0,76,255
5655   ABA4 0000000000004CFF
5656   ABAC                    defb 90,165,219,102,189,102,60,90
5656   ABAC 5AA5DB66BD663C5A
5657   ABB4                    defb 76,246,251,187,95,70,128,0
5657   ABB4 4CF6FBBB5F468000
5658   ABBC                    defb 14,23,45,44,44,88,224,0
5658   ABBC 0E172D2C2C58E000
5659   ABC4                    defb 102,91,164,90,219,25,100,154
5659   ABC4 665BA45ADB19649A
5660   ABCC                    defb 1,131,103,90,38,28,0,0
5660   ABCC 0183675A261C0000
5661   ABD4                    defb 176,176,176,176,176,176,176,176
5661   ABD4 B0B0B0B0B0B0B0B0
5662   ABDC                    defb 13,21,13,21,13,21,13,21
5662   ABDC 0D150D150D150D15
5663   ABE4             bcol   equ $
5664   ABE4 47                 defb 71
5665   ABE5 4D                 defb 77
5666   ABE6 4E                 defb 78
5667   ABE7 4D                 defb 77
5668   ABE8 4E                 defb 78
5669   ABE9 56                 defb 86
5670   ABEA 4F                 defb 79
5671   ABEB 74                 defb 116
5672   ABEC 5E                 defb 94
5673   ABED 41                 defb 65
5674   ABEE 41                 defb 65
5675   ABEF 41                 defb 65
5676   ABF0 41                 defb 65
5677   ABF1 4E                 defb 78
5678   ABF2 45                 defb 69
5679   ABF3 45                 defb 69
5680   ABF4 44                 defb 68
5681   ABF5 04                 defb 4
5682   ABF6 01                 defb 1
5683   ABF7 45                 defb 69
5684   ABF8 56                 defb 86
5685   ABF9 47                 defb 71
5686   ABFA 47                 defb 71
5687   ABFB 41                 defb 65
5688   ABFC 47                 defb 71
5689   ABFD 07                 defb 7
5690   ABFE 56                 defb 86
5691   ABFF 5E                 defb 94
5692   AC00 CD                 defb 205
5693   AC01 D6                 defb 214
5694   AC02 DE                 defb 222
5695   AC03 42                 defb 66
5696   AC04 47                 defb 71
5697   AC05 07                 defb 7
5698   AC06 45                 defb 69
5699   AC07 41                 defb 65
5700   AC08 07                 defb 7
5701   AC09 47                 defb 71
5702   AC0A 42                 defb 66
5703   AC0B 43                 defb 67
5704   AC0C 44                 defb 68
5705   AC0D 41                 defb 65
5706   AC0E 46                 defb 70
5707   AC0F 46                 defb 70
5708   AC10 41                 defb 65
5709   AC11 45                 defb 69
5710   AC12 46                 defb 70
5711   AC13 57                 defb 87
5712   AC14 57                 defb 87
5713   AC15 42                 defb 66
5714   AC16 50                 defb 80
5715   AC17 42                 defb 66
5716   AC18 42                 defb 66
5717   AC19 46                 defb 70
5718   AC1A 40                 defb 64
5719   AC1B 44                 defb 68
5720   AC1C 42                 defb 66
5721   AC1D 47                 defb 71
5722   AC1E 47                 defb 71
5723   AC1F 47                 defb 71
5724   AC20 42                 defb 66
5725   AC21 44                 defb 68
5726   AC22 46                 defb 70
5727   AC23 46                 defb 70
5728   AC24 46                 defb 70
5729   AC25 42                 defb 66
5730   AC26 42                 defb 66
5731   AC27 42                 defb 66
5732   AC28 77                 defb 119
5733   AC29 45                 defb 69
5734   AC2A 47                 defb 71
5735   AC2B 47                 defb 71
5736   AC2C 43                 defb 67
5737   AC2D 44                 defb 68
5738   AC2E 04                 defb 4
5739   AC2F 42                 defb 66
5740   AC30 04                 defb 4
5741   AC31 57                 defb 87
5742   AC32 50                 defb 80
5743   AC33             bprop  equ $
5744   AC33 00                 defb 0
5745   AC34 02                 defb 2
5746   AC35 02                 defb 2
5747   AC36 02                 defb 2
5748   AC37 02                 defb 2
5749   AC38 02                 defb 2
5750   AC39 02                 defb 2
5751   AC3A 02                 defb 2
5752   AC3B 02                 defb 2
5753   AC3C 00                 defb 0
5754   AC3D 00                 defb 0
5755   AC3E 00                 defb 0
5756   AC3F 00                 defb 0
5757   AC40 02                 defb 2
5758   AC41 00                 defb 0
5759   AC42 00                 defb 0
5760   AC43 00                 defb 0
5761   AC44 00                 defb 0
5762   AC45 00                 defb 0
5763   AC46 00                 defb 0
5764   AC47 05                 defb 5
5765   AC48 03                 defb 3
5766   AC49 03                 defb 3
5767   AC4A 02                 defb 2
5768   AC4B 02                 defb 2
5769   AC4C 02                 defb 2
5770   AC4D 02                 defb 2
5771   AC4E 02                 defb 2
5772   AC4F 02                 defb 2
5773   AC50 02                 defb 2
5774   AC51 02                 defb 2
5775   AC52 00                 defb 0
5776   AC53 02                 defb 2
5777   AC54 02                 defb 2
5778   AC55 02                 defb 2
5779   AC56 02                 defb 2
5780   AC57 02                 defb 2
5781   AC58 02                 defb 2
5782   AC59 00                 defb 0
5783   AC5A 00                 defb 0
5784   AC5B 00                 defb 0
5785   AC5C 00                 defb 0
5786   AC5D 00                 defb 0
5787   AC5E 00                 defb 0
5788   AC5F 02                 defb 2
5789   AC60 00                 defb 0
5790   AC61 00                 defb 0
5791   AC62 00                 defb 0
5792   AC63 02                 defb 2
5793   AC64 00                 defb 0
5794   AC65 02                 defb 2
5795   AC66 00                 defb 0
5796   AC67 03                 defb 3
5797   AC68 00                 defb 0
5798   AC69 00                 defb 0
5799   AC6A 01                 defb 1
5800   AC6B 02                 defb 2
5801   AC6C 01                 defb 1
5802   AC6D 01                 defb 1
5803   AC6E 01                 defb 1
5804   AC6F 02                 defb 2
5805   AC70 00                 defb 0
5806   AC71 00                 defb 0
5807   AC72 00                 defb 0
5808   AC73 00                 defb 0
5809   AC74 02                 defb 2
5810   AC75 02                 defb 2
5811   AC76 02                 defb 2
5812   AC77 02                 defb 2
5813   AC78 02                 defb 2
5814   AC79 00                 defb 0
5815   AC7A 00                 defb 0
5816   AC7B 01                 defb 1
5817   AC7C 01                 defb 1
5818   AC7D 00                 defb 0
5819   AC7E 00                 defb 0
5820   AC7F 00                 defb 0
5821   AC80 00                 defb 0
5822   AC81 00                 defb 0
5823   AC82             sprgfx equ $
5824   AC82                    defb 0,0,12,0,23,0,7,192,15,224,30,112,61,168,61,36,125,36,126,32,255,252,198,252,187,4,125,250,125,247,60,15
5824   AC82 00000C00170007C00FE01E703DA83D247D247E20FFFCC6FCBB047DFA7DF73C0F
5825   ACA2                    defb 0,0,3,0,5,192,1,240,3,248,7,156,15,106,15,73,31,73,31,136,63,255,49,191,46,193,159,126,223,125,207,3
5825   ACA2 0000030005C001F003F8079C0F6A0F491F491F883FFF31BF2EC19F7EDF7DCF03
5826   ACC2                    defb 0,0,0,192,1,112,0,124,0,254,1,231,131,218,67,210,71,210,7,226,207,255,204,111,75,176,167,223,119,223,243,192
5826   ACC2 000000C00170007C00FE01E783DA43D247D207E2CFFFCC6F4BB0A7DF77DFF3C0
5827   ACE2                    defb 0,0,0,48,0,92,0,31,128,63,192,121,160,246,144,244,145,244,129,248,243,255,243,27,18,236,233,247,221,247,60,240
5827   ACE2 00000030005C001F803FC079A0F690F491F481F8F3FFF31B12ECE9F7DDF73CF0
5828   AD02                    defb 0,0,30,0,7,128,7,192,15,224,31,48,62,212,62,144,126,144,127,16,241,252,238,252,95,4,31,120,15,116,0,12
5828   AD02 00001E00078007C00FE01F303ED43E907E907F10F1FCEEFC5F041F780F74000C
5829   AD22                    defb 0,0,7,128,1,224,1,240,3,248,7,204,15,181,15,164,31,164,31,196,60,127,59,191,23,193,7,222,3,221,0,3
5829   AD22 0000078001E001F003F807CC0FB50FA41FA41FC43C7F3BBF17C107DE03DD0003
5830   AD42                    defb 0,0,1,224,0,120,0,124,0,254,1,243,67,237,3,233,7,233,7,241,207,31,206,239,69,240,129,247,64,247,192,0
5830   AD42 000001E00078007C00FE01F343ED03E907E907F1CF1FCEEF45F081F740F7C000
5831   AD62                    defb 0,0,0,120,0,30,0,31,128,63,192,124,80,251,64,250,65,250,65,252,243,199,243,187,17,124,224,125,208,61,48,0
5831   AD62 00000078001E001F803FC07C50FB40FA41FA41FCF3C7F3BB117CE07DD03D3000
5832   AD82                    defb 16,0,14,0,7,128,7,192,15,224,31,144,63,104,63,72,127,72,127,136,255,252,252,124,123,132,55,216,7,208,27,192
5832   AD82 10000E00078007C00FE01F903F683F487F487F88FFFCFC7C7B8437D807D01BC0
5833   ADA2                    defb 4,0,3,128,1,224,1,240,3,248,7,228,15,218,15,210,31,210,31,226,63,255,63,31,30,225,13,246,1,244,6,240
5833   ADA2 0400038001E001F003F807E40FDA0FD21FD21FE23FFF3F1F1EE10DF601F406F0
5834   ADC2                    defb 1,0,0,224,0,120,0,124,0,254,1,249,131,246,131,244,135,244,135,248,207,255,207,199,71,184,131,125,0,125,1,188
5834   ADC2 010000E00078007C00FE01F983F683F487F487F8CFFFCFC747B8837D007D01BC
5835   ADE2                    defb 0,64,0,56,0,30,0,31,128,63,64,126,160,253,32,253,33,253,33,254,243,255,243,241,17,238,96,223,64,31,0,111
5835   ADE2 00400038001E001F803F407EA0FD20FD21FD21FEF3FFF3F111EE60DF401F006F
5836   AE02                    defb 0,0,30,0,7,128,7,192,15,224,31,48,62,212,62,144,126,144,127,16,255,252,241,252,110,4,95,120,31,116,15,12
5836   AE02 00001E00078007C00FE01F303ED43E907E907F10FFFCF1FC6E045F781F740F0C
5837   AE22                    defb 0,0,7,128,1,224,1,240,3,248,7,204,15,181,15,164,31,164,31,196,63,255,60,127,27,129,23,222,7,221,3,195
5837   AE22 0000078001E001F003F807CC0FB50FA41FA41FC43FFF3C7F1B8117DE07DD03C3
5838   AE42                    defb 0,0,1,224,0,120,0,124,0,254,1,243,67,237,3,233,7,233,7,241,207,255,207,31,70,224,133,247,65,247,192,240
5838   AE42 000001E00078007C00FE01F343ED03E907E907F1CFFFCF1F46E085F741F7C0F0
5839   AE62                    defb 0,0,0,120,0,30,0,31,128,63,192,124,80,251,64,250,65,250,65,252,243,255,243,199,17,184,225,125,208,125,48,60
5839   AE62 00000078001E001F803FC07C50FB40FA41FA41FCF3FFF3C711B8E17DD07D303C
5840   AE82                    defb 0,0,0,48,0,232,3,224,7,240,14,120,21,188,36,188,36,190,4,126,63,255,63,99,32,221,95,190,239,190,240,60
5840   AE82 0000003000E803E007F00E7815BC24BC24BE047E3FFF3F6320DD5FBEEFBEF03C
5841   AEA2                    defb 0,0,0,12,0,58,0,248,1,252,3,158,5,111,9,47,137,47,129,31,207,255,207,216,72,55,151,239,187,239,60,15
5841   AEA2 0000000C003A00F801FC039E056F092F892F811FCFFFCFD8483797EFBBEF3C0F
5842   AEC2                    defb 0,0,0,3,128,14,0,62,0,127,128,231,193,91,194,75,226,75,224,71,243,255,51,246,210,13,229,251,238,251,207,3
5842   AEC2 00000003800E003E007F80E7C15BC24BE24BE047F3FF33F6D20DE5FBEEFBCF03
5843   AEE2                    defb 0,0,192,0,160,3,128,15,192,31,224,57,240,86,240,146,248,146,248,17,252,255,140,253,116,131,249,126,251,190,243,192
5843   AEE2 0000C000A003800FC01FE039F056F092F892F811FCFF8CFD7483F97EFBBEF3C0
5844   AF02                    defb 0,0,0,120,1,224,3,224,7,240,12,248,43,124,9,124,9,126,8,254,63,143,63,119,32,250,30,248,46,240,48,0
5844   AF02 0000007801E003E007F00CF82B7C097C097E08FE3F8F3F7720FA1EF82EF03000
5845   AF22                    defb 0,0,0,30,0,120,0,248,1,252,3,62,10,223,2,95,130,95,130,63,207,227,207,221,136,62,7,190,11,188,12,0
5845   AF22 0000001E007800F801FC033E0ADF025F825F823FCFE3CFDD883E07BE0BBC0C00
5846   AF42                    defb 0,0,128,7,0,30,0,62,0,127,128,207,194,183,192,151,224,151,224,143,243,248,115,247,162,15,129,239,2,239,3,0
5846   AF42 00008007001E003E007F80CFC2B7C097E097E08FF3F873F7A20F81EF02EF0300
5847   AF62                    defb 0,0,224,1,128,7,128,15,192,31,224,51,240,173,240,37,248,37,248,35,60,254,220,253,232,131,224,123,192,187,0,192
5847   AF62 0000E0018007800FC01FE033F0ADF025F825F8233CFEDCFDE883E07BC0BB00C0
5848   AF82                    defb 0,8,0,112,1,224,3,224,7,240,9,248,22,252,18,252,18,254,17,254,63,255,62,63,33,222,27,236,11,224,3,216
5848   AF82 0008007001E003E007F009F816FC12FC12FE11FE3FFF3E3F21DE1BEC0BE003D8
5849   AFA2                    defb 0,2,0,28,0,120,0,248,1,252,2,126,5,191,4,191,132,191,132,127,207,255,207,143,136,119,6,251,2,248,0,246
5849   AFA2 0002001C007800F801FC027E05BF04BF84BF847FCFFFCF8F887706FB02F800F6
5850   AFC2                    defb 128,0,0,7,0,30,0,62,0,127,128,159,193,111,193,47,225,47,225,31,243,255,243,227,226,29,193,190,0,190,128,61
5850   AFC2 80000007001E003E007F809FC16FC12FE12FE11FF3FFF3E3E21DC1BE00BE803D
5851   AFE2                    defb 32,0,192,1,128,7,128,15,192,31,224,39,240,91,240,75,248,75,248,71,252,255,252,248,120,135,176,111,128,47,96,15
5851   AFE2 2000C0018007800FC01FE027F05BF04BF84BF847FCFFFCF87887B06F802F600F
5852   B002                    defb 0,0,0,120,1,224,3,224,7,240,12,248,43,124,9,124,9,126,8,254,63,255,63,143,32,118,30,250,46,248,48,240
5852   B002 0000007801E003E007F00CF82B7C097C097E08FE3FFF3F8F20761EFA2EF830F0
5853   B022                    defb 0,0,0,30,0,120,0,248,1,252,3,62,10,223,2,95,130,95,130,63,207,255,207,227,136,29,135,190,11,190,12,60
5853   B022 0000001E007800F801FC033E0ADF025F825F823FCFFFCFE3881D87BE0BBE0C3C
5854   B042                    defb 0,0,128,7,0,30,0,62,0,127,128,207,194,183,192,151,224,151,224,143,243,255,243,248,98,7,161,239,130,239,3,15
5854   B042 00008007001E003E007F80CFC2B7C097E097E08FF3FFF3F86207A1EF82EF030F
5855   B062                    defb 0,0,224,1,128,7,128,15,192,31,224,51,240,173,240,37,248,37,248,35,252,255,60,254,216,129,232,123,224,187,192,195
5855   B062 0000E0018007800FC01FE033F0ADF025F825F823FCFF3CFED881E87BE0BBC0C3
5856   B082                    defb 3,192,5,160,14,112,14,240,31,248,31,248,63,252,63,252,63,252,127,254,127,235,23,87,106,173,245,91,247,224,240,0
5856   B082 03C005A00E700EF01FF81FF83FFC3FFC3FFC7FFE7FEB17576AADF55BF7E0F000
5857   B0A2                    defb 0,240,1,104,3,156,3,188,7,254,7,254,15,255,15,255,15,255,159,255,223,250,197,213,90,171,253,86,61,248,60,0
5857   B0A2 00F00168039C03BC07FE07FE0FFF0FFF0FFF9FFFDFFAC5D55AABFD563DF83C00
5858   B0C2                    defb 0,60,0,90,0,231,0,239,129,255,129,255,195,255,195,255,195,255,231,255,183,254,113,117,214,170,191,85,15,126,15,0
5858   B0C2 003C005A00E700EF81FF81FFC3FFC3FFC3FFE7FFB7FE7175D6AABF550F7E0F00
5859   B0E2                    defb 0,15,128,22,192,57,192,59,224,127,224,127,240,255,240,255,240,255,249,255,173,255,92,93,181,170,111,213,131,223,3,192
5859   B0E2 000F8016C039C03BE07FE07FF0FFF0FFF0FFF9FFADFF5C5DB5AA6FD583DF03C0
5860   B102                    defb 3,192,5,160,13,112,12,240,31,248,31,248,63,252,63,252,63,252,127,254,111,238,151,215,234,173,245,91,103,231,0,0
5860   B102 03C005A00D700CF01FF81FF83FFC3FFC3FFC7FFE6FEE97D7EAADF55B67E70000
5861   B122                    defb 0,240,1,104,3,92,3,60,7,254,7,254,15,255,15,255,15,255,159,255,155,251,229,245,122,171,253,86,217,249,0,0
5861   B122 00F00168035C033C07FE07FE0FFF0FFF0FFF9FFF9BFBE5F57AABFD56D9F90000
5862   B142                    defb 0,60,0,90,0,215,0,207,129,255,129,255,195,255,195,255,195,255,231,255,230,254,121,125,222,170,191,85,118,126,0,0
5862   B142 003C005A00D700CF81FF81FFC3FFC3FFC3FFE7FFE6FE797DDEAABF55767E0000
5863   B162                    defb 0,15,128,22,192,53,192,51,224,127,224,127,240,255,240,255,240,255,249,255,185,191,94,95,183,170,111,213,157,159,0,0
5863   B162 000F8016C035C033E07FE07FF0FFF0FFF0FFF9FFB9BF5E5FB7AA6FD59D9F0000
5864   B182                    defb 3,192,5,160,14,112,14,240,31,248,31,248,63,252,63,252,63,252,127,254,239,254,213,216,170,166,213,79,7,239,0,15
5864   B182 03C005A00E700EF01FF81FF83FFC3FFC3FFC7FFEEFFED5D8AAA6D54F07EF000F
5865   B1A2                    defb 0,240,1,104,3,156,3,188,7,254,7,254,15,255,15,255,15,255,159,255,187,255,53,118,170,169,245,83,193,251,192,3
5865   B1A2 00F00168039C03BC07FE07FE0FFF0FFF0FFF9FFFBBFF3576AAA9F553C1FBC003
5866   B1C2                    defb 0,60,0,90,0,231,0,239,129,255,129,255,195,255,195,255,195,255,231,255,238,255,141,93,106,170,253,84,240,126,240,0
5866   B1C2 003C005A00E700EF81FF81FFC3FFC3FFC3FFE7FFEEFF8D5D6AAAFD54F07EF000
5867   B1E2                    defb 0,15,128,22,192,57,192,59,224,127,224,127,240,255,240,255,240,255,249,255,251,191,99,87,154,170,63,85,188,31,60,0
5867   B1E2 000F8016C039C03BE07FE07FF0FFF0FFF0FFF9FFFBBF63579AAA3F55BC1F3C00
5868   B202                    defb 3,192,5,160,14,176,15,48,31,248,31,248,63,252,63,252,63,252,127,254,111,238,151,215,234,173,245,91,103,231,0,0
5868   B202 03C005A00EB00F301FF81FF83FFC3FFC3FFC7FFE6FEE97D7EAADF55B67E70000
5869   B222                    defb 0,240,1,104,3,172,3,204,7,254,7,254,15,255,15,255,15,255,159,255,155,251,229,245,122,171,253,86,217,249,0,0
5869   B222 00F0016803AC03CC07FE07FE0FFF0FFF0FFF9FFF9BFBE5F57AABFD56D9F90000
5870   B242                    defb 0,60,0,90,0,235,0,243,129,255,129,255,195,255,195,255,195,255,231,255,230,254,121,125,222,170,191,85,118,126,0,0
5870   B242 003C005A00EB00F381FF81FFC3FFC3FFC3FFE7FFE6FE797DDEAABF55767E0000
5871   B262                    defb 0,15,128,22,192,58,192,60,224,127,224,127,240,255,240,255,240,255,249,255,185,191,94,95,183,170,111,213,157,159,0,0
5871   B262 000F8016C03AC03CE07FE07FF0FFF0FFF0FFF9FFB9BF5E5FB7AA6FD59D9F0000
5872   B282                    defb 102,102,255,255,128,1,179,205,189,189,191,253,183,237,179,205,179,205,179,205,191,253,191,253,166,101,128,1,255,255,102,102
5872   B282 6666FFFF8001B3CDBDBDBFFDB7EDB3CDB3CDB3CDBFFDBFFDA6658001FFFF6666
5873   B2A2                    defb 153,153,255,255,96,0,108,243,111,111,111,255,109,251,108,243,108,243,108,243,111,255,111,255,105,153,96,0,255,255,153,153
5873   B2A2 9999FFFF60006CF36F6F6FFF6DFB6CF36CF36CF36FFF6FFF69996000FFFF9999
5874   B2C2                    defb 102,102,255,255,24,0,219,60,219,219,219,255,219,126,219,60,219,60,219,60,219,255,219,255,90,102,24,0,255,255,102,102
5874   B2C2 6666FFFF1800DB3CDBDBDBFFDB7EDB3CDB3CDB3CDBFFDBFF5A661800FFFF6666
5875   B2E2                    defb 153,153,255,255,6,0,54,207,246,246,246,255,182,223,54,207,54,207,54,207,246,255,246,255,150,153,6,0,255,255,153,153
5875   B2E2 9999FFFF060036CFF6F6F6FFB6DF36CF36CF36CFF6FFF6FF96990600FFFF9999
5876   B302                    defb 102,102,255,255,128,1,191,253,179,205,189,189,191,253,183,237,179,205,179,205,191,253,166,101,160,5,128,1,255,255,102,102
5876   B302 6666FFFF8001BFFDB3CDBDBDBFFDB7EDB3CDB3CDBFFDA665A0058001FFFF6666
5877   B322                    defb 153,153,255,255,96,0,111,255,108,243,111,111,111,255,109,251,108,243,108,243,111,255,105,153,104,1,96,0,255,255,153,153
5877   B322 9999FFFF60006FFF6CF36F6F6FFF6DFB6CF36CF36FFF699968016000FFFF9999
5878   B342                    defb 102,102,255,255,24,0,219,255,219,60,219,219,219,255,219,126,219,60,219,60,219,255,90,102,90,0,24,0,255,255,102,102
5878   B342 6666FFFF1800DBFFDB3CDBDBDBFFDB7EDB3CDB3CDBFF5A665A001800FFFF6666
5879   B362                    defb 153,153,255,255,6,0,246,255,54,207,246,246,246,255,182,223,54,207,54,207,246,255,150,153,22,128,6,0,255,255,153,153
5879   B362 9999FFFF0600F6FF36CFF6F6F6FFB6DF36CF36CFF6FF969916800600FFFF9999
5880   B382                    defb 102,102,255,255,128,1,191,253,183,237,187,221,189,189,167,229,187,221,191,253,182,109,160,5,160,5,128,1,255,255,102,102
5880   B382 6666FFFF8001BFFDB7EDBBDDBDBDA7E5BBDDBFFDB66DA005A0058001FFFF6666
5881   B3A2                    defb 153,153,255,255,96,0,111,255,109,251,110,247,111,111,105,249,110,247,111,255,109,155,104,1,104,1,96,0,255,255,153,153
5881   B3A2 9999FFFF60006FFF6DFB6EF76F6F69F96EF76FFF6D9B680168016000FFFF9999
5882   B3C2                    defb 102,102,255,255,24,0,219,255,219,126,219,189,219,219,90,126,219,189,219,255,219,102,90,0,90,0,24,0,255,255,102,102
5882   B3C2 6666FFFF1800DBFFDB7EDBBDDBDB5A7EDBBDDBFFDB665A005A001800FFFF6666
5883   B3E2                    defb 153,153,255,255,6,0,246,255,182,223,118,239,246,246,150,159,118,239,246,255,182,217,22,128,22,128,6,0,255,255,153,153
5883   B3E2 9999FFFF0600F6FFB6DF76EFF6F6969F76EFF6FFB6D9168016800600FFFF9999
5884   B402                    defb 48,0,48,0,31,251,56,31,55,236,47,244,47,244,47,52,46,84,46,20,47,52,47,244,240,12,223,248,0,12,0,12
5884   B402 300030001FFB381F37EC2FF42FF42F342E542E142F342FF4F00CDFF8000C000C
5885   B422                    defb 12,0,12,0,199,254,206,7,13,251,11,253,11,253,11,205,11,149,11,133,11,205,11,253,60,3,55,254,0,3,0,3
5885   B422 0C000C00C7FECE070DFB0BFD0BFD0BCD0B950B850BCD0BFD3C0337FE00030003
5886   B442                    defb 3,0,3,0,177,255,243,129,195,126,66,255,66,255,66,243,66,229,66,225,66,243,66,255,207,0,141,255,192,0,192,0
5886   B442 03000300B1FFF381C37E42FF42FF42F342E542E142F342FFCF008DFFC000C000
5887   B462                    defb 0,192,0,192,236,127,124,224,176,223,208,191,208,191,208,188,80,185,80,184,208,188,208,191,51,192,227,127,48,0,48,0
5887   B462 00C000C0EC7F7CE0B0DFD0BFD0BFD0BC50B950B8D0BCD0BF33C0E37F30003000
5888   B482                    defb 3,0,3,0,31,248,56,28,55,236,47,244,47,247,46,119,236,180,236,52,46,116,47,244,48,12,31,248,0,192,0,192
5888   B482 030003001FF8381C37EC2FF42FF72E77ECB4EC342E742FF4300C1FF800C000C0
5889   B4A2                    defb 0,192,0,192,7,254,14,7,13,251,11,253,203,253,203,157,59,45,59,13,11,157,11,253,12,3,7,254,0,48,0,48
5889   B4A2 00C000C007FE0E070DFB0BFDCBFDCB9D3B2D3B0D0B9D0BFD0C0307FE00300030
5890   B4C2                    defb 0,48,0,48,129,255,195,129,195,126,66,255,114,255,114,231,78,203,78,195,66,231,66,255,195,0,129,255,0,12,0,12
5890   B4C2 0030003081FFC381C37E42FF72FF72E74ECB4EC342E742FFC30081FF000C000C
5891   B4E2                    defb 0,12,0,12,224,127,112,224,176,223,208,191,220,191,220,185,211,178,211,176,208,185,208,191,48,192,224,127,0,3,0,3
5891   B4E2 000C000CE07F70E0B0DFD0BFDCBFDCB9D3B2D3B0D0B9D0BF30C0E07F00030003
5892   B502                    defb 0,48,0,48,31,248,56,28,247,236,239,244,47,244,44,244,41,116,40,116,44,247,47,247,48,12,31,248,12,0,12,0
5892   B502 003000301FF8381CF7ECEFF42FF42CF4297428742CF72FF7300C1FF80C000C00
5893   B522                    defb 0,12,0,12,7,254,14,7,61,251,59,253,11,253,11,61,10,93,10,29,203,61,203,253,12,3,7,254,3,0,3,0
5893   B522 000C000C07FE0E073DFB3BFD0BFD0B3D0A5D0A1DCB3DCBFD0C0307FE03000300
5894   B542                    defb 0,3,0,3,129,255,195,129,207,126,78,255,66,255,66,207,66,151,66,135,114,207,114,255,195,0,129,255,0,192,0,192
5894   B542 0003000381FFC381CF7E4EFF42FF42CF4297428772CF72FFC30081FF00C000C0
5895   B562                    defb 192,0,192,0,224,127,112,224,179,223,211,191,208,191,208,179,208,165,208,161,220,179,220,191,48,192,224,127,0,48,0,48
5895   B562 C000C000E07F70E0B3DFD3BFD0BFD0B3D0A5D0A1DCB3DCBF30C0E07F00300030
5896   B582                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,85,255,255
5896   B582 000000000000000000000000000000000000000000000000000000005555FFFF
5897   B5A2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,85,255,255
5897   B5A2 000000000000000000000000000000000000000000000000000000005555FFFF
5898   B5C2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,85,255,255
5898   B5C2 000000000000000000000000000000000000000000000000000000005555FFFF
5899   B5E2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,85,255,255
5899   B5E2 000000000000000000000000000000000000000000000000000000005555FFFF
5900   B602                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,85,0,0,0,0,170,170,255,255
5900   B602 00000000000000000000000000000000000000000000555500000000AAAAFFFF
5901   B622                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,85,0,0,0,0,170,170,255,255
5901   B622 00000000000000000000000000000000000000000000555500000000AAAAFFFF
5902   B642                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,85,0,0,0,0,170,170,255,255
5902   B642 00000000000000000000000000000000000000000000555500000000AAAAFFFF
5903   B662                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,85,0,0,0,0,170,170,255,255
5903   B662 00000000000000000000000000000000000000000000555500000000AAAAFFFF
5904   B682                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,170,0,0,0,0,0,0,0,0,0,0,85,85,255,255
5904   B682 00000000000000000000000000000000AAAA000000000000000000005555FFFF
5905   B6A2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,170,0,0,0,0,0,0,0,0,0,0,85,85,255,255
5905   B6A2 00000000000000000000000000000000AAAA000000000000000000005555FFFF
5906   B6C2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,170,0,0,0,0,0,0,0,0,0,0,85,85,255,255
5906   B6C2 00000000000000000000000000000000AAAA000000000000000000005555FFFF
5907   B6E2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,170,0,0,0,0,0,0,0,0,0,0,85,85,255,255
5907   B6E2 00000000000000000000000000000000AAAA000000000000000000005555FFFF
5908   B702                    defb 0,0,0,0,0,0,0,0,0,0,85,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,170,255,255
5908   B702 00000000000000000000555500000000000000000000000000000000AAAAFFFF
5909   B722                    defb 0,0,0,0,0,0,0,0,0,0,85,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,170,255,255
5909   B722 00000000000000000000555500000000000000000000000000000000AAAAFFFF
5910   B742                    defb 0,0,0,0,0,0,0,0,0,0,85,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,170,255,255
5910   B742 00000000000000000000555500000000000000000000000000000000AAAAFFFF
5911   B762                    defb 0,0,0,0,0,0,0,0,0,0,85,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,170,255,255
5911   B762 00000000000000000000555500000000000000000000000000000000AAAAFFFF
5912   B782                    defb 0,0,56,28,103,230,92,58,91,218,58,92,58,92,60,60,63,252,56,28,59,220,91,218,92,58,103,230,56,28,0,0
5912   B782 0000381C67E65C3A5BDA3A5C3A5C3C3C3FFC381C3BDC5BDA5C3A67E6381C0000
5913   B7A2                    defb 0,0,14,7,153,249,151,14,150,246,14,151,14,151,15,15,15,255,14,7,14,247,150,246,151,14,153,249,14,7,0,0
5913   B7A2 00000E0799F9970E96F60E970E970F0F0FFF0E070EF796F6970E99F90E070000
5914   B7C2                    defb 0,0,195,129,102,126,165,195,165,189,195,165,195,165,195,195,195,255,195,129,195,189,165,189,165,195,102,126,195,129,0,0
5914   B7C2 0000C381667EA5C3A5BDC3A5C3A5C3C3C3FFC381C3BDA5BDA5C3667EC3810000
5915   B7E2                    defb 0,0,112,224,153,159,233,112,105,111,112,233,112,233,240,240,240,255,112,224,112,239,105,111,233,112,153,159,112,224,0,0
5915   B7E2 000070E0999FE970696F70E970E9F0F0F0FF70E070EF696FE970999F70E00000
5916   B802                    defb 6,0,24,0,7,224,28,58,27,218,59,29,59,29,60,60,63,252,191,252,184,28,91,216,92,56,7,224,0,24,0,96
5916   B802 0600180007E01C3A1BDA3B1D3B1D3C3C3FFCBFFCB81C5BD85C3807E000180060
5917   B822                    defb 1,128,6,0,1,248,135,14,134,246,78,199,78,199,15,15,15,255,47,255,46,7,22,246,23,14,1,248,0,6,0,24
5917   B822 0180060001F8870E86F64EC74EC70F0F0FFF2FFF2E0716F6170E01F800060018
5918   B842                    defb 0,96,1,128,0,126,161,195,161,189,211,177,211,177,195,195,195,255,203,255,203,129,133,189,133,195,0,126,128,1,0,6
5918   B842 00600180007EA1C3A1BDD3B1D3B1C3C3C3FFCBFFCB8185BD85C3007E80010006
5919   B862                    defb 0,24,0,96,128,31,232,112,104,111,116,236,116,236,240,240,240,255,242,255,114,224,97,111,225,112,128,31,96,0,128,1
5919   B862 00180060801FE870686F74EC74ECF0F0F0FFF2FF72E0616FE170801F60008001
5920   B882                    defb 1,224,0,0,7,224,28,56,27,216,184,220,184,220,188,61,191,253,63,253,59,221,28,56,31,248,7,224,0,0,7,128
5920   B882 01E0000007E01C381BD8B8DCB8DCBC3DBFFD3FFD3BDD1C381FF807E000000780
5921   B8A2                    defb 0,120,0,0,1,248,7,14,6,246,46,55,46,55,111,15,111,255,79,255,78,247,7,14,7,254,1,248,0,0,1,224
5921   B8A2 0078000001F8070E06F62E372E376F0F6FFF4FFF4EF7070E07FE01F8000001E0
5922   B8C2                    defb 0,30,0,0,0,126,129,195,129,189,203,141,203,141,219,195,219,255,211,255,211,189,129,195,129,255,0,126,0,0,0,120
5922   B8C2 001E0000007E81C381BDCB8DCB8DDBC3DBFFD3FFD3BD81C381FF007E00000078
5923   B8E2                    defb 128,7,0,0,128,31,224,112,96,111,114,227,114,227,246,240,246,255,244,255,116,239,224,112,224,127,128,31,0,0,0,30
5923   B8E2 80070000801FE070606F72E372E3F6F0F6FFF4FF74EFE070E07F801F0000001E
5924   B902                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255
5924   B902 000000000000000000000000000000000000000000000000000000000000FFFF
5925   B922                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255
5925   B922 000000000000000000000000000000000000000000000000000000000000FFFF
5926   B942                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255
5926   B942 000000000000000000000000000000000000000000000000000000000000FFFF
5927   B962                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255
5927   B962 000000000000000000000000000000000000000000000000000000000000FFFF
5928   B982                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,222,255,255
5928   B982 000000000000000000000000000000000000000000000000000000007FDEFFFF
5929   B9A2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,159,247,255,255
5929   B9A2 000000000000000000000000000000000000000000000000000000009FF7FFFF
5930   B9C2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,231,253,255,255
5930   B9C2 00000000000000000000000000000000000000000000000000000000E7FDFFFF
5931   B9E2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,121,255,255,255
5931   B9E2 0000000000000000000000000000000000000000000000000000000079FFFFFF
5932   BA02                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,128,95,222,255,255
5932   BA02 00000000000000000000000000000000000000000000000000003F805FDEFFFF
5933   BA22                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,224,151,247,255,255
5933   BA22 00000000000000000000000000000000000000000000000000000FE097F7FFFF
5934   BA42                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,248,229,253,255,255
5934   BA42 000000000000000000000000000000000000000000000000000003F8E5FDFFFF
5935   BA62                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,121,127,255,255
5935   BA62 000000000000000000000000000000000000000000000000000000FE797FFFFF
5936   BA82                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,128,79,204,127,222,255,255
5936   BA82 0000000000000000000000000000000000000000000000003F804FCC7FDEFFFF
5937   BAA2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,224,19,243,159,247,255,255
5937   BAA2 0000000000000000000000000000000000000000000000000FE013F39FF7FFFF
5938   BAC2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,248,196,252,231,253,255,255
5938   BAC2 00000000000000000000000000000000000000000000000003F8C4FCE7FDFFFF
5939   BAE2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,49,63,121,255,255,255
5939   BAE2 00000000000000000000000000000000000000000000000000FE313F79FFFFFF
5940   BB02                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,63,128,79,204,79,214,63,158,255,255
5940   BB02 00000000000000000000000000000000000000000E003F804FCC4FD63F9EFFFF
5941   BB22                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,128,15,224,19,243,147,245,143,231,255,255
5941   BB22 000000000000000000000000000000000000000003800FE013F393F58FE7FFFF
5942   BB42                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,3,248,196,252,100,253,227,249,255,255
5942   BB42 000000000000000000000000000000000000000000E003F8C4FC64FDE3F9FFFF
5943   BB62                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,254,49,63,89,63,120,254,255,255
5943   BB62 0000000000000000000000000000000000000000003800FE313F593F78FEFFFF
5944   BB82                    defb 0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,128,17,128,145,32,72,64,72,204,109,214,127,222,63,140,255,255
5944   BB82 0000000000000000000000008000008011809120484048CC6DD67FDE3F8CFFFF
5945   BBA2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,32,4,96,36,72,18,16,18,51,155,117,159,247,15,227,255,255
5945   BBA2 0000000000000000000000002000002004602448121012339B759FF70FE3FFFF
5946   BBC2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,8,1,24,9,18,4,132,196,140,102,221,231,253,195,248,255,255
5946   BBC2 00000000000000000000000008000008011809120484C48C66DDE7FDC3F8FFFF
5947   BBE2                    defb 0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,70,130,68,1,33,49,35,89,183,121,255,48,254,255,255
5947   BBE2 00000000000000000000000002000002004682440121312359B779FF30FEFFFF
5948   BC02                    defb 0,0,0,0,128,0,0,0,0,64,0,64,0,0,0,12,0,4,0,33,0,17,0,19,128,90,113,158,63,140,255,255
5948   BC02 0000000080000000004000400000000C0004002100110013805A719E3F8CFFFF
5949   BC22                    defb 0,0,0,0,32,0,0,0,0,16,0,16,0,0,0,3,0,1,64,8,64,4,192,4,160,22,156,103,15,227,255,255
5949   BC22 00000000200000000010001000000003000140084004C004A0169C670FE3FFFF
5950   BC42                    defb 0,0,0,0,8,0,0,0,0,4,0,4,0,0,192,0,64,0,16,2,16,1,48,1,168,5,231,25,195,248,255,255
5950   BC42 0000000008000000000400040000C0004000100210013001A805E719C3F8FFFF
5951   BC62                    defb 0,0,0,0,2,0,0,0,0,1,0,1,0,0,48,0,16,0,132,0,68,0,76,0,106,1,121,198,48,254,255,255
5951   BC62 000000000200000000010001000030001000840044004C006A0179C630FEFFFF
5952   BC82                    defb 0,0,0,0,0,0,0,0,0,4,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,19,127,222,255,255
5952   BC82 000000000000000000040008000000000000000000000000002000137FDEFFFF
5953   BCA2                    defb 0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,8,192,4,159,247,255,255
5953   BCA2 0000000000000000000100020000000000000000000000000008C0049FF7FFFF
5954   BCC2                    defb 0,0,0,0,0,0,0,0,64,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,48,1,231,253,255,255
5954   BCC2 00000000000000004000800000000000000000000000000000023001E7FDFFFF
5955   BCE2                    defb 0,0,0,0,0,0,0,0,16,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,76,0,121,255,255,255
5955   BCE2 00000000000000001000200000000000000000000000000080004C0079FFFFFF
5956   BD02                    defb 127,254,192,3,160,153,176,77,152,37,172,1,150,65,171,33,181,145,186,201,189,101,158,177,175,89,183,173,192,3,127,254
5956   BD02 7FFEC003A099B04D9825AC019641AB21B591BAC9BD659EB1AF59B7ADC0037FFE
5957   BD22                    defb 159,255,240,0,104,38,108,19,102,9,107,0,101,144,106,200,109,100,110,178,111,89,103,172,107,214,109,235,240,0,159,255
5957   BD22 9FFFF00068266C1366096B0065906AC86D646EB26F5967AC6BD66DEBF0009FFF
5958   BD42                    defb 231,255,60,0,154,9,219,4,89,130,26,192,25,100,26,178,27,89,155,172,91,214,25,235,154,245,219,122,60,0,231,255
5958   BD42 E7FF3C009A09DB0459821AC019641AB21B599BAC5BD619EB9AF5DB7A3C00E7FF
5959   BD62                    defb 249,255,15,0,102,130,54,193,150,96,6,176,6,89,134,172,70,214,38,235,150,245,198,122,102,189,182,222,15,0,249,255
5959   BD62 F9FF0F00668236C1966006B0065986AC46D626EB96F5C67A66BDB6DE0F00F9FF
5960   BD82                    defb 0,0,0,0,0,8,0,0,0,8,0,4,0,8,0,4,0,2,0,5,0,2,0,33,0,66,0,36,0,66,0,36
5960   BD82 0000000000080000000800040008000400020005000200210042002400420024
5961   BDA2                    defb 0,0,0,0,0,2,0,0,0,2,0,1,0,2,0,1,128,0,64,1,128,0,64,8,128,16,0,9,128,16,0,9
5961   BDA2 0000000000020000000200010002000180004001800040088010000980100009
5962   BDC2                    defb 0,0,0,0,128,0,0,0,128,0,64,0,128,0,64,0,32,0,80,0,32,0,16,2,32,4,64,2,32,4,64,2
5962   BDC2 0000000080000000800040008000400020005000200010022004400220044002
5963   BDE2                    defb 0,0,0,0,32,0,0,0,32,0,16,0,32,0,16,0,8,0,20,0,8,0,132,0,8,1,144,0,8,1,144,0
5963   BDE2 0000000020000000200010002000100008001400080084000801900008019000
5964   BE02                    defb 0,0,0,0,0,2,0,0,0,2,0,4,0,2,0,4,0,10,0,84,0,8,0,84,0,136,0,68,0,34,0,68
5964   BE02 00000000000200000002000400020004000A0054000800540088004400220044
5965   BE22                    defb 0,0,0,0,128,0,0,0,128,0,0,1,128,0,0,1,128,2,0,21,0,2,0,21,0,34,0,17,128,8,0,17
5965   BE22 0000000080000000800000018000000180020015000200150022001180080011
5966   BE42                    defb 0,0,0,0,32,0,0,0,32,0,64,0,32,0,64,0,160,0,64,5,128,0,64,5,128,8,64,4,32,2,64,4
5966   BE42 00000000200000002000400020004000A0004005800040058008400420024004
5967   BE62                    defb 0,0,0,0,8,0,0,0,8,0,16,0,8,0,16,0,40,0,80,1,32,0,80,1,32,2,16,1,136,0,16,1
5967   BE62 0000000008000000080010000800100028005001200050012002100188001001
5968   BE82                    defb 3,128,3,128,1,128,3,128,3,128,3,128,3,0,3,0,3,128,3,128,3,128,3,128,1,128,3,128,3,128,3,128
5968   BE82 0380038001800380038003800300030003800380038003800180038003800380
5969   BEA2                    defb 0,224,0,224,0,96,0,224,0,224,0,224,0,192,0,192,0,224,0,224,0,224,0,224,0,96,0,224,0,224,0,224
5969   BEA2 00E000E0006000E000E000E000C000C000E000E000E000E0006000E000E000E0
5970   BEC2                    defb 0,56,0,56,0,24,0,56,0,56,0,56,0,48,0,48,0,56,0,56,0,56,0,56,0,24,0,56,0,56,0,56
5970   BEC2 0038003800180038003800380030003000380038003800380018003800380038
5971   BEE2                    defb 0,14,0,14,0,6,0,14,0,14,0,14,0,12,0,12,0,14,0,14,0,14,0,14,0,6,0,14,0,14,0,14
5971   BEE2 000E000E0006000E000E000E000C000C000E000E000E000E0006000E000E000E
5972   BF02                    defb 7,224,7,224,7,224,3,224,3,224,7,224,7,224,7,224,7,224,7,224,7,224,7,224,7,224,7,192,7,224,7,224
5972   BF02 07E007E007E003E003E007E007E007E007E007E007E007E007E007C007E007E0
5973   BF22                    defb 1,248,1,248,1,248,0,248,0,248,1,248,1,248,1,248,1,248,1,248,1,248,1,248,1,248,1,240,1,248,1,248
5973   BF22 01F801F801F800F800F801F801F801F801F801F801F801F801F801F001F801F8
5974   BF42                    defb 0,126,0,126,0,126,0,62,0,62,0,126,0,126,0,126,0,126,0,126,0,126,0,126,0,126,0,124,0,126,0,126
5974   BF42 007E007E007E003E003E007E007E007E007E007E007E007E007E007C007E007E
5975   BF62                    defb 128,31,128,31,128,31,128,15,128,15,128,31,128,31,128,31,128,31,128,31,128,31,128,31,128,31,0,31,128,31,128,31
5975   BF62 801F801F801F800F800F801F801F801F801F801F801F801F801F001F801F801F
5976   BF82                    defb 31,248,31,240,31,240,31,248,31,248,15,248,31,248,31,248,31,248,31,240,31,248,31,248,15,248,15,248,31,248,31,248
5976   BF82 1FF81FF01FF01FF81FF80FF81FF81FF81FF81FF01FF81FF80FF80FF81FF81FF8
5977   BFA2                    defb 7,254,7,252,7,252,7,254,7,254,3,254,7,254,7,254,7,254,7,252,7,254,7,254,3,254,3,254,7,254,7,254
5977   BFA2 07FE07FC07FC07FE07FE03FE07FE07FE07FE07FC07FE07FE03FE03FE07FE07FE
5978   BFC2                    defb 129,255,1,255,1,255,129,255,129,255,128,255,129,255,129,255,129,255,1,255,129,255,129,255,128,255,128,255,129,255,129,255
5978   BFC2 81FF01FF01FF81FF81FF80FF81FF81FF81FF01FF81FF81FF80FF80FF81FF81FF
5979   BFE2                    defb 224,127,192,127,192,127,224,127,224,127,224,63,224,127,224,127,224,127,192,127,224,127,224,127,224,63,224,63,224,127,224,127
5979   BFE2 E07FC07FC07FE07FE07FE03FE07FE07FE07FC07FE07FE07FE03FE03FE07FE07F
5980   C002             frmlst equ $
5981   C002 00 04              defb 0,4
5982   C004 04 04              defb 4,4
5983   C006 08 04              defb 8,4
5984   C008 0C 03              defb 12,3
5985   C00A 0F 03              defb 15,3
5986   C00C 12 04              defb 18,4
5987   C00E 16 03              defb 22,3
5988   C010 19 08              defb 25,8
5989   C012 21 01              defb 33,1
5990   C014 22 02              defb 34,2
5991   C016 24 03 27 00        defb 36,3,39,0
5992   C01A             scdat  equ $
5993   C01A                    defw 425,471,436,372,323,381,312,298,276,343,255,305,230,299,292,268,350,320,349,203,222,352,366,303,202,225
5993   C01A A901D701B401740143017D0138012A0114015701FF003101E6002B0124010C01
5993   C03A 5E0140015D01CB00DE0060016E012F01CA00E100
5994   C04E EC 00 7E 01        defw 236,382
5995   C052                    defb 2,2,1,1,1,3,1,3,3,2,255,1,4,2,2,1,1,6,2,1,1,1,2,1,3,3,2,1,14,16,16,15,1
5995   C052 02020101010301030302FF01040202010106020101010201030302010E10100F
5995   C072 01
5996   C073                    defb 255,3,4,1,14,16,16,0,16,0,16,255,0,5,15,1,2,8,3,2,0,17,16,0,15,2,3,1,14,16,0,17,16
5996   C073 FF0304010E101000100010FF00050F0102080302001110000F0203010E100011
5996   C093 10
5997   C094                    defb 74,16,0,75,255,0,6,16,15,1,3,0,0,0,17,0,0,15,1,14,0,75,0,0,16,0,17,255,0,7,74,16,76
5997   C094 4A10004BFF0006100F01030000001100000F010E004B0000100011FF00074A10
5997   C0B4 4C
5998   C0B5                    defb 2,2,255,0,7,16,255,0,5,17,255,0,10,17,0,1,3,255,13,4,0,0,0,16,76,255,0,17,1,1,1,14,255,0,4
5998   C0B5 0202FF000710FF000511FF000A11000103FF0D04000000104CFF00110101010E
5998   C0D5 FF0004
5999   C0D8                    defb 74,16,255,0,18,2,1,1,255,0,6,17,255,0,8,13,13,255,0,7,4,24,25,1,255,0,8,13,13,13,21,22,0,0
5999   C0D8 4A10FF0012020101FF000611FF00080D0DFF000704181901FF00080D0D0D1516
5999   C0F8 0000
6000   C0FA                    defb 2,1,16,255,0,7,28,28,1,255,0,8,17,0,0,21,22,0,0,1,3,2,0,0,0,19,19,0,0,28,28,1,13,13,13
6000   C0FA 020110FF00071C1C01FF000811000015160000010302000000131300001C1C01
6000   C11A 0D0D0D
6001   C11D                    defb 255,0,8,21,22,0,0,1,3,1,0,0,0,13,13,13,4,24,25,3,8,1,1,13,13,255,0,6,21,22,0,0,2
6001   C11D FF0008151600000103010000000D0D0D041819030801010D0DFF000615160000
6001   C13D 02
6002   C13E                    defb 3,1,255,0,5,16,15,7,3,2,14,17,16,255,0,8,21,22,0,13,1,3,1,255,0,5,17,0,15,1,1,0,0
6002   C13E 0301FF0005100F0703020E1110FF00081516000D010301FF000511000F010100
6002   C15E 00
6003   C15F                    defb 17,255,0,5,255,13,6,2,1,3,2,255,0,8,1,1,255,0,8,15,1,2,5,1,2,1,3,1,14,255,0,8,1
6003   C15F 11FF0005FF0D0602010302FF00080101FF00080F01020501020103010EFF0008
6003   C17F 01
6004   C180                    defb 2,255,0,10,6,1,24,25,18,6,18,9,10,255,0,7,2,1,255,0,5,13,13,13,6,0,15,2,77,78,1,14,0,0
6004   C180 02FF000A06011819120612090AFF00070201FF00050D0D0D06000F024D4E010E
6004   C1A0 0000
6005   C1A2                    defb 11,255,0,4,19,19,0,1,1,255,0,4,13,7,2,1,13,54,54,2,77,78,2,18,10,0,11,255,0,4,19,19,13
6005   C1A2 0BFF00041313000101FF00040D0702010D3636024D4E02120A000BFF00041313
6005   C1C2 0D
6006   C1C3                    defb 1,1,0,13,13,13,1,2,3,3,2,54,54,2,24,25,1,0,11,0,11,255,0,4,13,13,5,3,1,13,1,2,1
6006   C1C3 0101000D0D0D0102030302363602181901000B000BFF00040D0D0503010D0102
6006   C1E3 01
6007   C1E4                    defb 3,3,3,2,2,0,0,1,77,78,1,0,11,0,11,0,0,13,13,1,3,3,1
6007   C1E4 03030302020000014D4E01000B000B00000D0D01030301
6008   C1FB                    defb 255,3,5,1,3,1,1,17,0,0,1,77,78,2,0,11,0,11,0,0,6,1,1,8,255,3,4,1,23,23,3,3,3
6008   C1FB FF030501030101110000014D4E02000B000B000006010108FF03040117170303
6008   C21B 03
6009   C21C                    defb 2,16,76,17,2,24,25,1,0,12,18,11,0,0,0,2,1,3,23,23,1,3,3,3,23,23,23,3,1,16,75,1,3
6009   C21C 02104C1102181901000C120B0000000201031717010303031717170301104B01
6009   C23C 03
6010   C23D                    defb 12,10,1,0,0,0,11,0,0,0,2,3,23,23,0,1,2,1,1,23,0,23,1,3,1,16,2,3,3,11,14,0,0,0
6010   C23D 0C0A010000000B000000020317170001020101170017010301100203030B0E00
6010   C25D 0000
6011   C25F                    defb 11,0,0,0,1,3,23,255,0,4,15,1,2,23,23,23,3,1,2,2,3,1,11,255,0,4,11,13,13,13,2,3,23,23
6011   C25F 0B000000010317FF00040F01021717170301020203010BFF00040B0D0D0D0203
6011   C27F 1717
6012   C281                    defb 255,0,4,17,1,3,3,23,2,3,3,1,3,1,12,9,9,9,18,13,2,1,1,3,23,23,255,0,6,15,1,255,3,6
6012   C281 FF000411010303170203030103010C090909120D020101031717FF00060F01FF
6012   C2A1 0306
6013   C2A3                    defb 7,2,255,0,5,1,1,3,3,23,0,0,23,255,0,6,19,19,3,3,3,1,1,1,14,255,0,5,2,3,3,23,0
6013   C2A3 0702FF00050101030317000017FF000613130303030101010EFF000502030317
6013   C2C3 00
6014   C2C4                    defb 54,54,255,0,9,1,1,1,14,17,16,76,255,0,5,1,3,23,0,23,54,54,23,0,255,13,5,8,1,1,0,16,0,0
6014   C2C4 3636FF00090101010E11104CFF0005010317001736361700FF0D050801010010
6014   C2E4 0000
6015   C2E6                    defb 16,255,0,6,2,3,23,0,0,23,23,3,23,1,2,2,2,1,1,2,0,0,16,0,0,17,255,0,5,17,1,1,23,23,23
6015   C2E6 10FF000602031700001717031701020202010102000010000011FF0005110101
6015   C306 171717
6016   C309                    defb 3,3,1,3,3,2,1,1,14,16,16,76,0,17,255,0,6,13,13,13,1,3,3,23,3,1,255,3,4,1,1,14,74
6016   C309 03030103030201010E10104C0011FF00060D0D0D010303170301FF030401010E
6016   C329 4A
6017   C32A                    defb 16,75,255,0,9,15,1,2,1,3,1,3,1,1,2,1,2,3,6,1,0,0,17,255,0,4,13,13,13,255,0,4,11
6017   C32A 104BFF00090F0102010301030101020102030601000011FF00040D0D0DFF0004
6017   C34A 0B
6018   C34B                    defb 7,1,2,1,1,0,17,11,0,0,1,2,14,255,0,7,2,1,1,255,0,4,12,9,26,24,25,26,9,18,11,18,9
6018   C34B 070102010100110B000001020EFF0007020101FF00040C091A18191A09120B12
6018   C36B 09
6019   C36C                    defb 255,0,8,13,13,1,5,2,13,17,255,0,5,29,29,0,0,0,11,255,0,9,17,2,1,2,3,3,1,13,13,19,19
6019   C36C FF00080D0D0105020D11FF00051D1D0000000BFF0009110201020303010D0D13
6019   C38C 13
6020   C38D                    defb 0,0,29,29,0,0,0,11,255,0,8,13,13,1,255,3,5,2,1,13,13,13,26,24,25,26,255,13,11,2,1,1,255,3,6
6020   C38D 00001D1D0000000BFF00080D0D01FF030502010D0D0D1A18191AFF0D0B020101
6020   C3AD FF0306
6021   C3B0                    defb 7,255,1,4,2,2,255,1,5,2,1,2,2,1,2,1,1,3,3,6,255,3,6,2,255,3,4,1,3,3,3,2,1
6021   C3B0 07FF01040202FF01050201020201020101030306FF030602FF03040103030302
6021   C3D0 01
6022   C3D1 03                 defb 3
6023   C3D2                    defb 255,0,5,23,3,3,2,1,1,21,22,1,1,2,1,1,21,22,1,1,1,2,3,23,5,23,255,0,4,23,23,3,1
6023   C3D2 FF00051703030201011516010102010115160101010203170517FF0004171703
6023   C3F2 01
6024   C3F3                    defb 14,0,0,21,22,15,14,16,15,1,21,22,17,16,15,1,1,3,23,3,255,0,4,23,3,3,1,0,0,0,21,22,0
6024   C3F3 0E000015160F0E100F01151611100F0101031703FF0004170303010000001516
6024   C413 00
6025   C414                    defb 74,16,0,2,21,22,0,16,76,15,2,1,3,1,255,0,5,23,3,2,0,0,0,21,22,0,0,17,0,1,21,22,74
6025   C414 4A100002151600104C0F02010301FF0005170302000000151600001100011516
6025   C434 4A
6026   C435                    defb 16,0,0,16,15,1,2,255,0,4,23,23,1,14,0,0,0,21,22,255,0,4,8,21,22,0,17,0,0,17,0,16,255,0,5
6026   C435 100000100F0102FF00041717010E0000001516FF000408151600110000110010
6026   C455 FF0005
6027   C458                    defb 23,3,1,75,0,0,0,21,22,255,0,4,2,21,22,255,0,6,75,255,0,4,23,3,3,2,1,0,0,0,21,22,255,0,4
6027   C458 1703014B0000001516FF0004021516FF00064BFF000417030302010000001516
6027   C478 FF0004
6028   C47B                    defb 1,21,22,255,0,12,23,3,1,14,0,0,0,21,22,255,0,4,1,13,13,17,255,0,11,23,3,1,17,0,0,0,21
6028   C47B 011516FF000C1703010E0000001516FF0004010D0D11FF000B17030111000000
6028   C49B 15
6029   C49C                    defb 22,255,0,5,2,1,13,13,255,0,9,23,23,3,8,1,13,21,22,13,13,255,0,5,16,1,1,2,255,13,6,0,0,0
6029   C49C 16FF000502010D0DFF000917170308010D15160D0DFF000510010102FF0D0600
6029   C4BC 0000
6030   C4BE                    defb 23,3,3,3,2,1,21,22,16,76,255,0,5,16,15,1,7,1,2,1,1,2,1,255,0,4,23,3,1,1,14,21,22
6030   C4BE 1703030302011516104CFF0005100F0107010201010201FF0004170301010E15
6030   C4DE 16
6031   C4DF                    defb 17,255,0,6,17,0,0,1,3,3,1,3,3,3,255,0,4,23,3,1,14,0,21,22,255,0,10,15,1,1,23,23,23
6031   C4DF 11FF000611000001030301030303FF00041703010E001516FF000A0F01011717
6031   C4FF 17
6032   C500                    defb 3,0,0,0,23,3,3,2,0,0,21,22,255,0,12,15,5,3,1,3,255,0,4,23,3,1,17,0,21,22,255,0,13
6032   C500 030000001703030200001516FF000C0F05030103FF000417030111001516FF00
6032   C520 0D
6033   C521                    defb 15,1,1,1,255,0,4,23,3,1,16,0,21,22,255,0,21,23,3,1,2,0,21,22,0,38,38,255,0,4,38,38,255,0,11
6033   C521 0F010101FF000417030110001516FF001517030102001516002626FF00042626
6033   C541 FF000B
6034   C544                    defb 23,23,3,7,1,17,21,22,31,38,38,31,0,0,0,38,38,31,31,255,0,9,23,3,23,3,1,13,13,13,255,20,4
6034   C544 17170307011115161F26261F00000026261F1FFF000917031703010D0D0DFF14
6034   C564 04
6035   C565                    defb 13,13,13,255,20,4,255,13,6,255,0,4,23,23,3,3,1,2,255,1,5,2,1,1,8,255,1,4,2,7,1,2,1
6035   C565 0D0D0DFF1404FF0D06FF0004171703030102FF010502010108FF010402070102
6035   C585 01
6036   C586                    defb 23,3,1,1,3,1,3,3,1,2,2,1,1,2,1,1,7,1,1,255,3,4,1,2,1,1,3,23,1,1,16,1,3,3
6036   C586 17030101030103030102020101020101070101FF030401020101031701011001
6036   C5A6 0303
6037   C5A8                    defb 1,1,14,0,16,0,0,16,76,0,0,0,1,2,1,8,1,14,15,2,1,3,2,14,16,15,2,1,14,0,0,74,16
6037   C5A8 01010E00100000104C00000001020108010E0F020103020E100F02010E00004A
6037   C5C8 10
6038   C5C9                    defb 0,0,17,255,0,4,16,15,1,17,16,76,0,15,1,1,1,0,16,76,16,255,0,5,75,255,0,7,17,0,1,0,17
6038   C5C9 000011FF0004100F0111104C000F01010100104C10FF00054BFF000711000100
6038   C5E9 11
6039   C5EA                    defb 255,0,4,1,14,74,16,0,17,255,0,15,1,255,0,6,1,0,0,17,255,0,17,2,1,21,22,13,13,13,1,255,0,13
6039   C5EA FF0004010E4A100011FF000F01FF000601000011FF0011020115160D0D0D01FF
6039   C60A 000D
6040   C60C                    defb 13,13,13,255,0,6,21,22,15,2,3,2,255,0,13,7,1,1,255,0,6,21,22,0,1,7,1,255,0,6,13,13,13
6040   C60C 0D0D0DFF000615160F020302FF000D070101FF0006151600010701FF00060D0D
6040   C62C 0D
6041   C62D                    defb 255,0,4,1,3,1,255,0,6,21,22,0,15,1,1,255,0,13,1,3,8,255,0,6,21,22,0,0,1,1,13,13,255,0,11
6041   C62D FF0004010301FF00061516000F0101FF000D010308FF00061516000001010D0D
6041   C64D FF000B
6042   C650                    defb 2,3,1,255,0,6,21,22,0,0,1,1,14,255,0,12,1,3,1,255,0,8,13,13,1,2,255,0,13,1,1,1,255,0,9
6042   C650 020301FF00061516000001010EFF000C010301FF00080D0D0102FF000D010101
6042   C670 FF0009
6043   C673                    defb 15,2,7,255,13,6,255,0,7,1,2,1,13,13,255,0,8,1,1,17,6,0,0,6,255,0,8,1,3,2,14,255,0,9
6043   C673 0F0207FF0D06FF00070102010D0DFF000801011106000006FF00080103020EFF
6043   C693 0009
6044   C695                    defb 1,1,13,255,0,9,13,13,13,1,3,1,255,0,7,13,13,13,2,3,8,13,255,0,10,15,8,1,1,255,0,9,15
6044   C695 01010DFF00090D0D0D010301FF00070D0D0D0203080DFF000A0F080101FF0009
6044   C6B5 0F
6045   C6B6                    defb 1,23,3,1,13,17,255,0,9,1,3,2,17,255,0,8,17,1,0,23,3,1,255,13,4,255,0,5,17,1,3,1,16
6045   C6B6 011703010D11FF000901030211FF0008110100170301FF0D04FF000511010301
6045   C6D6 10
6046   C6D7                    defb 0,0,0,17,255,13,5,1,0,23,23,3,1,5,1,2,13,13,13,21,22,13,1,23,3,13,21,22,13,13,255,1,4
6046   C6D7 00000011FF0D050100171703010501020D0D0D15160D0117030D15160D0DFF01
6046   C6F7 04
6047   C6F8 02 01              defb 2,1
6048   C6FA                    defb 255,0,7,3,1,21,22,1,3,23,255,0,21,3,1,21,22,1,3,23,255,0,20,23,3,1,21,0,2,3,3,23,255,0,18
6048   C6FA FF000703011516010317FF001503011516010317FF0014170301150002030317
6048   C71A FF0012
6049   C71D                    defb 23,3,1,14,0,0,15,1,2,1,3,23,23,255,0,14,23,3,1,1,255,0,4,74,16,15,2,1,7,3,3,23,255,0,8
6049   C71D 1703010E00000F010201031717FF000E17030101FF00044A100F020107030317
6049   C73D FF0008
6050   C740                    defb 23,23,3,2,1,2,14,255,0,5,16,76,0,15,1,2,1,1,3,23,23,0,23,0,0,3,1,1,2,14,16,0,0,0
6050   C740 1717030201020EFF0005104C000F0102010103171700170000030101020E1000
6050   C760 0000
6051   C762                    defb 19,19,0,0,17,255,0,4,16,15,1,2,1,1,3,3,23,23,1,14,0,17,0,17,0,0,0,13,13,255,0,7,17
6051   C762 1313000011FF0004100F0102010103031717010E001100110000000D0DFF0007
6051   C782 11
6052   C783                    defb 0,0,0,15,1,1,2,2,1,255,0,42,13,13,255,0,12,255,13,8,17,255,0,19,3,5,1,1,2,1,1,2,13,13
6052   C783 0000000F0101020201FF002A0D0DFF000CFF0D0811FF00130305010102010102
6052   C7A3 0D0D
6053   C7A5                    defb 255,0,18,23,255,3,7,5,2,13,13,13,0,0,0,21,22,255,13,10,255,0,4,23,0,0,23,23,3,3,3,2,0,0,0
6053   C7A5 FF001217FF030705020D0D0D0000001516FF0D0AFF0004170000171703030302
6053   C7C5 000000
6054   C7C8                    defb 21,22,255,1,5,2,1,1,2,1,255,0,9,23,23,3,1,0,0,0,21,22,2,3,3,3,23,3,3,23,23,3,255,0,10
6054   C7C8 1516FF01050201010201FF000917170301000000151602030303170303171703
6054   C7E8 FF000A
6055   C7EB                    defb 23,3,1,0,0,0,21,22,1,3,23,23,0,0,23,0,0,23,255,0,11,3,2,13,13,0,21,22,1,8,23,255,0,8
6055   C7EB 170301000000151601031717000017000017FF000B03020D0D001516010817FF
6055   C80B 0008
6056   C80D                    defb 54,54,255,0,7,23,3,1,14,0,0,21,22,1,3,255,0,9,54,54,255,0,8,3,1,0,0,0,21,22,2,3,23
6056   C80D 3636FF00071703010E000015160103FF00093636FF0008030100000015160203
6056   C82D 17
6057   C82E                    defb 255,0,18,3,1,21,22,13,13,13,1,3,255,0,8
6057   C82E FF0012030115160D0D0D0103FF0008
6058   C83D                    defb 255,0,10,23,3,1,21,22,1,1,1,3,3,23,23,0,0,3,3,23,3,255,0,11,3,1,21,22,0,15,255,1,5
6058   C83D FF000A170301151601010103031717000003031703FF000B03011516000FFF01
6058   C85D 05
6059   C85E                    defb 8,255,1,5,18,9,9,10,255,0,7,23,1,21,22,0,0,0,16,17,255,0,4,16,76,255,0,5,11,255,0,7,23
6059   C85E 08FF01051209090AFF0007170115160000001011FF0004104CFF00050BFF0007
6059   C87E 17
6060   C87F                    defb 1,21,22,0,0,0,17,255,0,5,17,255,0,6,11,255,0,8,1,21,22,255,0,16,11,255,0,7,23,1,13,13,19,19
6060   C87F 01151600000011FF000511FF00060BFF0008011516FF00100BFF000717010D0D
6060   C89F 1313
6061   C8A1                    defb 17,255,0,7,17,255,0,5,11,255,0,7,23,3,1,1,255,13,6,0,255,13,6,0,0,0,11,255,0,9,23,3,1,1
6061   C8A1 11FF000711FF00050BFF000717030101FF0D0600FF0D060000000BFF00091703
6061   C8C1 0101
6062   C8C3                    defb 7,1,1,16,0,15,1,1,3,3,1,0,0,0,12,255,9,5,10,255,0,6,23,23,3,1,17,0,75,1,3,255,23,4
6062   C8C3 07010110000F01010303010000000CFF09050AFF00061717030111004B0103FF
6062   C8E3 1704
6063   C8E5                    defb 255,0,8,11,0,0,23,255,0,5,1,17,40,39,16,17,1,23,0,0,23,23,0,23,0,0,23,23,3,11,24,25,1
6063   C8E5 FF00080B000017FF0005011128271011011700001717001700001717030B1819
6063   C905 01
6064   C906                    defb 3,0,23,0,23,1,16,40,40,16,16,1,0,0,0,255,3,4,2,1,1,3,1,12,77,78,15,1,3,0,0,0,3
6064   C906 030017001701102828101001000000FF030402010103010C4D4E0F0103000000
6064   C926 03
6065   C927                    defb 1,13,13,1,1,3,0,0,0,1,2,1,1,14,16,16,1,14,17,24,25,0,16,1,255,0,4,23,3,3,23,23,255,0,5
6065   C927 010D0D010103000000010201010E1010010E111819001001FF00041703031717
6065   C947 FF0005
6066   C94A                    defb 16,0,0,74,16,17,0,0,0,38,38,0,17,1,23,255,0,12,18,17,18,10,0,17,255,0,4,38,38,0,0,2,23
6066   C94A 1000004A1011000000262600110117FF000C1211120A0011FF00042626000002
6066   C96A 17
6067   C96B                    defb 255,0,15,11,255,0,6,34,35,0,0,1,23,255,0,15,11,0,0,0,19,19,37,32,33,36,0,7,255,0,13,255,13,14
6067   C96B FF000F0BFF0006222300000117FF000F0B0000001313252021240007FF000DFF
6067   C98B 0D0E
6068   C98D                    defb 23,23,255,0,9,54,54,0,2,1,1,3,3,1,5,2,1,3,1,1,3,0,23,255,0,10,54,54,0,23,23,3,3
6068   C98D 1717FF0009363600020101030301050201030101030017FF000A363600171703
6068   C9AD 03
6069   C9AE                    defb 23,0,23,23,3,23,23,0,23,255,0,15
6069   C9AE 170017170317170017FF000F
6070   C9BA                    defb 0,0,0,23,3,1,0,0,45,255,0,7,8,255,5,5,8,255,0,8,3,1,14,255,0,12,43,6,42,255,0,6,45
6070   C9BA 00000017030100002DFF000708FF050508FF000803010EFF000C2B062AFF0006
6070   C9DA 2D
6071   C9DB                    defb 0,0,0,3,1,75,255,0,4,46,255,0,8,5,0,46,255,0,10,8,1,255,0,25,23,3,1,19,19,255,0,11,5
6071   C9DB 00000003014BFF00042EFF000805002EFF000A0801FF00191703011313FF000B
6071   C9FB 05
6072   C9FC                    defb 255,0,8,23,23,0,23,3,1,255,5,4,8,0,46,255,0,15,3,3,23,3,1,14,0,0,0,43,5,255,0,8,7
6072   C9FC FF0008171700170301FF050408002EFF000F03031703010E0000002B05FF0008
6072   CA1C 07
6073   CA1D                    defb 255,0,8,255,1,4,14,0,0,0,45,0,5,255,0,18,16,15,14,0,0,0,46,0,0,5,255,0,18,17,255,0,8
6073   CA1D FF0008FF01040E0000002D0005FF0012100F0E0000002E000005FF001211FF00
6073   CA3D 08
6074   CA3E                    defb 5,5,7,255,0,13,46,255,0,11,5,42,255,0,26,5,45,255,0,7,7,5,5,5,255,0,5,255,13,4,5,5,7
6074   CA3E 050507FF000D2EFF000B052AFF001A052DFF000707050505FF0005FF0D040505
6074   CA5E 07
6075   CA5F                    defb 0,0,0,7,255,0,5,7,5,5,42,0,43,7,255,0,5,1,2,1,255,0,17,41,19,8,8,255,0,4,3,7,1
6075   CA5F 00000007FF00050705052A002B07FF0005010201FF001129130808FF00040307
6075   CA7F 01
6076   CA80                    defb 255,0,17,41,41,7,42,255,0,4,23,3,3,13,0,0,7,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,5
6076   CA80 FF00112929072AFF00041703030D000007050005000500050005000500050005
6076   CAA0 05
6077   CAA1                    defb 0,0,0,17,0,0,23,3,1,0,0,38,38,255,0,12,38,38,0,0,17,1,1,2,0,0,3,2,31,31,38,38,255,31,12
6077   CAA1 00000011000017030100002626FF000C2626000011010102000003021F1F2626
6077   CAC1 FF1F0C
6078   CAC4                    defb 38,38,31,31,2,2,7,3,0,3,3,1,255,20,20,1,3,23,23,0,23,3,1,1,1,2,1,2,1,1,2,255,1,4
6078   CAC4 26261F1F0202070300030301FF141401031717001703010101020102010102FF
6078   CAE4 0104
6079   CAE6                    defb 2,1,1,5,1,1,1,2,1,3,23,0
6079   CAE6 020101050101010201031700
6080   CAF2                    defb 3,23,3,23,23,3,3,23,23,3,23,255,0,8,23,3,3,23,23,3,8,3,23,1,1,2,2,1,8,1,1,1,2
6080   CAF2 0317031717030317170317FF0008170303171703080317010102020108010101
6080   CB12 02
6081   CB13                    defb 1,3,23,255,0,4,23,3,255,1,4,2,1,1,2,1,0,16,0,17,0,0,0,16,76,0,15,1,3,255,0,4,3
6081   CB13 010317FF00041703FF0104020101020100100011000000104C000F0103FF0004
6081   CB33 03
6082   CB34                    defb 2,14,16,0,0,74,16,17,15,1,0,17,255,0,5,17,0,0,0,15,1,23,0,0,0,1,14,0,75,0,0,0,17
6082   CB34 020E1000004A10110F010011FF0005110000000F0117000000010E004B000000
6082   CB54 11
6083   CB55                    defb 0,0,1,255,0,11,17,1,3,23,0,23,1,0,40,40,255,0,7,17,255,0,8,38,0,13,1,23,0,0,0,1,17
6083   CB55 000001FF000B11010317001701002828FF000711FF000826000D011700000001
6083   CB75 11
6084   CB76                    defb 255,0,7,17,0,255,13,5,0,0,255,13,4,1,3,255,0,4,23,1,13,13,0,0,255,13,5,1,1,2,1,1,0,0
6084   CB76 FF00071100FF0D050000FF0D040103FF000417010D0D0000FF0D050101020101
6084   CB96 0000
6085   CB98                    defb 2,1,3,1,3,23,255,0,5,3,7,2,0,0,1,1,2,3,1,3,23,3,3,2,0,0,1,3,23,23,255,0,8
6085   CB98 020103010317FF0005030702000001010203010317030302000001031717FF00
6085   CBB8 08
6086   CBB9                    defb 23,1,0,0,2,3,3,23,3,0,0,23,3,1,0,0,1,3,255,0,11,1,0,0,1,3,23,255,0,5,1,2,0,0
6086   CBB9 170100000203031703000017030100000103FF000B010000010317FF00050102
6086   CBD9 0000
6087   CBDB                    defb 1,23,255,0,11,2,0,0,1,23,255,0,6,23,1,0,0,1,3,255,0,10,23,3,1,1,3,23,255,0,6,5,1
6087   CBDB 0117FF000B0200000117FF0006170100000103FF000A170301010317FF000605
6087   CBFB 01
6088   CBFC                    defb 0,0,1,23,255,0,11,23,3,0,23,255,0,6,23,3,1,1,2,3,0,23,255,0,21,23,3,3,23,255,0,161
6088   CBFC 00000117FF000B17030017FF00061703010102030017FF001517030317FF00A1
6089   CC1C                    defb 0,0,0,45,255,0,10,44,255,0,8,7,5,21,22,5,255,0,25,21,22,255,0,12,46,255,0,10,45,0,0,21,22
6089   CC1C 0000002DFF000A2CFF00080705151605FF00191516FF000C2EFF000A2D000015
6089   CC3C 16
6090   CC3D                    defb 8,255,0,25,21,22,255,0,28,5,255,0,16,46,255,0,38,7,255,0,5,46,255,0,13,7,5,5,7,255,0,14,8
6090   CC3D 08FF00191516FF001C05FF00102EFF002607FF00052EFF000D07050507FF000E
6090   CC5D 08
6091   CC5E                    defb 5,5,8,255,0,6,12,10,255,0,6,5,255,0,10,11,255,0,9,11,255,0,4,46,255,0,12,11,255,0,9,11,255,0,6
6091   CC5E 050508FF00060C0AFF000605FF000A0BFF00090BFF00042EFF000C0BFF00090B
6091   CC7E FF0006
6092   CC81                    defb 255,5,5,7,255,0,5,11,255,0,9,11,0,0,53,255,0,7,12,255,9,5,18,12,10,255,0,5,45,0,0,11,255,0,6
6092   CC81 FF050507FF00050BFF00090B000035FF00070CFF0905120C0AFF00052D00000B
6092   CCA1 FF0006
6093   CCA4                    defb 8,255,0,9,45,0,11,255,0,6,46,0,11,255,0,10,17,255,0,7,11,255,0,8,11,0,0,53,0,0,0,7,0,0,0
6093   CCA4 08FF00092D000BFF00062E000BFF000A11FF00070BFF00080B00003500000007
6093   CCC4 000000
6094   CCC7                    defb 16,255,0,7,11,255,0,8,11,255,0,7,255,13,5,17,0,0,7,255,5,5,7,255,0,5,11,255,0,6,5,1,1
6094   CCC7 10FF00070BFF00080BFF0007FF0D0511000007FF050507FF00050BFF00060501
6094   CCE7 01
6095   CCE8                    defb 2,1,1,13,21,22,5,42,0,11,0,43,5,255,0,5,11,0,0,53,255,0,4,3,23,23,3,1,2,21,22,5,0,0
6095   CCE8 0201010D1516052A000B002B05FF00050B000035FF0004031717030102151605
6095   CD08 0000
6096   CD0A                    defb 12,9,9,5,18,9,9,10,0,11,255,0,6,6,0,0,0,23,3,1,21,22,8,255,0,5,8,21,22,7,5,5,5
6096   CD0A 0C0909051209090A000BFF000606000000170301151608FF0005081516070505
6096   CD2A 05
6097   CD2B 07FF000505         defb 7,255,0,5,5
6098   CD30                    defb 23,23,3,23,3,1,21,22,8,5,0,5,0,5,7,21,22,7,255,0,9,8,3,2,1,1,2,14,21,22,255,0,5
6098   CD30 171703170301151608050005000507151607FF00090803020101020E1516FF00
6098   CD50 05
6099   CD51                    defb 43,5,21,22,255,0,11,2,1,14,16,0,0,21,22,255,0,6,5,21,22,255,0,5,45,255,0,4,5,1,2,0,17
6099   CD51 2B051516FF000B02010E1000001516FF0006051516FF00052DFF000405010200
6099   CD71 11
6100   CD72                    defb 0,43,7,5,0,5,0,5,5,5,8,21,22,255,0,7,46,0,0,0,7,6,255,0,10,46,43,5,21,22,255,0,10
6100   CD72 002B0705000500050505081516FF00072E0000000706FF000A2E2B051516FF00
6100   CD92 0A
6101   CD93                    defb 5,8,5,0,0,0,19,19,255,0,7,5,21,22,0,45,255,0,9,255,13,7,255,0,8,21,22,255,0,9,45,5,255,1,5
6101   CD93 0508050000001313FF0007051516002DFF0009FF0D07FF00081516FF00092D05
6101   CDB3 FF0105
6102   CDB6                    defb 2,5,5,5,7,255,0,4,5,0,22,255,0,11,3,23,3,23,3,1,14,255,0,20,5,0,0,0,23,3,1,0,0
6102   CDB6 0205050507FF0004050016FF000B0317031703010EFF00140500000017030100
6102   CDD6 00
6103   CDD7                    defb 45,255,0,5,5,255,0,5,7,5,0,0,0,21,22,255,0,5,3,2,0,46,255,0,5,5,7,255,0,10,21,22,5
6103   CDD7 2DFF000505FF000507050000001516FF00050302002EFF00050507FF000A1516
6103   CDF7 05
6104   CDF8                    defb 0,0,0,23,1,14,255,0,6,5,42,255,0,7,46,0,0,0,21,22,255,0,4,3,1,255,0,20,21,22,5,0,0
6104   CDF8 00000017010EFF0006052AFF00072E0000001516FF00040301FF001415160500
6104   CE18 00
6105   CE19                    defb 23,1,14,255,0,10,45,255,0,9,21,0,0,0,23,3,2,17,255,0,4,8,255,0,17,5,0,0,3,1,16,76,255,0,24
6105   CE19 17010EFF000A2DFF00091500000017030211FF000408FF00110500000301104C
6105   CE39 FF0018
6106   CE3C                    defb 23,1,13,0,0,0,38,38,0,0,7,0,5,0,5,0,5,0,5,7,38,38,0,0,0,5,0,54,54,1,1,31,31,31
6106   CE3C 17010D000000262600000700050005000500050726260000000500363601011F
6106   CE5C 1F1F
6107   CE5E                    defb 38,38,255,31,12,38,38,31,31,31,5,0,54,54,3,2,255,20,22,13,0,0,0,23,3,2,255,1,7,2,255,1,6
6107   CE5E 2626FF1F0C26261F1F1F050036360302FF14160D000000170302FF010702FF01
6107   CE7E 06
6108   CE7F                    defb 2,2,1,1,1,2,1,1
6108   CE7F 0202010101020101
6109   CE87                    defb 255,44,28,255,0,33,46,255,0,26,45,255,0,7,19,19,255,0,10,46,0,0,0,8,7,5,5,0,8,0,5,8,0
6109   CE87 FF2C1CFF00212EFF001A2DFF00071313FF000A2E000000080705050008000508
6109   CEA7 00
6110   CEA8                    defb 5,0,7,5,0,6,0,8,5,0,5,0,7,5,0,5,0,8,43,54,54,42,255,0,11,39,38,255,0,10,44,0,54,54
6110   CEA8 0500070500060008050005000705000500082B36362AFF000B2726FF000A2C00
6110   CEC8 3636
6111   CECA                    defb 255,0,11,45,40,40,255,0,10,17,255,0,24,45,0,0,13,255,0,13,11,255,0,13,1,255,0,8,46,255,0,4,11
6111   CECA FF000B2D2828FF000A11FF00182D00000DFF000D0BFF000D01FF00082EFF0004
6111   CEEA 0B
6112   CEEB                    defb 0,0,0,45,255,0,5,46,0,0,0,1,255,0,13,11,255,0,13,1,255,0,13,11,255,0,13,1,255,0,12,11,11
6112   CEEB 0000002DFF00052E00000001FF000D0BFF000D01FF000D0BFF000D01FF000C0B
6112   CF0B 0B
6113   CF0C                    defb 255,0,13,8,255,0,12,11,11,255,0,13,1,255,0,12,11,12,10,255,0,11,75,2,0,0,0,17,255,0,8,12,18
6113   CF0C FF000D08FF000C0B0BFF000D01FF000C0B0C0AFF000B4B0200000011FF00080C
6113   CF2C 12
6114   CF2D                    defb 11,10,255,0,9,74,16,1,0,0,0,16,76,255,0,9,11,11,0,0,0,17,255,0,5,17,1,3,255,13,9,21,22
6114   CF2D 0B0AFF00094A1001000000104CFF00090B0B00000011FF0005110103FF0D0915
6114   CF4D 16
6115   CF4E                    defb 13,13,13,24,25,255,13,10,1,3,1,2,1,1,1,5,1,1,1,21,22,2,1,1,77,78,1,2,1,1,7,1,1
6115   CF4E 0D0D0D1819FF0D0A010301020101010501010115160201014D4E010201010701
6115   CF6E 01
6116   CF6F                    defb 2,2,1,3,3,255,0,4,23,0,23,3,2,21,22,2,3,23,32,33,255,0,12
6116   CF6F 0202010303FF0004170017030215160203172021FF000C
6117   CF86                    defb 14,255,0,9,6,21,22,5,44,44,44,24,77,78,25,255,44,7,255,0,5,46,0,54,54,54,5,21,22,255,0,4,27
6117   CF86 0EFF0009061516052C2C2C184D4E19FF2C07FF00052E00363636051516FF0004
6117   CFA6 1B
6118   CFA7                    defb 24,25,27,0,0,0,45,255,0,5,45,255,0,4,54,54,54,5,21,22,255,0,5,30,30,255,0,15,54,54,54,7,21
6118   CFA7 18191B0000002DFF00052DFF0004363636051516FF00051E1EFF000F36363607
6118   CFC7 15
6119   CFC8                    defb 22,255,0,5,30,30,0,0,19,19,255,0,14,43,5,5,7,0,0,7,27,24,25,27,7,5,5,7,5,8,5,255,0,7
6119   CFC8 16FF00051E1E00001313FF000E2B0505070000071B18191B07050507050805FF
6119   CFE8 0007
6120   CFEA                    defb 45,0,0,0,43,0,42,0,0,43,0,77,78,0,42,43,0,42,43,0,42,255,0,6,46,255,0,11,77,78,255,0,26
6120   CFEA 2D0000002B002A00002B004D4E002A2B002A2B002AFF00062EFF000B4D4EFF00
6120   D00A 1A
6121   D00B                    defb 24,25,0,0,45,255,0,18,46,0,0,0,37,32,33,36,255,0,4,46,255,0,17,44,0,0,38,38,255,0,16,75,255,0,9
6121   D00B 181900002DFF00122E00000025202124FF00042EFF00112C00002626FF00104B
6121   D02B FF0009
6122   D02E                    defb 38,38,255,0,16,16,76,255,0,8,38,38,255,0,15,74,16,255,0,9,38,38,255,0,15,17,16,255,0,9,38,38,255,0,15
6122   D02E 2626FF0010104CFF00082626FF000F4A10FF00092626FF000F1110FF00092626
6122   D04E FF000F
6123   D051                    defb 16,16,76,255,0,8,38,38,0,0,17,255,0,12,16,16,0,17,255,0,7,38,38,0,0,16,76,255,0,10,17,13,13
6123   D051 10104CFF00082626000011FF000C10100011FF000726260000104CFF000A110D
6123   D071 0D
6124   D072                    defb 17,16,255,0,7,38,38,0,17,16,255,0,5,255,13,7,1,1,255,13,8,66,67,67,65,255,13,7,1,1,1,3,1
6124   D072 1110FF00072626001110FF0005FF0D070101FF0D0842434341FF0D0701010103
6124   D092 01
6125   D093                    defb 7,1,14,15,1,3,1,1,1,2,1,2,1,66,65,255,1,7,2,0,0,23,255,0,6,23,23,255,0,6,23,0,23
6125   D093 07010E0F0103010101020102014241FF010702000017FF00061717FF00061700
6125   D0B3 17
6126   D0B4 FF 00 08           defb 255,0,8
6127   D0B7                    defb 255,44,4,15,255,1,4,2,1,14,0,44,0,15,2,1,3,23,0,0,0,23,23,3,3,1,255,0,6,15,14,0,16
6127   D0B7 FF2C040FFF010402010E002C000F020103170000001717030301FF00060F0E00
6127   D0D7 10
6128   D0D8                    defb 17,255,0,6,16,1,3,3,23,3,3,1,1,2,14,255,0,9,75,0,46,255,0,5,17,15,1,2,1,1,2,14,16,16
6128   D0D8 11FF0006100103031703030101020EFF00094B002EFF0005110F01020101020E
6128   D0F8 1010
6129   D0FA                    defb 255,0,4,46,255,0,16,17,16,45,0,0,17,16,76,255,0,5,46,255,0,15,17,255,0,4,75,255,0,25,46,255,0,12
6129   D0FA FF00042EFF001011102D000011104CFF00052EFF000F11FF00044BFF00192EFF
6129   D11A 000C
6130   D11C                    defb 45,255,0,12,45,255,0,26,45,255,0,23,46,255,0,11,45,255,0,89,75,255,0,27,17,255,0,26,74,16,17,255,0,4
6130   D11C 2DFF000C2DFF001A2DFF00172EFF000B2DFF00594BFF001B11FF001A4A1011FF
6130   D13C 0004
6131   D13E                    defb 13,255,0,21,16,16,76,0,38,38,5,38,38,255,0,16,17,0,0,13,13,31,31,38,38,5,38,38,31,31,13,13,255,0,4
6131   D13E 0DFF001510104C002626052626FF00101100000D0D1F1F26260526261F1F0D0D
6131   D15E FF0004
6132   D161                    defb 17,0,0,0,255,13,7,1,1,255,20,4,5,255,20,4,1,2,255,13,8,1,1,1,3,1,7,1,14,15,1,3,1,1
6132   D161 11000000FF0D070101FF140405FF14040102FF0D08010101030107010E0F0103
6132   D181 0101
6133   D183                    defb 6,2,1,2,1,3,8,255,1,7,2,0,0,23,255,0,6,23,23,255,0,8,23,255,0,8
6133   D183 06020102010308FF010702000017FF00061717FF000817FF0008
6134   D19D                    defb 44,44,21,22,0,255,44,4,255,0,4,44,255,0,13,44,0,0,21,22,255,0,26,21,22,255,0,7,46,255,0,18,21
6134   D19D 2C2C151600FF2C04FF00042CFF000D2C00001516FF001A1516FF00072EFF0012
6134   D1BD 15
6135   D1BE                    defb 22,255,0,18,45,0,40,19,255,0,4,21,22,0,46,255,0,18,40,19,255,0,4,21,22,255,0,19,59,57,57,57,58
6135   D1BE 16FF00122D002813FF00041516002EFF00122813FF00041516FF00133B393939
6135   D1DE 3A
6136   D1DF                    defb 59,57,58,59,58,255,0,4,45,255,0,12,45,0,54,54,54,0,0,59,57,58,255,0,17,45,0,0,54,54,54,255,0,12
6136   D1DF 3B393A3B3AFF00042DFF000C2D0036363600003B393AFF00112D0000363636FF
6136   D1FF 000C
6137   D201                    defb 51,24,25,49,0,0,46,255,0,11,45,255,0,8,51,48,48,48,50,49,255,0,21,51,50,50,255,48,4,49,255,0,19
6137   D201 3318193100002EFF000B2DFF0008333030303231FF0015333232FF300431FF00
6137   D221 13
6138   D222                    defb 51,48,48,50,255,48,5,49,255,0,17,51,255,47,9,48,49,255,0,15,51,48,255,47,9,50,48,49,255,0,7,17,255,0,5
6138   D222 33303032FF300531FF001133FF2F093031FF000F3330FF2F09323031FF000711
6138   D242 FF0005
6139   D245                    defb 51,48,48,47,47,47,48,48,48,50,255,47,5,49,255,0,5,74,16,0,17,0,0,51,50,50,48,48,47,47,47,42,43
6139   D245 3330302F2F2F30303032FF2F0531FF00054A100011000033323230302F2F2F2A
6139   D265 2B
6140   D266                    defb 48,255,47,6,49,255,0,5,16,0,16,0,51,48,48,50,48,48,47,47,47,0,0,50,48,48,48,50,48,48,48,49,0
6140   D266 30FF2F0631FF0005100010003330303230302F2F2F0000323030303230303031
6140   D286 00
6141   D287                    defb 17,0,0,16,255,13,10,50,50,5,5,50,50,255,13,12,1,1,1,3,1,7,1,2,1,1,3,50,52,52,50,1,2
6141   D287 11000010FF0D0A323205053232FF0D0C01010103010701020101033234343201
6141   D2A7 02
6142   D2A8                    defb 1,3,2,1,7,1,1,8,1,1,2,0,0,23,255,0,6,23,1,50,52,52,50,2,23,0,0,23,23,255,0,7
6142   D2A8 0103020107010108010102000017FF0006170132343432021700001717FF0007
6143   D2C8                    defb 13,255,44,27,1,17,255,0,7,59,57,57,58,255,0,15,1,16,75,255,0,25,1,16,16,76,255,0,18,45,255,0,5
6143   D2C8 0DFF2C1B0111FF00073B39393AFF000F01104BFF00190110104CFF00122DFF00
6143   D2E8 05
6144   D2E9                    defb 2,13,13,17,255,0,24,1,2,1,13,61,255,0,19,46,0,0,0,3,23,3,1,13,255,0,4,45,255,0,10,59,57
6144   D2E9 020D0D11FF00180102010D3DFF00132E000000031703010DFF00042DFF000A3B
6144   D309 39
6145   D30A                    defb 58,0,0,59,57,58,23,0,23,3,1,255,0,11,59,58,0,0,0,45,255,0,8,3,1,255,0,6,40,39,0,0,59
6145   D30A 3A00003B393A1700170301FF000B3B3A0000002DFF00080301FF000628270000
6145   D32A 3B
6146   D32B                    defb 57,58,46,255,0,12,23,1,255,0,6,40,40,255,0,19,2,255,0,6,17,255,0,20,1,17,255,0,4,74,16,255,0,20
6146   D32B 393A2EFF000C1701FF00062828FF001302FF000611FF00140111FF00044A10FF
6146   D34B 0014
6147   D34D                    defb 3,13,255,0,5,16,76,255,0,5,75,255,0,13,3,1,255,0,4,17,16,0,0,17,0,0,74,16,255,0,5,17,255,0,7
6147   D34D 030DFF0005104CFF00054BFF000D0301FF0004111000001100004A10FF000511
6147   D36D FF0007
6148   D370                    defb 23,2,0,0,0,74,16,16,76,0,16,76,0,0,16,76,17,0,0,0,16,0,75,255,0,5,23,1,0,0,17,0,16,16
6148   D370 17020000004A10104C00104C0000104C1100000010004BFF0005170100001100
6148   D390 1010
6149   D392                    defb 0,17,16,0,0,17,16,0,16,0,0,74,16,17,16,255,0,5,3,2,13,61,16,0,16,16,0,16,16,19,61,16,16
6149   D392 00111000001110001000004A101110FF000503020D3D10001010001010133D10
6149   D3B2 10
6150   D3B3                    defb 0,16,0,0,61,16,16,16,76,0,0,54,54,23,3,1,255,13,22,0,54,54,0,23,7,255,1,4,3,1,1,1,2
6150   D3B3 001000003D1010104C00003636170301FF0D16003636001707FF010403010101
6150   D3D3 02
6151   D3D4                    defb 1,2,1,3,1,1,1,8,255,1,4,2,255,0,9,23,23,255,0,8,23,255,0,8
6151   D3D4 0102010301010108FF010402FF00091717FF000817FF0008
6152   D3EC                    defb 255,0,11,50,52,52,50,255,0,24,50,52,52,50,23,255,0,22,23,50,52,52,48,23,23,255,0,19,50,50,50,48,52,52
6152   D3EC FF000B32343432FF00183234343217FF001617323434301717FF001332323230
6152   D40C 3434
6153   D40E                    defb 255,50,4,255,0,17,23,50,255,0,8,50,255,0,18,50,255,0,8,50,23,255,0,17,48,50,50,50,52,52,50,50,50
6153   D40E FF3204FF00111732FF000832FF001232FF00083217FF00113032323234343232
6153   D42E 32
6154   D42F                    defb 48,255,0,19,23,23,50,52,52,50,23,255,0,6,23,255,0,16,48,52,52,50,255,0,4,23,0,23,23,23,255,0,14
6154   D42F 30FF001317173234343217FF000617FF001030343432FF00041700171717FF00
6154   D44F 0E
6155   D450                    defb 23,50,52,52,48,0,0,255,50,4,48,255,50,4,255,0,13,50,52,52,50,23,0,50,255,0,4,39,39,17,50,255,0,13
6155   D450 17323434300000FF320430FF3204FF000D32343432170032FF000427271132FF
6155   D470 000D
6156   D472                    defb 50,52,52,50,0,0,50,255,0,4,39,39,0,48,23,255,0,9,255,50,4,52,52,50,23,23,48,0,0,255,50,4,48,48
6156   D472 32343432000032FF00042727003017FF0009FF32043434321717300000FF3204
6156   D492 3030
6157   D494                    defb 255,0,9,23,50,0,0,0,52,52,50,48,50,50,0,0,50,23,23,255,0,12,23,48,0,0,0,52,52,255,0,6,50
6157   D494 FF000917320000003434323032320000321717FF000C17300000003434FF0006
6157   D4B4 32
6158   D4B5                    defb 23,255,0,14,50,19,19,0,52,52,255,0,6,48,255,0,15,255,50,4,52,52,0,0,17,255,50,4,255,0,8,54,54
6158   D4B5 17FF000E321313003434FF000630FF000FFF32043434000011FF3204FF000836
6158   D4D5 36
6159   D4D6                    defb 255,0,8,48,52,52,255,50,4,255,0,11,54,54,255,0,7,23,50,52,52,50,255,0,23,50,50,52,52,50,48,255,0,12
6159   D4D6 FF0008303434FF3204FF000B3636FF00071732343432FF0017323234343230FF
6159   D4F6 000C
6160   D4F8                    defb 255,0,11,50,52,52,50,23,255,0,21,23,48,50,52,52,50,48,255,0,20,23,48,50,0,52,52,0,50,48,23,255,0,14
6160   D4F8 FF000B3234343217FF001517303234343230FF001417303200343400323017FF
6160   D518 000E
6161   D51A                    defb 23,0,23,23,48,50,0,0,52,52,0,0,50,48,23,0,0,0,23,255,0,8,255,50,4,48,50,0,0,0,52,52,0,0,0
6161   D51A 17001717303200003434000032301700000017FF0008FF320430320000003434
6161   D53A 000000
6162   D53D                    defb 255,50,4,48,50,50,50,255,0,6,50,255,0,20,50,255,0,6,48,255,0,20,50,255,0,5,23,50,52,52,50,48,255,50,7
6162   D53D FF320430323232FF000632FF001432FF000630FF001432FF0005173234343230
6162   D55D FF3207
6163   D560                    defb 48,50,48,255,50,4,52,52,48,23,255,0,5,50,52,52,50,50,50,48,50,42,255,0,4,43,50,50,48,48,50,52,52
6163   D560 303230FF320434343017FF000532343432323230322AFF00042B323230303234
6163   D580 34
6164   D581                    defb 50,255,0,6,50,255,0,8,44,39,38,44,255,0,8,48,255,0,6,50,255,0,8,51,39,38,49,255,0,8,50,23,255,0,5
6164   D581 32FF000632FF00082C27262CFF000830FF000632FF000833272631FF00083217
6164   D5A1 FF0005
6165   D5A4                    defb 50,52,52,50,48,50,50,42,0,255,50,4,0,43,48,50,50,50,52,52,50,23,255,0,5,50,52,52,50,42,255,0,12
6165   D5A4 323434323032322A00FF3204002B3032323234343217FF0005323434322AFF00
6165   D5C4 0C
6166   D5C5                    defb 43,50,52,52,50,255,0,5,23,48,52,52,255,0,16,52,52,50,255,0,6,50,52,52,255,0,5,51,0,38,38,0,49
6166   D5C5 2B32343432FF000517303434FF0010343432FF0006323434FF00053300262600
6166   D5E5 31
6167   D5E6                    defb 255,0,5,52,52,50,255,0,5,23,50,52,52,255,0,5,50,31,38,38,31,50,255,0,5,52,52,48,255,0,6,50,52,52
6167   D5E6 FF0005343432FF000517323434FF0005321F26261F32FF0005343430FF000632
6167   D606 3434
6168   D608                    defb 255,0,5,50,255,20,4,50,17,0,38,38,0,52,52,50,255,0,4,54,54,48,52,52,0,0,19,19,0,50,255,68,4
6168   D608 FF000532FF1404321100262600343432FF00043636303434000013130032FF44
6168   D628 04
6169   D629                    defb 50,16,76,0,0,0,52,52,50,23,0,0,0,54,54,255,50,4,48,255,50,7,48,50,50,50,48,48,255,50,4,255,0,13
6169   D629 32104C000000343432170000003636FF320430FF3207303232323030FF3204FF
6169   D649 000D
6170   D64B                    defb 23,0,23,255,0,6,23,23,255,0,7
6170   D64B 170017FF00061717FF0007
6171   D656                    defb 255,44,28,0,0,0,45,255,0,5,46,255,0,15,45,0,46,255,0,27,44,255,0,18,7,5,5,5,57,58,0,0,46
6171   D656 FF2C1C0000002DFF00052EFF000F2D002EFF001B2CFF001207050505393A0000
6171   D676 2E
6172   D677                    defb 44,7,5,5,7,0,6,0,0,8,5,5,7,0,0,5,7,255,0,5,8,255,0,5,44,5,0,0,45,255,0,5,54,54
6172   D677 2C07050507000600000805050700000507FF000508FF00052C0500002DFF0005
6172   D697 3636
6173   D699                    defb 255,0,6,45,255,0,7,59,57,57,5,38,38,0,0,5,0,0,5,54,54,5,0,0,5,255,0,12,44,5,38,38,0
6173   D699 FF00062DFF00073B3939052626000005000005363605000005FF000C2C052626
6173   D6B9 00
6174   D6BA                    defb 59,58,255,0,14,59,7,255,0,5,44,8,57,58,0,0,5,0,0,5,45,0,5,0,0,5,255,0,6,5,57,58,0,0
6174   D6BA 3B3AFF000E3B07FF00052C08393A0000050000052D0005000005FF000605393A
6174   D6DA 0000
6175   D6DC                    defb 46,44,5,255,0,4,8,5,5,8,0,0,8,5,5,7,255,0,6,5,45,255,0,4,44,7,59,58,255,0,8,45,0,0,0
6175   D6DC 2E2C05FF000408050508000008050507FF0006052DFF00042C073B3AFF00082D
6175   D6FC 000000
6176   D6FF                    defb 59,57,58,0,0,0,7,0,0,0,59,57,57,255,0,27,44,255,0,27,44,7,57,58,255,0,4,59,57,57,58,0,0,0
6176   D6FF 3B393A000000070000003B3939FF001B2CFF001B2C07393AFF00043B39393A00
6176   D71F 0000
6177   D721                    defb 59,57,57,58,59,57,57,7,57,58,0,0,0,44,5,0,45,255,0,7,46,255,0,11,46,255,0,4,44,5,255,0,5
6177   D721 3B39393A3B393907393A0000002C05002DFF00072EFF000B2EFF00042C05FF00
6177   D741 05
6178   D742                    defb 59,57,58,255,0,8,59,58,0,0,5,0,0,59,57,57,58,6,255,0,14,46,255,0,11,44,5,17,0,59,58,255,0,16
6178   D742 3B393AFF00083B3A00000500003B39393A06FF000E2EFF000B2C0511003B3AFF
6178   D762 0010
6179   D764                    defb 8,255,0,5,44,5,16,17,255,0,13,19,19,255,0,4,17,0,0,21,22,44,5,5,8,0,8,0,5,0,5,0,8
6179   D764 08FF00052C051011FF000D1313FF000411000015162C05050800080005000500
6179   D784 08
6180   D785                    defb 0,8,0,8,0,5,0,7,0,7,5,5,5,7,21,22,8
6180   D785 0008000800050007000705050507151608
6181   D796                    defb 255,44,11,24,25,24,25,24,25,255,44,11,0,0,45,255,0,4,46,0,0,0,255,47,6,0,0,45,46,0,0,0,45
6181   D796 FF2C0B181918191819FF2C0B00002DFF00042E000000FF2F0600002D2E000000
6181   D7B6 2D
6182   D7B7                    defb 255,0,14,255,47,6,255,0,22,255,47,6,255,0,11,8,5,5,7,255,0,4,45,38,38,24,25,24,25,24,25,38,38
6182   D7B7 FF000EFF2F06FF0016FF2F06FF000B08050507FF00042D262618191819181926
6182   D7D7 26
6183   D7D8                    defb 255,0,5,7,5,8,5,7,42,0,43,5,7,0,0,31,38,38,43,42,43,42,43,42,38,38,31,0,0,7,5,42,0
6183   D7D8 FF000507050805072A002B050700001F26262B2A2B2A2B2A26261F000007052A
6183   D7F8 00
6184   D7F9                    defb 46,5,75,0,0,45,0,43,8,5,255,20,12,5,5,42,0,0,45,0,5,13,0,0,0,46,0,43,255,5,14,42,255,0,5
6184   D7F9 2E054B00002D002B0805FF140C05052A00002D00050D0000002E002BFF050E2A
6184   D819 FF0005
6185   D81C                    defb 8,1,13,255,0,25,5,3,2,255,0,25,5,23,1,17,5,5,21,22,5,7,0,0,0,8,5,5,7,0,0,0,7
6185   D81C 08010DFF0019050302FF00190517011105051516050700000008050507000000
6185   D83C 07
6186   D83D                    defb 5,5,7,21,22,7,5,8,23,1,16,76,0,21,22,43,5,0,0,0,5,42,43,5,0,0,0,5,42,43,5,21,22
6186   D83D 05050715160705081701104C0015162B05000000052A2B05000000052A2B0515
6186   D85D 16
6187   D85E                    defb 0,0,0,3,1,13,0,0,21,22,0,43,5,0,5,42,0,0,43,5,0,5,42,0,0,5,21,22,0,0,0,1,14
6187   D85E 00000003010D00001516002B0500052A00002B0500052A000005151600000001
6187   D87E 0E
6188   D87F                    defb 0,0,0,21,22,255,0,15,255,5,5,7,1,17,0,0,0,21,22,255,0,20,5,1,255,13,4,5,0,6,0,5,255,0,17
6188   D87F 0000001516FF000FFF05050701110000001516FF00140501FF0D040500060005
6188   D89F FF0011
6189   D8A2                    defb 7,3,1,1,1,2,17,0,0,0,43,5,0,5,0,7,0,5,0,5,0,7,0,5,0,8,21,22,5,0,23,3,3
6189   D8A2 070301010102110000002B050005000700050005000700050008151605001703
6189   D8C2 03
6190   D8C3                    defb 1,13,255,0,19,21,22,5,0,0,0,23,3,2,255,0,19,21,22,6,0,0,23,23,3,1,0,5,0,53,0,7,0
6190   D8C3 010DFF0013151605000000170302FF0013151606000017170301000500350007
6190   D8E3 00
6191   D8E4                    defb 5,0,8,0,7,0,5,0,5,0,8,0,5,0,5
6191   D8E4 050008000700050005000800050005
6192   D8F3                    defb 255,44,16,0,0,0,255,44,10,54,54,255,0,9,46,255,0,14,44,44,54,54,45,255,0,20,46,0,0,44,44,255,0,15
6192   D8F3 FF2C10000000FF2C0A3636FF00092EFF000E2C2C36362DFF00142E00002C2CFF
6192   D913 000F
6193   D915                    defb 59,57,58,255,0,6,45,0,44,44,255,0,18,46,255,0,7,44,44,255,0,20,59,58,255,0,4,44,44,255,0,6,59
6193   D915 3B393AFF00062D002C2CFF00122EFF00072C2CFF00143B3AFF00042C2CFF0006
6193   D935 3B
6194   D936                    defb 57,57,58,255,0,16,44,44,38,38,255,0,24,44,44,38,38,255,0,21,59,57,58,44,44,255,0,6,45,255,0,6,59
6194   D936 39393AFF00102C2C2626FF00182C2C2626FF00153B393A2C2CFF00062DFF0006
6194   D956 3B
6195   D957                    defb 58,255,0,11,44,44,255,0,26,44,44,255,0,17,45,255,0,5,59,58,0,44,44,255,0,8,59,57,58,255,0,15,44,44
6195   D957 3AFF000B2C2CFF001A2C2CFF00112DFF00053B3A002C2CFF00083B393AFF000F
6195   D977 2C2C
6196   D979                    defb 46,255,0,25,44,44,255,0,21,59,58,0,0,0,44,44,255,0,12,59,57,57,58,255,0,10,44,44,255,0,5,59,57
6196   D979 2EFF00192C2CFF00153B3A0000002C2CFF000C3B39393AFF000A2C2CFF00053B
6196   D999 39
6197   D99A                    defb 58,0,46,255,0,14,45,0,44,44,255,0,26,44,59,58,21,22,255,0,8,53,255,0,14,44,44,59,21,22,57,58,255,0,21
6197   D99A 3A002EFF000E2D002C2CFF001A2C3B3A1516FF000835FF000E2C2C3B1516393A
6197   D9BA FF0015
6198   D9BD 2C                 defb 44
6199   D9BE                    defb 255,44,15,255,0,12,44,44,255,0,6,46,255,0,16,54,54,54,44,44,0,0,40,39,255,0,11,45,255,0,7,54,54,54
6199   D9BE FF2C0FFF000C2C2CFF00062EFF00103636362C2C00002827FF000B2DFF000736
6199   D9DE 3636
6200   D9E0                    defb 44,44,0,0,38,41,255,0,22,44,44,59,57,57,57,58,255,0,21,44,44,255,0,24,46,0,44,44,255,0,6,45,0,0,0
6200   D9E0 2C2C00002629FF00162C2C3B3939393AFF00152C2CFF00182E002C2CFF00062D
6200   DA00 000000
6201   DA03                    defb 59,58,255,0,7,45,255,0,6,44,44,255,0,26,44,44,255,0,20,19,19,255,0,4,44,44,0,0,45,255,0,10,59
6201   DA03 3B3AFF00072DFF00062C2CFF001A2C2CFF00141313FF00042C2C00002DFF000A
6201   DA23 3B
6202   DA24                    defb 58,255,0,4,59,57,57,58,0,0,0,44,44,255,0,26,44,44,255,0,26,44,44,255,0,5,46,255,0,4,59,58,255,0,10
6202   DA24 3AFF00043B39393A0000002C2CFF001A2C2CFF001A2C2CFF00052EFF00043B3A
6202   DA44 FF000A
6203   DA47                    defb 45,0,0,0,44,44,255,0,26,44,44,0,0,0,59,57,57,58,255,0,19,44,44,255,0,26,44,44,0,0,46,255,0,9
6203   DA47 2D0000002C2CFF001A2C2C0000003B39393AFF00132C2CFF001A2C2C00002EFF
6203   DA67 0009
6204   DA69                    defb 59,57,57,58,255,0,4,45,255,0,5,44,44,255,0,26,44,44,255,0,8,53,0,0,53,255,0,9,53,0,0,53,0
6204   DA69 3B39393AFF00042DFF00052C2CFF001A2C2CFF000835000035FF000935000035
6204   DA89 00
6205   DA8A                    defb 44,59,57,57,58,59,57,58,255,0,9,59,57,58,255,0,8,44
6205   DA8A 2C3B39393A3B393AFF00093B393AFF00082C
6206   DA9C                    defb 255,44,11,23,3,2,68,62,2,3,23,255,44,10,54,54,41,41,44,255,41,6,64,63,62,42,255,41,9,54,54,44,44
6206   DA9C FF2C0B170302443E020317FF2C0A363629292CFF2906403F3E2AFF290936362C
6206   DABC 2C
6207   DABD                    defb 54,54,255,41,8,64,63,62,42,255,41,10,54,54,44,44,44,255,41,8,64,63,1,3,23,255,44,6,41,41,41,255,44,5
6207   DABD 3636FF2908403F3E2AFF290A36362C2C2CFF2908403F010317FF2C06292929FF
6207   DADD 2C05
6208   DADF                    defb 255,41,8,64,3,1,44,0,0,44,255,41,8,44,0,0,44,44,255,41,4,44,44,44,23,23,44,255,0,4,44,255,41,8
6208   DADF FF29084003012C00002CFF29082C00002C2CFF29042C2C2C17172CFF00042CFF
6208   DAFF 2908
6209   DB01                    defb 44,0,0,44,44,255,41,4,44,255,0,9,44,41,41,41,255,44,6,0,0,44,44,41,41,41,44,44,255,0,9,44,41,41,41
6209   DB01 2C00002C2CFF29042CFF00092C292929FF2C0600002C2C2929292C2CFF00092C
6209   DB21 292929
6210   DB24                    defb 44,255,0,7,44,44,255,41,4,44,0,255,44,9,41,41,41,44,23,44,23,23,3,1,1,2,44,255,41,4,44,0,66
6210   DB24 2CFF00072C2CFF29042C00FF2C092929292C172C1717030101022CFF29042C00
6210   DB44 42
6211   DB45                    defb 41,38,38,255,41,12,64,63,62,62,62,44,44,41,41,41,44,0,66,38,38,38,31,38,255,41,9,64,63,255,62,4,44
6211   DB45 292626FF290C403F3E3E3E2C2C2929292C00422626261F26FF2909403FFF3E04
6211   DB65 2C
6212   DB66                    defb 255,41,4,44,0,44,66,47,47,47,65,41,41,41,255,44,4,23,44,23,23,3,1,1,2,44,255,41,4,44,0,0,44
6212   DB66 FF29042C002C422F2F2F41292929FF2C04172C1717030101022CFF29042C0000
6212   DB86 2C
6213   DB87                    defb 67,67,67,44,44,41,41,44,255,0,11,44,41,41,41,44,44,0,255,44,6,41,41,41,255,44,10,0,0,44,255,41,4
6213   DB87 4343432C2C29292CFF000B2C2929292C2C00FF2C06292929FF2C0A00002CFF29
6213   DBA7 04
6214   DBA8                    defb 44,0,44,255,41,15,54,54,44,0,0,44,255,41,4,44,0,44,255,41,15,54,54,44,0,0,44,66,38,38,38,44,44,44
6214   DBA8 2C002CFF290F36362C00002CFF29042C002CFF290F36362C00002C422626262C
6214   DBC8 2C2C
6215   DBCA                    defb 38,38,38,65,255,44,6,255,41,5,44,44,44,0,0,66,31,31,38,38,255,31,5,38,65,255,0,5,255,44,7,255,0,4
6215   DBCA 26262641FF2C06FF29052C2C2C0000421F1F2626FF1F052641FF0005FF2C07FF
6215   DBEA 0004
6216   DBEC                    defb 66,255,47,9,65,44,255,0,16,44,255,67,9,255,0,18
6216   DBEC 42FF2F09412CFF00102CFF4309FF0012
6217   DBFC                    defb 3,1,13,0,71,0,255,71,4,6,21,22,6,71,71,255,0,12,23,3,1,13,255,9,6,18,21,22,18,9,10,255,0,13
6217   DBFC 03010D004700FF4704061516064747FF000C1703010DFF090612151612090AFF
6217   DC1C 000D
6218   DC1E                    defb 23,3,1,0,6,0,0,6,0,7,21,22,5,0,11,71,71,46,71,71,71,255,0,8,3,2,255,0,4,70,0,0,21
6218   DC1E 17030100060000060007151605000B47472E474747FF00080302FF0004460000
6218   DC3E 15
6219   DC3F                    defb 22,0,0,12,255,9,6,10,255,0,7,1,1,0,0,0,45,0,0,0,21,22,7,255,0,5,44,44,0,11,255,0,6
6219   DC3F 1600000CFF09060AFF000701010000002D000000151607FF00052C2C000BFF00
6219   DC5F 06
6220   DC60                    defb 23,1,14,255,0,7,21,22,255,0,9,11,255,0,5,23,3,2,0,45,255,0,6,21,22,5,0,8,0,8,0,0,0
6220   DC60 17010EFF00071516FF00090BFF0005170302002DFF0006151605000800080000
6220   DC80 00
6221   DC81                    defb 5,11,8,0,5,0,26,3,3,1,255,0,8,21,22,0,45,255,0,7,11,255,0,4,53,2,1,14,255,0,8,21,22
6221   DC81 050B080005001A030301FF00081516002DFF00070BFF00043502010EFF000815
6221   DCA1 16
6222   DCA2                    defb 255,0,8,46,11,255,0,27,11,255,0,10,17,255,0,16,11,255,0,4,53,255,13,4,5,16,8,0,5,0,7,21,22
6222   DCA2 FF00082E0BFF001B0BFF000A11FF00100BFF000435FF0D040510080005000715
6222   DCC2 16
6223   DCC3                    defb 7,0,8,0,7,0,8,0,8,11,7,0,5,0,26,1,2,1,1,13,16,255,0,4,5,21,22,255,0,9,12,255,9,5
6223   DCC3 0700080007000800080B070005001A010201010D10FF0004051516FF00090CFF
6223   DCE3 0905
6224   DCE5                    defb 3,3,3,2,1,16,76,0,0,0,7,21,22,5,255,0,14,23,0,23,3,1,13,255,0,5,21,22,255,0,6,46,0,0,0
6224   DCE5 0303030201104C00000007151605FF000E17001703010DFF00051516FF00062E
6224   DD05 000000
6225   DD08                    defb 45,255,0,7,23,3,1,255,0,4,7,21,22,8,255,0,15,23,3,2,1,14,255,0,4,5,21,22,255,0,4,45,255,0,10
6225   DD08 2DFF0007170301FF000407151608FF000F170302010EFF0004051516FF00042D
6225   DD28 FF000A
6226   DD2B                    defb 23,3,1,14,0,0,0,46,0,0,0,21,22,5,255,0,4,45,34,35,255,0,7,3,2,14,0,0,0,45,0,0,0
6226   DD2B 1703010E0000002E000000151605FF00042D2223FF000703020E0000002D0000
6226   DD4B 00
6227   DD4C                    defb 8,21,22,255,0,5,24,77,78,25,255,0,6,1,14,255,0,8,5,21,22,5,255,0,5,77,78,255,0,7
6227   DD4C 081516FF0005184D4E19FF0006010EFF000805151605FF00054D4EFF0007
6228   DD6A                    defb 255,0,4,45,255,0,37,46,255,0,7,255,6,5,255,0,21,46,0,6,70,70,19,6,255,0,7,46,0,0,0,71,0,0,0
6228   DD6A FF00042DFF00252EFF0007FF0605FF00152E000646461306FF00072E00000047
6228   DD8A 000000
6229   DD8D                    defb 71,0,0,0,71,0,71,71,6,19,19,0,6,255,0,11,6,0,6,0,6,0,6,0,6,0,6,24,25,19,19,19,6
6229   DD8D 47000000470047470613130006FF000B06000600060006000600061819131313
6229   DDAD 06
6230   DDAE                    defb 255,0,11,70,255,0,11,69,38,38,19,6,255,0,11,6,0,0,71,71,0,71,0,19,19,71,0,69,38,38,71,6,0,0,0
6230   DDAE FF000B46FF000B4526261306FF000B0600004747004700131347004526264706
6230   DDCE 000000
6231   DDD1                    defb 46,255,0,8,21,22,6,6,0,6,0,6,6,6,24,25,255,6,4,255,0,11,6,21,22,6,0,0,70,0,0,0,70
6231   DDD1 2EFF0008151606060006000606061819FF0604FF000B06151606000046000000
6231   DDF1 46
6232   DDF2                    defb 11,11,0,0,70,255,0,9,45,0,0,0,21,22,255,0,7,45,12,11,18,9,10,255,0,8,71,0,71,0,6,21,22
6232   DDF2 0B0B000046FF00092D0000001516FF00072D0C0B12090AFF0008470047000615
6232   DE12 16
6233   DE13                    defb 6,0,71,255,0,6,12,255,9,5,255,0,6,255,6,5,21,22,6,6,6,255,0,6,46,0,0,12,9,9,255,0,6
6233   DE13 060047FF00060CFF0905FF0006FF06051516060606FF00062E00000C0909FF00
6233   DE33 06
6234   DE34                    defb 6,0,0,70,255,0,4,70,6,255,0,13,45,255,0,4,6,255,71,4,0,0,71,71,6,255,0,18,255,6,5,21,22
6234   DE34 06000046FF00044606FF000D2DFF000406FF47040000474706FF0012FF060515
6234   DE54 16
6235   DE55                    defb 6,6,6,255,0,19,70,0,0,6,21,22,6,0,70,255,0,10,45,255,0,5,46,255,0,6,21,22,70,0,0,46,255,0,12
6235   DE55 060606FF0013460000061516060046FF000A2DFF00052EFF000615164600002E
6235   DE75 FF000C
6236   DE78                    defb 54,54,255,0,7,6,21,22,6,255,0,6,46,255,0,8,54,54,255,0,8,21,22,255,0,25,6,21,22,6,255,0,14
6236   DE78 3636FF000706151606FF00062EFF00083636FF00081516FF001906151606FF00
6236   DE98 0E
6237   DE99                    defb 255,0,23,11,255,0,9,46,255,0,17,11,255,0,21,45,255,0,5,11,255,0,9,44,0,44,0,44,0,44,0,44,0
6237   DE99 FF00170BFF00092EFF00110BFF00152DFF00050BFF00092C002C002C002C002C
6237   DEB9 00
6238   DEBA                    defb 44,0,44,0,44,0,0,0,11,255,0,27,11,255,0,27,11,255,0,4,5,0,7,0,5,255,0,15,7,0,5,11,5
6238   DEBA 2C002C002C0000000BFF001B0BFF001B0BFF00040500070005FF000F0700050B
6238   DEDA 05
6239   DEDB                    defb 0,5,255,0,24,12,10,255,0,27,11,255,0,27,11,255,0,27,12,10,0,0,5,0,59,57,58,0,5,0,5,0,5
6239   DEDB 0005FF00180C0AFF001B0BFF001B0BFF001B0C0A000005003B393A0005000500
6239   DEFB 05
6240   DEFC                    defb 0,8,0,6,0,7,0,5,0,5,0,0,0,7,11,5,0,18,255,9,12,10,255,0,11,12,9,9,7,0,59,58,255,0,9
6240   DEFC 00080006000700050005000000070B050012FF090C0AFF000B0C090907003B3A
6240   DF1C FF0009
6241   DF1F                    defb 12,255,9,9,18,5,18,9,9,255,0,4,45,255,0,18,6,45,0,0,0,5,0,59,58,255,0,20,5,255,0,13,45
6241   DF1F 0CFF09091205120909FF00042DFF0012062D00000005003B3AFF001405FF000D
6241   DF3F 2D
6242   DF40                    defb 255,0,17,8,0,5,0,7,0,5,0,5,0,8,0,5,0,7,0,5,0,7,0,5,0,8,0,7,255,0,17,46,255,0,41
6242   DF40 FF001108000500070005000500080005000700050007000500080007FF00112E
6242   DF60 FF0029
6243   DF63                    defb 255,0,25,11,255,0,4,45,255,0,19,46,0,0,11,255,0,27,11,255,0,27,11,255,0,8,44,255,0,8,45,255,0,4
6243   DF63 FF00190BFF00042DFF00132E00000BFF001B0BFF001B0BFF00082CFF00082DFF
6243   DF83 0004
6244   DF85                    defb 44,255,0,4,11,255,0,14,34,35,255,0,11,11,0,0,5,0,7,0,5,0,0,0,5,0,5,8,24,25,5,0,5
6244   DF85 2CFF00040BFF000E2223FF000B0B000005000700050000000500050818190500
6244   DFA5 05
6245   DFA6                    defb 0,5,0,0,0,5,0,5,11,5,255,0,5,53,0,0,0,53,0,0,5,24,25,8,0,0,0,53,0,0,0,53,0,0
6245   DFA6 00050000000500050B05FF000535000000350000051819080000003500000035
6245   DFC6 0000
6246   DFC8                    defb 11,255,0,13,26,24,25,26,255,0,10,11,255,0,14,29,29,255,0,11,11,255,0,10,19,19,0,0,29,29,255,0,11
6246   DFC8 0BFF000D1A18191AFF000A0BFF000E1D1DFF000B0BFF000A131300001D1DFF00
6246   DFE8 0B
6247   DFE9                    defb 11,0,0,5,0,5,0,7,0,5,0,5,7,5,26,24,25,26,0,7,0,5,0,5,0,8,0,7,11,5,0,255,9,12
6247   DFE9 0B000005000500070005000507051A18191A000700050005000800070B0500FF
6247   E009 090C
6248   E00B                    defb 18,11,255,0,11,12,9,9,9,10,255,0,11,12,255,9,14,0,11,255,0,13,45,255,0,13,11,0,0,45,255,0,24
6248   E00B 120BFF000B0C0909090AFF000B0CFF090E000BFF000D2DFF000D0B00002DFF00
6248   E02B 18
6249   E02C                    defb 11,255,0,11,46,255,0,15,11,255,0,22,45,255,0,4,11,255,0,27,11,255,0,26
6249   E02C 0BFF000B2EFF000F0BFF00162DFF00040BFF001B0BFF001A
6250   E044                    defb 255,0,21,24,25,255,0,14,45,255,0,11,77,78,255,0,15,46,0,0,0,44,255,0,6,24,25,255,0,7,45,255,0,18
6250   E044 FF00151819FF000E2DFF000B4D4EFF000F2E0000002CFF00061819FF00072DFF
6250   E064 0012
6251   E066                    defb 39,38,0,0,0,45,255,0,22,39,38,255,0,24,7,7,24,25,7,7,0,0,0,48,0,48,0,48,0,68,0,48,0
6251   E066 27260000002DFF00162726FF0018070718190707000000300030003000440030
6251   E086 00
6252   E087                    defb 68,0,68,0,0,8,255,7,4,42,77,78,0,7,255,0,24,43,42,0,26,255,0,24,38,0,0,4,255,0,27,27,255,0,24
6252   E087 440044000008FF07042A4D4E0007FF00182B2A001AFF001826000004FF001B1B
6252   E0A7 FF0018
6253   E0AA                    defb 34,35,0,7,0,0,0,48,0,48,0,48,0,68,0,48,0,68,0,68,0,0,8,255,7,5,24,25,7,42,0,0,0
6253   E0AA 2223000700000030003000300044003000440044000008FF07051819072A0000
6253   E0CA 00
6254   E0CB                    defb 255,9,12,10,0,0,0,12,9,9,9,18,11,11,255,0,5,9,9,10,255,0,9,11,255,0,8,11,11,0,0,0,45
6254   E0CB FF090C0A0000000C090909120B0BFF000509090AFF00090BFF00080B0B000000
6254   E0EB 2D
6255   E0EC                    defb 0,0,0,11,255,0,14,46,0,0,0,12,11,10,0,45,255,0,4,11,255,0,11,44,255,0,7,11,11,255,0,6,11
6255   E0EC 0000000BFF000E2E0000000C0B0A002DFF00040BFF000B2CFF00070B0BFF0006
6255   E10C 0B
6256   E10D                    defb 255,0,19,11,11,255,0,20,45,255,0,5,11,11,255,0,10,46,255,0,15,11,12,9,9,10,255,0,23,11,0,0,0
6256   E10D FF00130B0BFF00142DFF00050B0BFF000A2EFF000F0B0C09090AFF00170B0000
6256   E12D 00
6257   E12E 0B 00              defb 11,0
6258   E130                    defb 255,0,5,46,255,0,6,45,0,45,255,0,5,39,255,0,27,39,0,0,46,255,0,24,11,255,0,6,45,57,58,255,0,15
6258   E130 FF00052EFF00062D002DFF000527FF001B2700002EFF00180BFF00062D393AFF
6258   E150 000F
6259   E152                    defb 46,0,0,11,0,71,71,71,34,35,71,0,0,0,59,57,57,58,0,45,0,0,55,75,73,255,0,6,11,71,1,1,1
6259   E152 2E00000B004747472223470000003B39393A002D0000374B49FF00060B470101
6259   E172 01
6260   E173                    defb 24,25,1,255,0,12,17,0,0,0,46,0,0,0,11,1,14,0,0,77,78,255,0,4,46,255,0,7,55,16,0,0,59
6260   E173 181901FF000C110000002E0000000B010E00004D4EFF00042EFF000737100000
6260   E193 3B
6261   E194                    defb 58,0,0,71,1,14,23,23,0,77,78,0,72,73,255,0,5,45,55,72,73,0,16,255,0,5,71,1,12,9,9,10,0
6261   E194 3A000047010E1717004D4E004849FF00052D3748490010FF000547010C09090A
6261   E1B4 00
6262   E1B5                    defb 24,25,23,17,255,0,8,17,0,74,16,73,255,0,4,1,14,0,23,0,11,0,15,14,0,16,73,255,0,6,74,16,0,0
6262   E1B5 18191711FF000811004A1049FF0004010E0017000B000F0E001049FF00064A10
6262   E1D5 0000
6263   E1D7                    defb 16,0,45,75,0,64,1,0,23,0,0,11,255,0,4,16,255,0,6,61,0,16,73,0,16,76,0,61,0,15,1,255,0,4
6263   E1D7 10002D4B004001001700000BFF000410FF00063D00104900104C003D000F01FF
6263   E1F7 0004
6264   E1F9                    defb 11,255,0,4,16,61,0,34,35,0,0,61,13,16,0,0,16,0,0,17,0,0,69,255,0,4,11,255,0,4,16,61,37
6264   E1F9 0BFF0004103D00222300003D0D10000010000011000045FF00040BFF0004103D
6264   E219 25
6265   E21A                    defb 32,33,36,13,13,1,13,17,61,16,0,0,16,61,0,69,255,0,4,11,0,0,21,22,13,13,24,25,24,25,1,1,3
6265   E21A 2021240D0D010D113D100000103D0045FF00040B000015160D0D181918190101
6265   E23A 03
6266   E23B                    defb 1,255,13,16,21,22,1,1,1,2,1,1,3,3,23,3,1,1,2,1,1,1,2,2,255,1,6,2,1,21,22,3,3
6266   E23B 01FF0D101516010101020101030317030101020101010202FF01060201151603
6266   E25B 03
6267   E25C                    defb 1,1,3,255,54,4,255,3,14,11,3,1,21,22,23,23,3,3,44,255,54,4,44,23,23,23,0,0,23,0,23,23,0
6267   E25C 010103FF3604FF030E0B03011516171703032CFF36042C171717000017001717
6267   E27C 00
6268   E27D                    defb 23,0,23,11,3,2,21,22,0,0,23,23,255,44,6,255,0,4,23,255,0,8,11,3,2,21,22,255,0,6,23,255,0,14
6268   E27D 1700170B0302151600001717FF2C06FF000417FF00080B03021516FF000617FF
6268   E29D 000E
6269   E29F                    defb 23,0,11,3,2,21,22,255,0,23,11,3,1,21,22
6269   E29F 17000B03021516FF00170B03011516
6270   E2AE 1C          numsc  defb 28
6271   E2AF             nmedat defb 0,90,112,72,4,3,72,176,6,4,40,208,2,5,64,192,255
6271   E2AF 005A7048040348B0060428D0020540C0FF
6272   E2C0                    defb 6,4,72,152,0,0,16,176,5,5,120,144,255
6272   E2C0 06044898000010B005057890FF
6273   E2CD                    defb 6,4,32,136,4,6,120,144,0,0,56,80,1,7,128,112,1,7,128,160,255
6273   E2CD 06042088040678900000385001078070010780A0FF
6274   E2E2                    defb 0,0,136,88,4,3,72,152,4,6,96,112,255
6274   E2E2 000088580403489804066070FF
6275   E2EF                    defb 0,0,64,24,6,4,80,152,2,5,40,88,255
6275   E2EF 000040180604509802052858FF
6276   E2FC                    defb 0,0,32,168,2,5,32,136,5,5,120,72,1,10,104,96,255
6276   E2FC 000020A80205208805057848010A6860FF
6277   E30D                    defb 0,0,80,32,6,6,104,168,4,3,8,192,4,6,72,144,1,7,128,64,1,7,128,176,255
6277   E30D 00005020060668A8040308C00406489001078040010780B0FF
6278   E326                    defb 0,0,32,32,4,3,88,56,4,3,24,184,255
6278   E326 0000202004035838040318B8FF
6279   E333                    defb 0,0,72,32,6,4,32,104,4,6,16,128,255
6279   E333 000048200604206804061080FF
6280   E340                    defb 0,0,8,80,2,5,32,56,1,7,128,80,1,7,128,192,6,4,56,136,255
6280   E340 000008500205203801078050010780C006043888FF
6281   E355                    defb 0,0,120,64,2,5,16,112,1,9,80,104,1,9,48,112,255
6281   E355 00007840020510700109506801093070FF
6282   E366                    defb 0,0,120,216,4,3,24,128,2,5,16,192,1,10,72,160,1,10,88,160,1,10,104,160,1,10,120,160,255
6282   E366 000078D804031880020510C0010A48A0010A58A0010A68A0010A78A0FF
6283   E383                    defb 0,0,120,216,1,7,120,104,1,7,120,128,4,6,16,120,255
6283   E383 000078D8010778680107788004061078FF
6284   E394                    defb 0,0,120,216,4,3,48,112,2,5,120,96,255
6284   E394 000078D80403307002057860FF
6285   E3A1                    defb 0,0,120,176,2,5,120,128,255
6285   E3A1 000078B002057880FF
6286   E3AA                    defb 0,0,8,112,3,3,32,88,3,3,32,136,2,5,112,88,255
6286   E3AA 00000870030320580303208802057058FF
6287   E3BB                    defb 0,0,16,112,6,3,40,48,1,7,112,120,2,5,128,80,6,8,72,80,6,8,72,160,255
6287   E3BB 0000107006032830010770780205805006084850060848A0FF
6288   E3D4                    defb 0,0,128,216,2,5,136,144,6,4,88,112,4,3,8,64,4,6,40,112,255
6288   E3D4 000080D802058890060458700403084004062870FF
6289   E3E9                    defb 0,0,16,216,1,7,32,88,1,7,32,152,6,6,8,80,6,8,64,120,6,4,104,168,255
6289   E3E9 000010D801072058010720980606085006084078060468A8FF
6290   E402                    defb 0,0,80,96,6,4,56,184,6,6,104,160,255
6290   E402 00005060060438B8060668A0FF
6291   E40F                    defb 0,0,136,144,2,5,56,184,6,3,80,128,255
6291   E40F 00008890020538B806035080FF
6292   E41C                    defb 0,0,72,208,1,7,72,88,1,7,128,40,255
6292   E41C 000048D00107485801078028FF
6293   E429                    defb 0,0,72,112,4,3,72,160,255
6293   E429 00004870040348A0FF
6294   E432                    defb 0,0,40,104,6,3,96,104,2,5,40,160,255
6294   E432 0000286806036068020528A0FF
6295   E43F                    defb 0,0,72,32,4,8,40,56,4,8,56,72,4,8,72,88,4,8,40,128,4,8,56,144,4,8,72,160,255
6295   E43F 000048200408283804083848040848580408288004083890040848A0FF
6296   E45C                    defb 0,0,72,32,5,5,72,80,4,8,40,56,4,8,40,168,255
6296   E45C 000048200505485004082838040828A8FF
6297   E46D                    defb 0,0,72,32,4,8,24,120,4,8,104,120,1,10,24,184,255
6297   E46D 000048200408187804086878010A18B8FF
6298   E47E                    defb 0,0,120,64,1,9,0,168,1,1,88,176,255
6298   E47E 00007840010900A8010158B0FF
6299   E48B             NUMOBJ equ 20
6300   E48B             objdta equ $
6301   E48B                    defb 63,192,64,32,95,208,95,232,95,244,81,244,84,20,81,148,95,244,95,244,64,4,127,252,42,168,127,252,127,252,0,0,71,0,128,208,0,128,208
6301   E48B 3FC040205FD05FE85FF451F4541451945FF45FF440047FFC2AA87FFC7FFC0000
6301   E4AB 470080D00080D0
6302   E4B2                    defb 1,128,2,192,7,96,14,208,31,248,30,200,31,72,30,200,39,252,79,254,79,234,37,84,0,0,79,254,155,109,159,255,71,1,56,56,1,56,56
6302   E4B2 018002C007600ED01FF81EC81F481EC827FC4FFE4FEA255400004FFE9B6D9FFF
6302   E4D2 47013838013838
6303   E4D9                    defb 1,128,2,192,7,96,14,208,31,248,30,200,31,72,30,200,39,252,79,254,79,234,37,84,0,0,79,254,155,109,159,255,71,254,0,16,254,0,16
6303   E4D9 018002C007600ED01FF81EC81F481EC827FC4FFE4FEA255400004FFE9B6D9FFF
6303   E4F9 47FE0010FE0010
6304   E500                    defb 1,128,2,192,7,96,14,208,31,248,30,200,31,72,30,200,39,252,79,254,79,234,37,84,0,0,79,254,155,109,159,255,71,7,32,168,7,32,168
6304   E500 018002C007600ED01FF81EC81F481EC827FC4FFE4FEA255400004FFE9B6D9FFF
6304   E520 470720A80720A8
6305   E527                    defb 63,192,64,32,95,208,95,232,95,244,81,244,84,20,81,148,95,244,95,244,64,4,127,252,42,168,127,252,127,252,0,0,71,23,40,200,23,40,200
6305   E527 3FC040205FD05FE85FF451F4541451945FF45FF440047FFC2AA87FFC7FFC0000
6305   E547 471728C81728C8
6306   E54E                    defb 63,192,64,32,95,208,95,232,95,244,81,244,84,20,81,148,95,244,95,244,64,4,127,252,42,168,127,252,127,252,0,0,71,15,80,192,15,80,192
6306   E54E 3FC040205FD05FE85FF451F4541451945FF45FF440047FFC2AA87FFC7FFC0000
6306   E56E 470F50C00F50C0
6307   E575                    defb 0,4,0,12,0,0,1,254,0,170,0,0,64,12,96,12,96,12,96,12,0,0,255,254,170,170,0,0,96,12,96,12,71,9,8,104,9,8,104
6307   E575 0004000C000001FE00AA0000400C600C600C600C0000FFFEAAAA0000600C600C
6307   E595 47090868090868
6308   E59C                    defb 15,0,17,128,0,0,2,192,2,192,7,224,27,248,39,252,88,126,121,62,120,122,121,54,121,42,56,84,30,184,7,224,71,6,104,176,6,104,176
6308   E59C 0F001180000002C002C007E01BF827FC587E793E787A7936792A38541EB807E0
6308   E5BC 470668B00668B0
6309   E5C3                    defb 1,0,3,128,7,64,11,160,23,80,47,168,127,84,255,250,85,84,43,168,21,80,11,160,5,64,2,128,1,0,0,0,71,20,16,40,20,16,40
6309   E5C3 0100038007400BA017502FA87F54FFFA55542BA815500BA00540028001000000
6309   E5E3 47141028141028
6310   E5EA                    defb 7,192,27,176,61,120,102,204,99,140,97,12,83,148,46,232,20,80,77,100,111,236,53,88,112,28,5,64,123,188,252,126,71,13,24,208,13,24,208
6310   E5EA 07C01BB03D7866CC638C610C53942EE814504D646FEC3558701C05407BBCFC7E
6310   E60A 470D18D00D18D0
6311   E611                    defb 7,0,52,0,119,4,244,8,174,12,232,26,238,112,245,192,214,133,187,85,221,223,174,112,87,142,74,250,53,84,15,248,71,14,64,96,14,64,96
6311   E611 070034007704F408AE0CE81AEE70F5C0D685BB55DDDFAE70578E4AFA35540FF8
6311   E631 470E40600E4060
6312   E638                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,46,0,126,0,93,0,235,0,209,0,170,0,124,0,71,7,32,88,7,32,88
6312   E638 000000000000000000000000000000001C002E007E005D00EB00D100AA007C00
6312   E658 47072058072058
6313   E65F                    defb 0,0,0,0,3,192,7,224,1,128,63,252,76,50,93,186,113,142,119,238,119,238,113,142,93,186,76,50,63,252,0,0,71,17,48,24,17,48,24
6313   E65F 0000000003C007E001803FFC4C325DBA718E77EE77EE718E5DBA4C323FFC0000
6313   E67F 47113018113018
6314   E686                    defb 0,0,0,0,3,192,7,224,1,128,63,252,76,50,93,186,113,142,119,238,119,238,113,142,93,186,76,50,63,252,0,0,71,19,56,24,19,56,24
6314   E686 0000000003C007E001803FFC4C325DBA718E77EE77EE718E5DBA4C323FFC0000
6314   E6A6 47133818133818
6315   E6AD                    defb 0,0,1,128,7,224,9,112,19,248,19,152,63,188,57,244,121,190,79,254,94,226,127,194,95,194,43,196,149,91,98,166,71,254,0,16,254,0,16
6315   E6AD 0000018007E0097013F813983FBC39F479BE4FFE5EE27FC25FC22BC4955B62A6
6315   E6CD 47FE0010FE0010
6316   E6D4                    defb 7,192,9,224,25,240,23,240,31,240,31,176,15,32,7,192,1,0,1,0,0,128,0,128,0,64,2,32,5,32,0,192,71,10,40,136,10,40,136
6316   E6D4 07C009E019F017F01FF01FB00F2007C0010001000080008000400220052000C0
6316   E6F4 470A28880A2888
6317   E6FB                    defb 0,0,120,0,30,0,7,0,3,160,1,80,0,224,1,80,3,184,7,28,14,12,20,6,40,6,80,2,160,2,64,0,71,21,8,216,21,8,216
6317   E6FB 000078001E00070003A0015000E0015003B8071C0E0C140628065002A0024000
6317   E71B 471508D81508D8
6318   E722                    defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,254,234,234,212,212,170,170,212,212,170,170,212,212,71,14,16,24,14,16,24
6318   E722 000000000000000000000000000000000000FEFEEAEAD4D4AAAAD4D4AAAAD4D4
6318   E742 470E10180E1018
6319   E749                    defb 0,0,0,0,0,0,0,8,55,228,85,122,79,245,86,122,53,164,3,200,4,32,13,176,16,8,53,172,49,140,31,248,71,6,24,64,6,24,64
6319   E749 000000000000000837E4557A4FF5567A35A403C804200DB0100835AC318C1FF8
6319   E769 47061840061840
6320   E770                    defb 120,0,132,0,165,80,133,88,132,0,120,26,128,2,192,127,199,201,207,201,204,127,205,89,204,111,237,217,109,239,12,127,71,26,64,184,26,64,184
6320   E770 78008400A55085588400781A8002C07FC7C9CFC9CC7FCD59CC6FEDD96DEF0C7F
6320   E790 471A40B81A40B8
6321   E797             palett equ $
6322   E797                    defb 0,2,20,19,128,227,200,146,0,2,20,19,128,227,200,146
6322   E797 0002141380E3C8920002141380E3C892
6323   E7A7                    defb 0,35,60,63,224,227,252,255,0,35,60,63,224,227,252,255
6323   E7A7 00233C3FE0E3FCFF00233C3FE0E3FCFF
6324   E7B7                    defb 0,33,39,162,243,64,128,244,0,33,39,162,243,64,128,244
6324   E7B7 002127A2F34080F4002127A2F34080F4
6325   E7C7                    defb 0,44,80,120,108,109,146,219,0,44,80,120,108,109,146,219
6325   E7C7 002C50786C6D92DB002C50786C6D92DB
6326   E7D7             font   equ $
6327   E7D7                    defb 0,0,0,0,0,0,0,0
6327   E7D7 0000000000000000
6328   E7DF                    defb 0,48,120,120,48,48,0,48
6328   E7DF 0030787830300030
6329   E7E7                    defb 0,24,6,6,9,17,32,64
6329   E7E7 0018060609112040
6330   E7EF                    defb 24,52,60,94,126,114,114,60
6330   E7EF 18343C5E7E72723C
6331   E7F7                    defb 0,94,126,126,42,82,4,120
6331   E7F7 005E7E7E2A520478
6332   E7FF                    defb 2,2,14,66,126,66,126,66
6332   E7FF 02020E427E427E42
6333   E807                    defb 126,189,153,90,36,60,0,24
6333   E807 7EBD995A243C0018
6334   E80F                    defb 124,185,246,232,213,239,189,126
6334   E80F 7CB9F6E8D5EFBD7E
6335   E817                    defb 0,12,24,24,24,24,12,0
6335   E817 000C181818180C00
6336   E81F                    defb 0,96,48,48,48,48,96,0
6336   E81F 0060303030306000
6337   E827                    defb 24,52,114,255,149,90,52,24
6337   E827 183472FF955A3418
6338   E82F                    defb 28,62,127,127,87,71,71,62
6338   E82F 1C3E7F7F5747473E
6339   E837                    defb 0,0,0,0,0,24,24,48
6339   E837 0000000000181830
6340   E83F                    defb 0,0,0,0,126,0,0,0
6340   E83F 000000007E000000
6341   E847                    defb 0,0,0,0,0,0,16,0
6341   E847 0000000000001000
6342   E84F                    defb 56,124,254,254,234,226,226,124
6342   E84F 387CFEFEEAE2E27C
6343   E857                    defb 124,254,206,214,230,254,124,0
6343   E857 7CFECED6E6FE7C00
6344   E85F                    defb 24,120,120,24,24,126,126,0
6344   E85F 18787818187E7E00
6345   E867                    defb 252,254,6,124,192,254,254,0
6345   E867 FCFE067CC0FEFE00
6346   E86F                    defb 252,254,6,62,6,254,252,0
6346   E86F FCFE063E06FEFC00
6347   E877                    defb 216,216,216,216,254,254,24,0
6347   E877 D8D8D8D8FEFE1800
6348   E87F                    defb 254,254,192,252,6,254,252,0
6348   E87F FEFEC0FC06FEFC00
6349   E887                    defb 124,252,192,252,198,254,124,0
6349   E887 7CFCC0FCC6FE7C00
6350   E88F                    defb 254,254,6,14,28,24,24,0
6350   E88F FEFE060E1C181800
6351   E897                    defb 124,254,198,124,198,254,124,0
6351   E897 7CFEC67CC6FE7C00
6352   E89F                    defb 124,254,198,254,126,6,6,0
6352   E89F 7CFEC6FE7E060600
6353   E8A7                    defb 0,0,0,48,0,0,48,0
6353   E8A7 0000003000003000
6354   E8AF                    defb 0,0,0,0,0,0,0,0
6354   E8AF 0000000000000000
6355   E8B7                    defb 120,124,126,126,126,66,66,126
6355   E8B7 787C7E7E7E42427E
6356   E8BF                    defb 0,0,0,0,0,0,0,0
6356   E8BF 0000000000000000
6357   E8C7                    defb 0,24,52,36,126,171,126,36
6357   E8C7 001834247EAB7E24
6358   E8CF                    defb 60,14,7,7,7,7,14,60
6358   E8CF 3C0E070707070E3C
6359   E8D7                    defb 0,78,86,78,86,78,86,74
6359   E8D7 004E564E564E564A
6360   E8DF                    defb 60,126,6,126,126,102,102,0
6360   E8DF 3C7E067E7E666600
6361   E8E7                    defb 120,126,6,124,102,126,124,0
6361   E8E7 787E067C667E7C00
6362   E8EF                    defb 62,126,0,96,96,126,62,0
6362   E8EF 3E7E0060607E3E00
6363   E8F7                    defb 124,126,6,102,102,126,124,0
6363   E8F7 7C7E0666667E7C00
6364   E8FF                    defb 62,126,0,124,96,126,62,0
6364   E8FF 3E7E007C607E3E00
6365   E907                    defb 62,126,0,124,96,96,96,0
6365   E907 3E7E007C60606000
6366   E90F                    defb 62,126,0,110,102,126,62,0
6366   E90F 3E7E006E667E3E00
6367   E917                    defb 102,102,6,126,102,102,102,0
6367   E917 6666067E66666600
6368   E91F                    defb 126,126,0,24,24,126,126,0
6368   E91F 7E7E0018187E7E00
6369   E927                    defb 6,6,0,6,6,126,124,0
6369   E927 06060006067E7C00
6370   E92F                    defb 102,110,28,120,124,110,102,0
6370   E92F 666E1C787C6E6600
6371   E937                    defb 96,96,0,96,96,126,62,0
6371   E937 60600060607E3E00
6372   E93F                    defb 99,119,31,107,99,99,99,0
6372   E93F 63771F6B63636300
6373   E947                    defb 124,126,6,102,102,102,102,0
6373   E947 7C7E066666666600
6374   E94F                    defb 60,126,6,102,102,126,60,0
6374   E94F 3C7E0666667E3C00
6375   E957                    defb 124,126,6,126,124,96,96,0
6375   E957 7C7E067E7C606000
6376   E95F                    defb 60,126,6,102,102,112,54,6
6376   E95F 3C7E066666703606
6377   E967                    defb 124,126,6,126,124,110,102,0
6377   E967 7C7E067E7C6E6600
6378   E96F                    defb 62,126,0,60,14,126,124,0
6378   E96F 3E7E003C0E7E7C00
6379   E977                    defb 126,126,0,24,24,24,24,0
6379   E977 7E7E001818181800
6380   E97F                    defb 102,102,6,102,102,126,62,0
6380   E97F 66660666667E3E00
6381   E987                    defb 102,102,6,102,126,60,24,0
6381   E987 666606667E3C1800
6382   E98F                    defb 99,99,3,107,127,119,99,0
6382   E98F 6363036B7F776300
6383   E997                    defb 99,119,46,28,62,119,99,0
6383   E997 63772E1C3E776300
6384   E99F                    defb 102,102,6,126,6,62,60,0
6384   E99F 6666067E063E3C00
6385   E9A7                    defb 126,126,0,12,24,62,126,0
6385   E9A7 7E7E000C183E7E00
6386   E9AF                    defb 30,12,12,12,12,12,12,30
6386   E9AF 1E0C0C0C0C0C0C1E
6387   E9B7                    defb 0,0,192,96,48,24,12,0
6387   E9B7 0000C06030180C00
6388   E9BF                    defb 0,240,48,48,48,48,240,0
6388   E9BF 00F030303030F000
6389   E9C7                    defb 60,78,94,126,122,60,8,24
6389   E9C7 3C4E5E7E7A3C0818
6390   E9CF                    defb 0,0,127,127,42,85,0,127
6390   E9CF 00007F7F2A55007F
6391   E9D7                    defb 0,86,75,85,74,69,32,31
6391   E9D7 00564B554A45201F
6392   E9DF                    defb 0,0,60,6,62,102,62,0
6392   E9DF 00003C063E663E00
6393   E9E7                    defb 0,96,96,124,102,102,124,0
6393   E9E7 0060607C66667C00
6394   E9EF                    defb 60,66,153,161,161,153,66,60
6394   E9EF 3C4299A1A199423C
6395   E9F7                    defb 0,6,6,62,102,102,62,0
6395   E9F7 0006063E66663E00
6396   E9FF                    defb 0,0,60,102,124,96,60,0
6396   E9FF 00003C667C603C00
6397   EA07                    defb 0,28,48,56,48,48,48,0
6397   EA07 001C303830303000
6398   EA0F                    defb 0,0,56,108,108,60,12,120
6398   EA0F 0000386C6C3C0C78
6399   EA17                    defb 0,96,96,124,102,102,102,0
6399   EA17 0060607C66666600
6400   EA1F                    defb 0,24,0,56,24,24,60,0
6400   EA1F 0018003818183C00
6401   EA27                    defb 0,6,0,6,6,6,102,60
6401   EA27 000600060606663C
6402   EA2F                    defb 0,96,108,120,120,108,102,0
6402   EA2F 00606C78786C6600
6403   EA37                    defb 0,48,48,48,48,48,28,0
6403   EA37 0030303030301C00
6404   EA3F                    defb 0,0,54,127,127,107,99,0
6404   EA3F 0000367F7F6B6300
6405   EA47                    defb 0,0,124,102,102,102,102,0
6405   EA47 00007C6666666600
6406   EA4F                    defb 0,0,60,102,102,102,60,0
6406   EA4F 00003C6666663C00
6407   EA57                    defb 0,0,124,102,102,124,96,96
6407   EA57 00007C66667C6060
6408   EA5F                    defb 0,0,62,102,102,62,6,7
6408   EA5F 00003E66663E0607
6409   EA67                    defb 0,0,30,51,48,48,48,0
6409   EA67 00001E3330303000
6410   EA6F                    defb 0,0,62,96,60,6,124,0
6410   EA6F 00003E603C067C00
6411   EA77                    defb 0,48,124,48,48,48,28,0
6411   EA77 00307C3030301C00
6412   EA7F                    defb 212,224,224,224,224,224,224,192
6412   EA7F D4E0E0E0E0E0E0C0
6413   EA87                    defb 127,254,213,224,224,224,252,248
6413   EA87 7FFED5E0E0E0FCF8
6414   EA8F                    defb 0,0,31,39,74,85,72,87
6414   EA8F 00001F274A554857
6415   EA97                    defb 126,129,177,177,129,133,129,126
6415   EA97 7E81B1B18185817E
6416   EA9F                    defb 0,0,120,124,46,86,14,86
6416   EA9F 0000787C2E560E56
6417   EAA7                    defb 0,40,40,92,92,92,0,40
6417   EAA7 0028285C5C5C0028
6418   EAAF                    defb 0,30,24,112,24,24,30,0
6418   EAAF 001E187018181E00
6419   EAB7                    defb 0,24,24,24,24,24,24,0
6419   EAB7 0018181818181800
6420   EABF                    defb 0,240,48,28,48,48,240,0
6420   EABF 00F0301C3030F000
6421   EAC7                    defb 0,60,120,0,0,0,0,0
6421   EAC7 003C780000000000
6422   EACF                    defb 60,66,153,161,161,153,66,60
6422   EACF 3C4299A1A199423C
6423   EAD7             jtab   equ $
6424   EAD7 63                 defb 99
6425   EAD8             keys   defb 35,27,29,28,16,31,1,36,28,20,12
6425   EAD8 231B1D1C101F01241C140C
6426   EAE3             	savetap "test.tap",start
6427   EAE3             
