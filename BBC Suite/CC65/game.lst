ca65 V2.9.2 - (C) Copyright 1998-2000 Ullrich von Bassewitz
Main file   : game.asm
Current file: game.asm

000000r 1               ;----------------------------------------------
000000r 1               ; Common AGD engine
000000r 1               ; Z80 conversion by Kees van Oss 2017
000000r 1               ; BBC Micro version by Kieran Connell 2018
000000r 1               ;----------------------------------------------
000000r 1               .DEFINE asm_code $0e00		; assembly address _BEEB
000000r 1               .DEFINE load_address $1200	; load address _BEEB
000000r 1               .DEFINE header   0			; Header Wouter Ras emulator
000000r 1               .DEFINE filenaam "AGD"
000000r 1               
000000r 1               .segment "ZEROPAGE"
000000r 1               
000000r 1               .include "z80-zp.inc"
000000r 1               .include "engine-zp.inc"
000000r 2               ;ws	 = $60
000000r 2               
000000r 2  xx           z80_f: .res 1;	 = ws+$00
000001r 2  xx           z80_a: .res 1;	 = ws+$01
000002r 2               z80_af	 = z80_f
000002r 2               
000002r 2  xx           z80_c: .res 1;	 = ws+$02
000003r 2  xx           z80_b: .res 1;	 = ws+$03
000004r 2               z80_bc	 = z80_c
000004r 2               
000004r 2  xx           z80_e: .res 1;	 = ws+$04
000005r 2  xx           z80_d: .res 1;	 = ws+$05
000006r 2               z80_de	 = z80_e
000006r 2               
000006r 2  xx           z80_l: .res 1;	 = ws+$06
000007r 2  xx           z80_h: .res 1;	 = ws+$07
000008r 2               z80_hl	 = z80_l
000008r 2               
000008r 2  xx           z80_x: .res 1;    = ws+$08
000009r 2  xx           z80_i: .res 1;    = ws+$09
00000Ar 2               z80_ix	 = z80_x
00000Ar 2               
00000Ar 2  xx xx        z80_iy: .res 2;	 = ws+$0a
00000Cr 2               
00000Cr 2  xx           z80_fp: .res 1;	 = ws+$0c
00000Dr 2  xx           z80_ap: .res 1;	 = ws+$0d
00000Er 2               
00000Er 2  xx           z80_cp: .res 1;	 = ws+$0e
00000Fr 2  xx           z80_bp: .res 1;	 = ws+$0f
000010r 2               z80_bcp	 = z80_cp
000010r 2               
000010r 2  xx           z80_ep: .res 1;	 = ws+$10
000011r 2  xx           z80_dp: .res 1;	 = ws+$11
000012r 2               z80_dep	 = z80_ep
000012r 2               
000012r 2  xx           z80_lp: .res 1;	 = ws+$12
000013r 2  xx           z80_hp: .res 1;	 = ws+$13
000014r 2               z80_hlp	 = z80_lp
000014r 2               
000014r 2  xx xx        z80_sp: .res 2;   = ws+$14
000016r 2               
000016r 2  xx           z80_reg0: .res 1; = ws+$16
000017r 2  xx           z80_reg1: .res 1; = ws+$17
000018r 2  xx           z80_reg2: .res 1; = ws+$18
000019r 2  xx           z80_reg3: .res 1; = ws+$19
00001Ar 2               
00001Ar 2               ;z80_r: .res 1;	 = ws+$1a
00001Ar 2               
00001Ar 1               
00001Ar 2               ; Variables start here.
00001Ar 2               
00001Ar 2  xx           scno:	.res 1			; present screen number.
00001Br 2  xx           numlif:	.res 1			; number of lives.
00001Cr 2               
00001Cr 2  xx           vara:	.res 1			; general-purpose variable.
00001Dr 2  xx           varb:	.res 1			; general-purpose variable.
00001Er 2  xx           varc:	.res 1			; general-purpose variable.
00001Fr 2  xx           vard:	.res 1			; general-purpose variable.
000020r 2  xx           vare:	.res 1			; general-purpose variable.
000021r 2  xx           varf:	.res 1			; general-purpose variable.
000022r 2  xx           varg:	.res 1			; general-purpose variable.
000023r 2  xx           varh:	.res 1			; general-purpose variable.
000024r 2  xx           vari:	.res 1			; general-purpose variable.
000025r 2  xx           varj:	.res 1			; general-purpose variable.
000026r 2  xx           vark:	.res 1			; general-purpose variable.
000027r 2  xx           varl:	.res 1			; general-purpose variable.
000028r 2  xx           varm:	.res 1			; general-purpose variable.
000029r 2  xx           varn:	.res 1			; general-purpose variable.
00002Ar 2  xx           varo:	.res 1			; general-purpose variable.
00002Br 2  xx           varp:	.res 1			; general-purpose variable.
00002Cr 2  xx           varq:	.res 1			; general-purpose variable.
00002Dr 2  xx           varr:	.res 1			; general-purpose variable.
00002Er 2  xx           vars:	.res 1			; general-purpose variable.
00002Fr 2  xx           vart:	.res 1			; general-purpose variable.
000030r 2  xx           varu:	.res 1			; general-purpose variable.
000031r 2  xx           varv:	.res 1			; general-purpose variable.
000032r 2  xx           varw:	.res 1			; general-purpose variable.
000033r 2  xx           varz:	.res 1			; general-purpose variable.
000034r 2               
000034r 2  xx           charx:	.res 1			; cursor x position.
000035r 2  xx           chary:	.res 1			; cursor y position.
000036r 2               
000036r 2  xx           clock:	.res 1			; last clock reading.
000037r 2  xx           varrnd:	.res 1	        ; last random number.
000038r 2  xx           varobj:	.res 1  	    ; last object number.
000039r 2  xx           varopt:	.res 1     		; last option chosen from menu.
00003Ar 2  xx           varblk:	.res 1  		; block type.
00003Br 2  xx           nexlev:	.res 1			; next level flag.
00003Cr 2  xx           restfl:	.res 1			; restart screen flag.
00003Dr 2  xx           deadf:	.res 1			; dead flag.
00003Er 2  xx           gamwon:	.res 1			; game won flag.
00003Fr 2  xx           dispx:	.res 1			; cursor x position.
000040r 2  xx           dispy:	.res 1			; cursor y position.
000041r 2               
000041r 2  xx           contrl:	.res 1			; control = keyboard, 1 = Kempston, 2 = Sinclair, 3 = Mouse.
000042r 2  xx           joyval:	.res 1			; joystick reading.
000043r 2  xx           frmno:	.res 1			; selected frame.
000044r 2               
000044r 2               ;----------------------------------------------------
000044r 2               ; Missing vars 
000044r 2               ;----------------------------------------------------
000044r 2               
000044r 2  xx           loopa:		.res 1
000045r 2  xx           loopb:		.res 1
000046r 2  xx           loopc:		.res 1
000047r 2               
000047r 2  xx xx        FontPtr:    .res 2
000049r 2               
000049r 2               ; Local vars
000049r 2               
000049r 2  xx xx        scraddr:    .res 2
00004Br 2  xx xx        fntaddr:    .res 2
00004Dr 2  xx xx        tileaddr:   .res 2
00004Fr 2  xx xx        bufaddr:    .res 2
000051r 2  xx xx        tmp:        .res 2
000053r 2  xx xx        scr_l:      .res 2
000055r 2  xx xx        scr_r:      .res 2
000057r 2  xx xx        scr_txt:    .res 2
000059r 2               
000059r 1               .org asm_code-22*header
000E00  1               
000E00  1               .IF header
000E00  1               ;********************************************************************
000E00  1               ; ATM Header for Atom emulator Wouter Ras
000E00  1               
000E00  1               name_start:
000E00  1               	.byte filenaam			; Filename
000E00  1               name_end:
000E00  1               	.repeat 16-name_end+name_start	; Fill with 0 till 16 chars
000E00  1               	  .byte $0
000E00  1               	.endrep
000E00  1               
000E00  1               	.word asm_code			; 2 bytes startaddress
000E00  1               	.word exec			; 2 bytes linkaddress
000E00  1               	.word eind_asm-start_asm	; 2 bytes filelength
000E00  1               
000E00  1               ;********************************************************************
000E00  1               .ENDIF
000E00  1               
000E00  1               .segment "CODE"
000E00  1               
000E00  1               start_asm:
000E00  1               
000E00  1  4C 5E 7B     	jmp relocate + load_address - asm_code
000E03  1               
000E03  1               exec_game:
000E03  1               	.include "game.inc"
000E03  1               	.include "z80.asm"
000E03  2               .include "terrapins.inc" 
000E03  2               
000E03  3               ; Game engine code --------------------------------------------------------------
000E03  3               
000E03  3               ; Arcade Game Designer.
000E03  3               ; (C) 2008 Jonathan Cauldwell.
000E03  3               ; ZX Spectrum Next Engine v0.1.
000E03  3               
000E03  3               ; Global definitions ------------------------------------------------------------
000E03  3               
000E03  3               	FONT = font			; Font address
000E03  3               
000E03  3               ; Block characteristics.
000E03  3               
000E03  3               	PLATFM = 1			; platform.
000E03  3               	WALL = PLATFM + 1	; solid wall.
000E03  3               	LADDER = WALL + 1	; ladder.
000E03  3               	FODDER = LADDER + 1	; fodder block.
000E03  3               	DEADLY = FODDER + 1	; deadly block.
000E03  3               	CUSTOM = DEADLY + 1	; custom block.
000E03  3               	NUMTYP = CUSTOM + 1	; number of types.
000E03  3               
000E03  3               ; Sprites.
000E03  3               
000E03  3               	NUMSPR = 12			; number of sprites.
000E03  3               	TABSIZ = 17			; size of each entry.
000E03  3               	SPRBUF = NUMSPR * TABSIZ; size of entire table.
000E03  3               	NMESIZ = 4			; bytes stored in nmetab for each sprite.
000E03  3               
000E03  3               ; Sprite table variable offsets.
000E03  3               
000E03  3               	var_Type = 0		; sprite type
000E03  3               	var_Image = 1		; sprite time number
000E03  3               	var_Frame = 2		; sprite frame
000E03  3               	var_Y = 3			; sprite y coordinate
000E03  3               	var_X = 4			; sprite X coordinate
000E03  3               
000E03  3               	var_newType = 5		; sprite new type
000E03  3               	var_newImage = 6	; sprite new image number
000E03  3               	var_newFrame = 7	; sprite new frame
000E03  3               	var_newY = 8		; sprite new y coordinate
000E03  3               	var_newX = 9		; sprite new x coordinate
000E03  3               	
000E03  3               	var_Direction = 10	; sprite direction
000E03  3               	var_Param1 = 11		; sprite parameter 1
000E03  3               	var_Param2 = 12		; sprite parameter 2
000E03  3               
000E03  3               	var_jumpLo = 13		; sprite jump ptr low
000E03  3               	var_jumpHi = 14		; sprite jump ptr high
000E03  3               	var_dataLo = 15		; sprite data ptr low
000E03  3               	var_dataHi = 16		; sprite data ptr high
000E03  3               
000E03  3               ; Particle engine.
000E03  3               
000E03  3               	NUMSHR = 55			; pieces of shrapnel.
000E03  3               	SHRSIZ = 6			; bytes per particle.
000E03  3               
000E03  3               ; System constants
000E03  3               
000E03  3               	ScreenSize  = $1800	; Startaddress video RAM _BEEB
000E03  3               	ScreenAddr 	= $8000 - ScreenSize	; Screen size bytes _BEEB
000E03  3               	ScreenRowBytes = 256				; 40 columns
000E03  3               
000E03  3               	SpriteMaxY	= 185	; used for clipping bottom of screen
000E03  3               
000E03  3               ; _BEEB MOS calls
000E03  3               
000E03  3               	OSBYTE	 = $fff4
000E03  3               	OSFILE	 = $ffdd
000E03  3               	OSWRCH	 = $ffee
000E03  3               	OSASCI	 = $ffe3
000E03  3               	OSWORD	 = $fff1
000E03  3               	OSFIND	 = $ffce
000E03  3               	OSGBPB	 = $ffd1
000E03  3               	OSARGS	 = $ffda
000E03  3               
000E03  3               	PAL_black = 0 ^ 7
000E03  3               	PAL_white = 7 ^ 7
000E03  3               
000E03  3               ; Conditional compilation flags
000E03  3               ; Flags are set in commandline assembly
000E03  3               
000E03  3               ;	mflag = 0 		; MENU + INV
000E03  3               ;	pflag = 0		; Particle engine
000E03  3               ;	sflag = 0		; scrollytext
000E03  3               ;	fflag = 1		; Fontflag
000E03  3               
000E03  3               .if iflag
000E03  3               	TxtInvert   = $ff	; Invert byte for character printing
000E03  3               	ScrFillByte = $ff	; Screen fill byte for CLS
000E03  3               .else
000E03  3               	TxtInvert   = $00	; Invert byte for character printing
000E03  3               	ScrFillByte = $00	; Screen fill byte for CLS
000E03  3               .endif
000E03  3               	ScrMode     = 4		; Screen mode:	_BEEB (320x256x2)
000E03  3               
000E03  3               ; Workspace _BEEB Lower RAM
000E03  3               
000E03  3               MAP 	= $300				; properties map buffer (3x256 bytes)
000E03  3               SCADTB_lb = MAP + $300
000E03  3               SCADTB_hb = SCADTB_lb + $100
000E03  3               
000E03  3               .if pflag
000E03  3               SHRAPN 	= $B00 - (NUMSHR * SHRSIZ)	; shrapnel table (55x6 bytes)
000E03  3               .endif
000E03  3               
000E03  3               ;===============================================================
000E03  3               ; Game starts here
000E03  3               ;===============================================================
000E03  3               
000E03  3               ;--------------------------------------------------------------
000E03  3               ; If a font is required...
000E03  3               ;--------------------------------------------------------------
000E03  3               
000E03  3               clear_zp:
000E03  3  A2 00        	ldx #0
000E05  3  8A           	txa
000E06  3               	:
000E06  3  95 00        	sta $00, x
000E08  3  E8           	inx
000E09  3  E0 A0        	cpx #$a0
000E0B  3  D0 F9        	bne :-
000E0D  3               
000E0D  3               	; Init vars
000E0D  3  A9 03        	lda #3
000E0F  3  85 rr        	sta numlif
000E11  3               
000E11  3  A2 FF        	ldx #255
000E13  3  86 rr        	stx varrnd
000E15  3  86 rr        	stx varopt
000E17  3  86 rr        	stx varblk
000E19  3  CA           	dex
000E1A  3  86 rr        	stx varobj
000E1C  3  A9 2D        	lda #<(FONT-256)	; address of font.
000E1E  3  85 rr        	sta FontPtr
000E20  3  A9 73        	lda #>(FONT-256)
000E22  3  85 rr        	sta FontPtr+1
000E24  3               
000E24  3  20 AC 0F     	jsr game	 		; start the game.
000E27  3               
000E27  3  A2 FF        	ldx #$ff
000E29  3  A0 7F        	ldy #$7f
000E2B  3  A9 81        	lda #$81
000E2D  3  20 F4 FF     	jsr OSBYTE
000E30  3               
000E30  3  4C 03 0E     	jmp clear_zp
000E33  3               
000E33  3               ; Don't change the order of these four.  
000E33  3               ; Menu routine relies on winlft following wintop.
000E33  3               
000E33  3  00           wintop:	.byte WINDOWTOP		; top of window.
000E34  3  00           winlft:	.byte WINDOWLFT		; left edge.
000E35  3  17           winhgt:	.byte WINDOWHGT		; window height.
000E36  3  1A           winwid:	.byte WINDOWWID		; window width.
000E37  3  09           numob:	.byte NUMOBJ		; number of objects in game.
000E38  3               
000E38  3               ; Pixel versions of wintop, winlft, winhgt, winwid.
000E38  3               
000E38  3  00           wntopx:	.byte (8 * WINDOWTOP)
000E39  3  00           wnlftx:	.byte (8 * WINDOWLFT)
000E3A  3  A8           wnbotx:	.byte ((WINDOWTOP * 8) + (WINDOWHGT * 8) - 16)
000E3B  3  BE           wnrgtx:	.byte ((WINDOWLFT * 8) + (WINDOWWID * 8) - 16)-2
000E3C  3               
000E3C  3               ; Make sure pointers are arranged in the same order as the data itself.
000E3C  3               
000E3C  3  D0 6D        frmptr:	.word frmlst         ; sprite frames.
000E3E  3               
000E3E  3               ; Assorted game routines which can go in contended memory.
000E3E  3               
000E3E  3               ;--------------------------------------------------------------
000E3E  3               ; Modify for inventory.
000E3E  3               ; called by the INV command
000E3E  3               ;
000E3E  3               ; Input:
000E3E  3               ;  X   = message nr with objects seperated with ,
000E3E  3               ;
000E3E  3               ; Output:
000E3E  3               ;  OPT = selected line nr of INV menu
000E3E  3               ;--------------------------------------------------------------
000E3E  3               
000E3E  3               .if mflag
000E3E  3               TmpAddr:	.byte 0,0
000E3E  3               
000E3E  3               minve:
000E3E  3               	lda #<(invdis)		; routine address.
000E3E  3               	sta mod0+1		; set up menu routine.
000E3E  3               	sta mod2+1		; set up count routine.
000E3E  3               	lda #>(invdis)
000E3E  3               	sta mod0+2
000E3E  3               	sta mod2+2
000E3E  3               	lda #<(fopt)		; find option from available objects.
000E3E  3               	sta mod1+1		; set up routine.
000E3E  3               	lda #>(fopt)
000E3E  3               	sta mod1+1+1
000E3E  3               	jmp dbox		; do menu routine.
000E3E  3               
000E3E  3               ;--------------------------------------------------------------
000E3E  3               ; Modify for menu.
000E3E  3               ; called by the MENU command
000E3E  3               ;
000E3E  3               ; Input:
000E3E  3               ;  X   = message nr with menu items seperated with ,
000E3E  3               ;
000E3E  3               ; Output:
000E3E  3               ;  OPT = selected line nr of MENU menu
000E3E  3               ;--------------------------------------------------------------
000E3E  3               
000E3E  3               mmenu:
000E3E  3               	lda #<(always)		; routine address.
000E3E  3               	sta mod0+1		; set up routine.
000E3E  3               	sta mod2+1		; set up count routine.
000E3E  3               	lda #>(always)
000E3E  3               	sta mod0+2
000E3E  3               	sta mod2+2
000E3E  3               
000E3E  3               	lda #<(fstd)		; standard option selection.
000E3E  3               	sta mod1+1		; set up routine.
000E3E  3               	lda #>(fstd)
000E3E  3               	sta mod1+2
000E3E  3               
000E3E  3               ; Drop through into box routine.
000E3E  3               
000E3E  3               ;--------------------------------------------------------------
000E3E  3               ; Work out size of box for message or menu.
000E3E  3               ;--------------------------------------------------------------
000E3E  3               
000E3E  3               dbox:
000E3E  3               	lda #<(msgdat)		; pointer to messages.
000E3E  3               	sta z80_l
000E3E  3               	lda #>(msgdat)
000E3E  3               	sta z80_h
000E3E  3               	
000E3E  3               	jsr getwrd		; get message number.
000E3E  3               
000E3E  3               	lda z80_h		; store pointer to message.
000E3E  3               	sta TmpAddr
000E3E  3               	lda z80_l
000E3E  3               	sta TmpAddr+1
000E3E  3               
000E3E  3               	lda #1			; height.
000E3E  3               	sta z80_d
000E3E  3               	lda #0			; start at object zero.
000E3E  3               	sta combyt		; store number of object in combyt.
000E3E  3               	sta z80_e		; maximum width.
000E3E  3               dbox5:
000E3E  3               	lda #0			; this line"s width.
000E3E  3               	sta z80_b
000E3E  3               mod2:
000E3E  3               	jsr always		; item in player"s possession?
000E3E  3               	cmp #255
000E3E  3               	bne dbox6		; not in inventory, skip this line.
000E3E  3               	inc z80_d		; add to tally.
000E3E  3               dbox6:
000E3E  3               	ldy #0			; get character.
000E3E  3               	lda (z80_hl),y
000E3E  3               	sta z80_a
000E3E  3               	inc z80_l		; next character.
000E3E  3               	bne :+
000E3E  3               	inc z80_h
000E3E  3               :
000E3E  3               	lda z80_a		; reached end of line?
000E3E  3               	cmp #','
000E3E  3               	beq dbox3		; yes.
000E3E  3               	cmp #13
000E3E  3               	beq dbox3		; yes.
000E3E  3               	inc z80_b		; add to this line"s width.
000E3E  3               	lda z80_a
000E3E  3               	bmi dbox4		; end of message? yes, end count.
000E3E  3               	jmp dbox6		; repeat until we find the end.
000E3E  3               dbox3:
000E3E  3               	lda z80_e		; maximum line width.
000E3E  3               	cmp z80_b		; have we exceeded longest so far?
000E3E  3               	bpl dbox5		; no, carry on looking.
000E3E  3               	lda z80_b		; make this the widest so far.
000E3E  3               	sta z80_e
000E3E  3               	jmp dbox5		; keep looking.
000E3E  3               dbox4:
000E3E  3               	lda z80_e		; maximum line width.
000E3E  3               	cmp z80_b		; have we exceeded longest so far?
000E3E  3               	bpl dbox8		; no, carry on looking.
000E3E  3               	lda z80_b		; final line is the longest so far.
000E3E  3               	sta z80_e
000E3E  3               dbox8:
000E3E  3               	dec z80_d		; decrement items found.
000E3E  3               	bne :+			; total was zero.
000E3E  3               	jmp dbox15		
000E3E  3               :
000E3E  3               	lda z80_e		; longest line.
000E3E  3               	bne :+			; was it zero?
000E3E  3               	jmp dbox15		; total was zero.
000E3E  3               :
000E3E  3               	sta bwid		; set up size.
000E3E  3               	lda z80_d
000E3E  3               	sta blen
000E3E  3               
000E3E  3               ;--------------------------------------------------------------
000E3E  3               ; That's set up our box size.
000E3E  3               ;--------------------------------------------------------------
000E3E  3               
000E3E  3               	lda winhgt		; window height in characters.
000E3E  3               	sec
000E3E  3               	sbc z80_d		; subtract height of box.
000E3E  3               	lsr a			; divide by 2.
000E3E  3               	clc
000E3E  3               	adc wintop		; add top edge of window.
000E3E  3               	sta btop		; set up box top.
000E3E  3               
000E3E  3               	lda winwid		; window width in characters.
000E3E  3               	sec	
000E3E  3               	sbc z80_e		; subtract box width.
000E3E  3               	lsr a			; divide by 2.
000E3E  3               	clc
000E3E  3               	adc winlft		; add left edge of window.
000E3E  3               	sta blft		; box left.
000E3E  3               
000E3E  3               	lda FontPtr		; font.
000E3E  3               	sta grbase		; set up for text display.
000E3E  3               	lda FontPtr+1
000E3E  3               	sta grbase+1
000E3E  3               
000E3E  3               	lda TmpAddr+1		; restore message pointer.
000E3E  3               	sta z80_l
000E3E  3               	lda TmpAddr
000E3E  3               	sta z80_h
000E3E  3               
000E3E  3               	lda btop		; box top.
000E3E  3               	sta dispy		; set display coordinate.
000E3E  3               	lda #0			; start at object zero.
000E3E  3               	sta combyt		; store number of object in combyt.
000E3E  3               dbox2:
000E3E  3               	lda combyt		; get object number.
000E3E  3               	sta z80_a
000E3E  3               mod0:
000E3E  3               	jsr always		; check inventory for display.
000E3E  3               	cmp #255
000E3E  3               	beq :+			
000E3E  3               	jmp dbox13		; not in inventory, skip this line.
000E3E  3               :
000E3E  3               	lda blft		; box left.
000E3E  3               	sta dispx		; set left display position.
000E3E  3               	lda bwid		; box width.
000E3E  3               	sta z80_b		; store width.
000E3E  3               dbox0:
000E3E  3               	ldy #0			; get character.
000E3E  3               	lda (z80_hl),y
000E3E  3               	cmp #','		; end of line?
000E3E  3               	beq dbox1		; yes, next one.
000E3E  3               	cmp #13			; end of line?
000E3E  3               	beq dbox1		; yes, next one.
000E3E  3               
000E3E  3               	dec z80_b		; one less to display.
000E3E  3               	and #127		; remove terminator.
000E3E  3               
000E3E  3               	jsr pchr		; display on screen.
000E3E  3               
000E3E  3               	ldy #0
000E3E  3               	lda (z80_hl),y		; get character.
000E3E  3               	sta z80_a
000E3E  3               	inc z80_l		; next character.
000E3E  3               	bne :+
000E3E  3               	inc z80_h
000E3E  3               :
000E3E  3               	lda z80_a
000E3E  3               	cmp #128		; end of message?
000E3E  3               	bmi :+
000E3E  3               	jmp dbox7		; yes, job done.
000E3E  3               :
000E3E  3               	lda z80_b		; chars remaining.
000E3E  3               	beq :+			; are any left?
000E3E  3               	jmp dbox0		; yes, continue.
000E3E  3               :
000E3E  3               ;---------------------------------------------------
000E3E  3               ; Reached limit of characters per line.
000E3E  3               ;---------------------------------------------------
000E3E  3               
000E3E  3               dbox9:
000E3E  3               	ldy #0
000E3E  3               	lda (z80_hl),y		; get character.
000E3E  3               	inc z80_l		; next one.
000E3E  3               	bne :+
000E3E  3               	inc z80_h
000E3E  3               :
000E3E  3               	cmp #','		; another line?
000E3E  3               	beq dbox10		; yes, do next line.
000E3E  3               	cmp #13			; another line?
000E3E  3               	beq dbox10		; yes, do next line.
000E3E  3               	cmp #128		; end of message?
000E3E  3               	bcs :+
000E3E  3               	jmp dbox11		; yes, finish message.
000E3E  3               :
000E3E  3               	jmp dbox9
000E3E  3               
000E3E  3               ;---------------------------------------------------
000E3E  3               ; Fill box to end of line.
000E3E  3               ;---------------------------------------------------
000E3E  3               
000E3E  3               dboxf:
000E3E  3               	lda #32			; space character.
000E3E  3               	jsr pchr		; display character.
000E3E  3               	dec z80_b
000E3E  3               	beq :+
000E3E  3               	jmp dboxf		; repeat for remaining chars on line.
000E3E  3               :
000E3E  3               	rts
000E3E  3               dbox1:
000E3E  3               	inc z80_l		; skip character.
000E3E  3               	bne :+
000E3E  3               	inc z80_h
000E3E  3               :
000E3E  3               	jsr dboxf		; fill box out to right side.
000E3E  3               dbox10:
000E3E  3               	inc dispy		; y coordinate down a line next position.
000E3E  3               	jmp dbox2		; next line.
000E3E  3               dbox7:
000E3E  3               	lda z80_b		; chars remaining.
000E3E  3               	bne :+			; are any left?
000E3E  3               	jmp dbox11		; no, nothing to draw.
000E3E  3               :
000E3E  3               	jsr dboxf		; fill message to line.
000E3E  3               
000E3E  3               ;------------------------------------------------------
000E3E  3               ; Drawn the box menu, now select option.
000E3E  3               ;------------------------------------------------------
000E3E  3               
000E3E  3               dbox11:
000E3E  3               	lda btop		; box top.
000E3E  3               	sta dispy		; set bar position.
000E3E  3               dbox14:
000E3E  3               	jsr joykey		; get controls.
000E3E  3               	cmp #$7f		; anything pressed?
000E3E  3               	bne dbox14		; yes, debounce it.
000E3E  3               	jsr dbar		; draw bar.
000E3E  3               dbox12:
000E3E  3               	jsr joykey		; get controls.
000E3E  3               	cmp #$7f		; anything pressed?
000E3E  3               	beq dbox12		; no, nothing.
000E3E  3               	and #16			; fire button pressed?
000E3E  3               	bne :+
000E3E  3               mod1:
000E3E  3               	jmp fstd		; yes, job done.
000E3E  3               :
000E3E  3               	jsr dbar		; delete bar.
000E3E  3               
000E3E  3               	lda joyval		; joystick reading.
000E3E  3               	and #8			; going up?
000E3E  3               	beq dboxu		; yes, go up.
000E3E  3               
000E3E  3               	ldx dispy		; vertical position of bar.
000E3E  3               	inx			; look down.
000E3E  3               	txa
000E3E  3               	sec
000E3E  3               	sbc btop		; find distance from top.
000E3E  3               	cmp blen		; top of box.
000E3E  3               	bne :+
000E3E  3               	jmp dbox14		; yes, go no further.
000E3E  3               :
000E3E  3               	inc dispy		; move bar.
000E3E  3               	jmp dbox14		; continue.
000E3E  3               dboxu:
000E3E  3               	lda dispy		; vertical position of bar.
000E3E  3               	cmp btop		; are we at the top?
000E3E  3               	bne :+
000E3E  3               	jmp dbox14		; yes, go no further.
000E3E  3               :
000E3E  3               	dec dispy		; move bar.
000E3E  3               	jmp dbox14		; continue.
000E3E  3               fstd:
000E3E  3               	lda dispy		; bar position.
000E3E  3               	sec
000E3E  3               	sbc btop		; find selected option.
000E3E  3               	sta varopt		; store the option.
000E3E  3               	jmp redraw		; redraw the screen.
000E3E  3               
000E3E  3               ;------------------------------------------------------
000E3E  3               ; Option not available.  Skip this line.
000E3E  3               ;------------------------------------------------------
000E3E  3               
000E3E  3               dbox13:
000E3E  3               	ldy #0
000E3E  3               	lda (z80_hl),y		; get character.
000E3E  3               	inc z80_l		; next one.
000E3E  3               	bne :+
000E3E  3               	inc z80_h
000E3E  3               :
000E3E  3               	cmp #','		; another line?
000E3E  3               	bne :+
000E3E  3               	jmp dbox2		; yes, do next line.
000E3E  3               :
000E3E  3               	cmp #13			; another line?
000E3E  3               	bne :+
000E3E  3               	jmp dbox2		; yes, do next line.
000E3E  3               :
000E3E  3               
000E3E  3               	bpl :+			; end of message?
000E3E  3               	jmp dbox11		; yes, finish message.
000E3E  3               :
000E3E  3               	jmp dbox13
000E3E  3               dbox15:
000E3E  3               	lda TmpAddr		; pop message pointer from the stack.
000E3E  3               	sta z80_h
000E3E  3               	lda TmpAddr+1
000E3E  3               	sta z80_l
000E3E  3               	rts
000E3E  3               
000E3E  3               ;------------------------------------------------------
000E3E  3               ; Invert bar
000E3E  3               ;------------------------------------------------------
000E3E  3               
000E3E  3               dbar:
000E3E  3               	lda blft		; box left.
000E3E  3               	sta dispx		; set display coordinate.
000E3E  3               	jsr gprad		; get printing address.
000E3E  3               
000E3E  3               	lda bwid		; box width.
000E3E  3               	sta z80_c		; loop counter in c.
000E3E  3               	lda z80_h		
000E3E  3               	sta z80_d		; store screen address high byte.
000E3E  3               dbar1:
000E3E  3               	ldx #7			; pixel height in b.
000E3E  3               dbar0:
000E3E  3               	ldy scrtab,x
000E3E  3               	lda (scraddr),y		; get screen byte.
000E3E  3               	eor #255		; reverse all bits.
000E3E  3               	sta (scraddr),y		; write back to screen.
000E3E  3               	dex			; next line down.
000E3E  3               	bpl dbar0		; draw rest of character.
000E3E  3               
000E3E  3               	clc
000E3E  3               	lda scraddr		; one char right.
000E3E  3               	adc #8
000E3E  3               	sta scraddr
000E3E  3               	bcc :+
000E3E  3               	inc scraddr+1
000E3E  3               :
000E3E  3               
000E3E  3               	dec z80_c		; decrement character counter.
000E3E  3               	beq :+
000E3E  3               	jmp dbar1		; repeat for whole line.
000E3E  3               :
000E3E  3               	rts
000E3E  3               
000E3E  3               ;------------------------------------------------------
000E3E  3               ; Point to object
000E3E  3               ;
000E3E  3               ; Input:
000E3E  3               ;  -
000E3E  3               ;
000E3E  3               ; Output:
000E3E  3               ;  A = object number, A=255 if already in possession
000E3E  3               ;------------------------------------------------------
000E3E  3               
000E3E  3               invdis:
000E3E  3               	lda z80_l		; store message text pointer.
000E3E  3               	pha
000E3E  3               	lda z80_h
000E3E  3               	pha
000E3E  3               	lda combyt		; object number.
000E3E  3               	inc combyt		; ready for next one.
000E3E  3               	jsr gotob		; check if we have object.
000E3E  3               	tay
000E3E  3               	pla
000E3E  3               	sta z80_h
000E3E  3               	pla
000E3E  3               	sta z80_l
000E3E  3               	tya
000E3E  3               	rts
000E3E  3               
000E3E  3               ;------------------------------------------------------
000E3E  3               ; Find option selected.
000E3E  3               ;
000E3E  3               ; Input:
000E3E  3               ;  -
000E3E  3               ;
000E3E  3               ; Output:
000E3E  3               ;  OPT = selected object
000E3E  3               ;------------------------------------------------------
000E3E  3               
000E3E  3               fopt:
000E3E  3               	lda dispy
000E3E  3               	sec
000E3E  3               	sbc btop		; find selected option.
000E3E  3               	sta tmp+2		; option selected in b register.
000E3E  3               	inc tmp+2
000E3E  3               
000E3E  3               	lda #0			; set to first item.
000E3E  3               	sta combyt		; object number.
000E3E  3               fopt0:
000E3E  3               	jsr fobj		; find next object in inventory.
000E3E  3               	dec tmp+2
000E3E  3               	bne fopt0		; repeat for relevant steps down the list.
000E3E  3               
000E3E  3               	lda combyt		; get option.
000E3E  3               	sta varopt		; store the option.
000E3E  3               	dec varopt		; one less, due to where we increment combyt.
000E3E  3               	jmp redraw		; redraw the screen.
000E3E  3               fobj:
000E3E  3               	ldy combyt		; object number.
000E3E  3               	inc combyt		; ready for next item.
000E3E  3               	tya
000E3E  3               	jsr gotob		; do we have this item?
000E3E  3               	cmp #255
000E3E  3               	bne :+
000E3E  3               	rts
000E3E  3               :
000E3E  3               	jmp fobj		; yes, it's on the list.
000E3E  3               
000E3E  3               bwid:	.byte 0              ; box/menu width.
000E3E  3               blen:	.byte 0              ; box/menu height.
000E3E  3               btop:	.byte 0              ; box coordinates.
000E3E  3               blft:	.byte 0
000E3E  3               .endif
000E3E  3               
000E3E  3               ;----------------------------------------------------
000E3E  3               ; Wait for keypress.
000E3E  3               ;----------------------------------------------------
000E3E  3               
000E3E  3               prskey:
000E3E  3  8A           	txa
000E3F  3  48           	pha
000E40  3               prsloop:
000E40  3  20 A9 0E     	jsr vsync
000E43  3               ; _BEEB KEYS
000E43  3  A9 79        	lda #$79
000E45  3  A2 01        	ldx #$01
000E47  3  20 F4 FF     	jsr OSBYTE
000E4A  3  E0 FF        	cpx #$ff
000E4C  3  F0 F2        	beq prsloop		; wait until key pressed
000E4E  3  68           	pla
000E4F  3  AA           	tax
000E50  3  60           	rts
000E51  3               
000E51  3               ;----------------------------------------------------
000E51  3               ; Delay routine 1/50 sec
000E51  3               ;
000E51  3               ; Wait 1/60 sec = 16666 usec
000E51  3               ; Wait 208 x 16 =  3328 usec
000E51  3               ;                 19994 usec
000E51  3               ; rts           =     6 usec
000E51  3               ; Total         = 20000 usec
000E51  3               ;----------------------------------------------------
000E51  3               
000E51  3               delay:
000E51  3  8D 3E 16     	sta xtmp
000E54  3               del_loop:
000E54  3  A9 13        	lda #19
000E56  3  20 F4 FF     	jsr OSBYTE		; wait for vsync _BEEB
000E59  3               
000E59  3  A0 D0        	ldy #208		; wait 208 x 16 = 3328 usec
000E5B  3               delay1:
000E5B  3  61 80        	adc ($80,x)		;	 6 usec
000E5D  3  61 80        	adc ($80,x)		;	 6 usec
000E5F  3  88           	dey			;	 2 usec
000E60  3  D0 F9        	bne delay1		;	 2 usec
000E62  3  EA           	nop			; 2 usec
000E63  3  EA           	nop			; 2 usec
000E64  3               				; tot: 20000 usec
000E64  3  CE 3E 16     	dec xtmp
000E67  3  D0 EB        	bne del_loop
000E69  3  60           	rts
000E6A  3               
000E6A  3               ;----------------------------------------------------
000E6A  3               ; Clear sprite table.
000E6A  3               ;
000E6A  3               ; sprtab[0] - sprtab[SPRBUF-1] = 255
000E6A  3               ;----------------------------------------------------
000E6A  3               
000E6A  3               xspr:
000E6A  3  A9 FF        	lda #255		; clear byte.
000E6C  3  A2 00        	ldx #0			; length of table.
000E6E  3               xspr0:
000E6E  3  9D 42 22     	sta sprtab,x		; sprite table.
000E71  3  E8           	inx			; move to next byte.
000E72  3  E0 CC        	cpx #SPRBUF
000E74  3  D0 F8        	bne xspr0		; repeat for rest of table.
000E76  3  60           	rts
000E77  3               
000E77  3               ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
000E77  3               ; Sound, NOT IMPLEMENTED!!!
000E77  3               ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
000E77  3               ;
000E77  3               ;silenc:
000E77  3               ;	jsr silen1 		; silence channel 1.
000E77  3               ;	jsr silen2 		; silence channel 2.
000E77  3               ;	jsr silen3 		; silence channel 3.
000E77  3               ;	jmp plsnd 		; play all channels to switch them off.
000E77  3               ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
000E77  3               
000E77  3               ;-------------------------------------------------------------
000E77  3               ; Initialise all objects.
000E77  3               ;
000E77  3               ; Reset current room,y,x to start room,y,x for all objects
000E77  3               ;-------------------------------------------------------------
000E77  3               
000E77  3               iniob:
000E77  3  A9 D7        	lda #<objdta 		; objects table.
000E79  3  85 rr        	sta z80_x
000E7B  3  A9 72        	lda #>objdta
000E7D  3  85 rr        	sta z80_i
000E7F  3               
000E7F  3  AE 37 0E     	ldx numob 		; number of objects in the game.
000E82  3               iniob0:
000E82  3  A0 23        	ldy #35
000E84  3  B1 rr        	lda (z80_ix),y 		; start screen.
000E86  3  A0 20        	ldy #32
000E88  3  91 rr        	sta (z80_ix),y 		; set start screen.
000E8A  3               
000E8A  3  A0 24        	ldy #36
000E8C  3  B1 rr        	lda (z80_ix),y 		; find start y.
000E8E  3  A0 21        	ldy #33
000E90  3  91 rr        	sta (z80_ix),y 		; set start y.
000E92  3               
000E92  3  A0 25        	ldy #37
000E94  3  B1 rr        	lda (z80_ix),y 		; get initial x.
000E96  3  A0 22        	ldy #34
000E98  3  91 rr        	sta (z80_ix),y 		; set x coord.
000E9A  3               
000E9A  3  18           	clc 			; point to next object.
000E9B  3  A5 rr        	lda z80_x
000E9D  3  69 26        	adc #38			; distance between objects.
000E9F  3  85 rr        	sta z80_x
000EA1  3  90 02        	bcc :+
000EA3  3  E6 rr        	inc z80_i
000EA5  3               :
000EA5  3  CA           	dex 			; repeat.
000EA6  3  D0 DA        	bne iniob0
000EA8  3               
000EA8  3  60           	rts
000EA9  3               
000EA9  3               ;-------------------------------------------------------------
000EA9  3               ; Screen synchronisation.
000EA9  3               ;
000EA9  3               ;  - read joystick/keyboard
000EA9  3               ;  - handle sound
000EA9  3               ;  - sync framerate with clock
000EA9  3               ;  - handle shrapnel every even frame
000EA9  3               ;-------------------------------------------------------------
000EA9  3               
000EA9  3               vsync:
000EA9  3  48           	pha
000EAA  3  98           	tya
000EAB  3  48           	pha
000EAC  3  8A           	txa
000EAD  3  48           	pha
000EAE  3  20 84 19     	jsr joykey		; read joystick/keyboard.
000EB1  3               vsync1:
000EB1  3               ;	lda Timer2_High		; sync framerate with clock
000EB1  3               ;	bne vsync1
000EB1  3               ;	lda #>50000
000EB1  3               ;	sta Timer2_High
000EB1  3               ;	lda #<50000
000EB1  3               ;	sta Timer2_Low
000EB1  3               
000EB1  3  A9 13        	lda #19
000EB3  3  20 F4 FF     	jsr OSBYTE		; _BEEB vsync
000EB6  3               
000EB6  3  A5 rr        	lda clock
000EB8  3  29 01        	and #1
000EBA  3  D0 03        	bne:+
000EBC  3  20 AB 0F     	jsr proshr		; handle shrapnel every even frame
000EBF  3               :
000EBF  3  AD CA 0E     	lda sndtyp
000EC2  3  F0 00        	beq sndskip
000EC4  3               ; _BEEB TODO SOUND
000EC4  3               ;sndloop:
000EC4  3               ;	lda SpeakerBit		; handle sound
000EC4  3               ;	ldy sndtyp
000EC4  3               ;sndwait:
000EC4  3               ;	dey
000EC4  3               ;	bne sndwait
000EC4  3               ;	eor #4
000EC4  3               ;	sta SpeakerBit
000EC4  3               ;	dec sndtyp
000EC4  3               ;	bne sndloop
000EC4  3               sndskip: 
000EC4  3  68           	pla
000EC5  3  AA           	tax
000EC6  3  68           	pla
000EC7  3  A8           	tay
000EC8  3  68           	pla
000EC9  3  60           	rts
000ECA  3               
000ECA  3  00           sndtyp:	.byte 0
000ECB  3               
000ECB  3               ;-----------------------------------------------
000ECB  3               ; Redraw the screen.
000ECB  3               ;
000ECB  3               ; Remove old copy of all sprites for redraw.
000ECB  3               ;-----------------------------------------------
000ECB  3               
000ECB  3               redraw:
000ECB  3  A5 rr        	lda z80_i 		; place sprite pointer on stack.
000ECD  3  48           	pha
000ECE  3  A5 rr        	lda z80_x
000ED0  3  48           	pha
000ED1  3               
000ED1  3  20 74 16     	jsr droom		; show screen layout.
000ED4  3  20 8F 11     	jsr shwob		; draw objects.
000ED7  3               numsp0:
000ED7  3  A9 0C        	lda #NUMSPR		; sprites to draw.
000ED9  3  85 rr        	sta tmp
000EDB  3               
000EDB  3  A9 42        	lda #<sprtab		; sprite table.
000EDD  3  85 rr        	sta z80_x
000EDF  3  A9 22        	lda #>sprtab
000EE1  3  85 rr        	sta z80_i
000EE3  3               redrw0:
000EE3  3  A0 00        	ldy #0
000EE5  3  B1 rr        	lda (z80_ix),y		; old sprite type.
000EE7  3  C9 FF        	cmp #255		; is it enabled?
000EE9  3  F0 0B        	beq redrw1 		; no, find next one.
000EEB  3               
000EEB  3  A0 03        	ldy #var_Y
000EED  3  B1 rr        	lda (z80_ix),y 		; sprite y.
000EEF  3  C9 B1        	cmp #177		; beyond maximum?
000EF1  3  B0 03        	bcs redrw1		; yes, nothing to draw.
000EF3  3               
000EF3  3  20 62 1D     	jsr sspria		; show single sprite.
000EF6  3               
000EF6  3               redrw1:
000EF6  3  18           	clc			; next sprite.
000EF7  3  A5 rr        	lda z80_x
000EF9  3  69 11        	adc #TABSIZ		; distance to next odd/even entry.
000EFB  3  85 rr        	sta z80_x
000EFD  3  90 02        	bcc :+
000EFF  3  E6 rr        	inc z80_i
000F01  3               :
000F01  3  C6 rr        	dec tmp			; repeat for remaining sprites.
000F03  3  D0 DE        	bne redrw0
000F05  3               
000F05  3               rpblc1:
000F05  3               ;	jsr dshrp		; redraw shrapnel.
000F05  3               
000F05  3  68           	pla			; retrieve sprite pointer.
000F06  3  85 rr        	sta z80_x
000F08  3  68           	pla
000F09  3  85 rr        	sta z80_i
000F0B  3               
000F0B  3  60           	rts
000F0C  3               
000F0C  3               ;----------------------------------------------------------------------
000F0C  3               ; Clear screen routine.
000F0C  3               ;
000F0C  3               ; Fill screenmem $8000-$97ff with ScrFillByte
000F0C  3               ;----------------------------------------------------------------------
000F0C  3               
000F0C  3               cls:
000F0C  3  A9 68        	lda #>ScreenAddr		; screen address.
000F0E  3  8D 17 0F     	sta clsloop+2
000F11  3  A9 00        	lda #ScrFillByte
000F13  3  A0 00        	ldy #0
000F15  3               clsloop:
000F15  3  99 00 68     	sta ScreenAddr,y
000F18  3  C8           	iny
000F19  3  D0 FA        	bne clsloop
000F1B  3  EE 17 0F     	inc clsloop+2
000F1E  3  AE 17 0F     	ldx clsloop+2
000F21  3  E0 80        	cpx #>(ScreenAddr+ScreenSize)		; _BEEB
000F23  3  D0 F0        	bne clsloop
000F25  3  60           	rts
000F26  3               
000F26  3               ;----------------------------------------------------------------------
000F26  3               ; Atomic palette is static 
000F26  3               ;----------------------------------------------------------------------
000F26  3               
000F26  3               setcrtc:
000F26  3  A2 0D        	ldx #13
000F28  3               crtcloop:
000F28  3  8E 00 FE     	stx $FE00
000F2B  3  BD 49 0F     	lda crtc_regs_high,x
000F2E  3  8D 01 FE     	sta $FE01
000F31  3  CA           	dex
000F32  3  10 F4        	bpl crtcloop
000F34  3               
000F34  3                   ; Set ULA
000F34  3  A9 88            lda #$88            ; MODE 4
000F36  3  8D 48 02         sta $248            ; Tell the OS or it will mess with ULA settings at vsync
000F39  3  8D 20 FE         sta $FE20
000F3C  3  60           	rts
000F3D  3               
000F3D  3               setpal:
000F3D  3  A2 0F        	ldx #15
000F3F  3               palloop:
000F3F  3  BD 57 0F     	lda ula_pal,x
000F42  3  8D 21 FE     	sta $fe21
000F45  3  CA           	dex
000F46  3  10 F7        	bpl palloop
000F48  3  60           	rts
000F49  3               
000F49  3               crtc_regs_high:
000F49  3  3F           	.byte 63				; R0  horizontal total
000F4A  3  20           	.byte 32				; R1  horizontal displayed
000F4B  3  31           	.byte 49				; R2  horizontal position
000F4C  3  24           	.byte $24				; R3  sync width 40 = &28
000F4D  3  26           	.byte 38				; R4  vertical total
000F4E  3  00           	.byte 0					; R5  vertical total adjust
000F4F  3  18           	.byte 24				; R6  vertical displayed
000F50  3  23           	.byte 35				; R7  vertical position; 35=top of screen
000F51  3  00           	.byte $00				; R8  interlace
000F52  3  07           	.byte 7					; R9  scanlines per row
000F53  3  20           	.byte 32				; R10 cursor start
000F54  3  08           	.byte 8					; R11 cursor end
000F55  3  0D           	.byte >(ScreenAddr/8)	; R12 screen start address, high
000F56  3  00           	.byte <(ScreenAddr/8)	; R13 screen start address, low
000F57  3               
000F57  3               ula_pal:
000F57  3  07           	.byte $00 + PAL_black
000F58  3  17           	.byte $10 + PAL_black
000F59  3  27           	.byte $20 + PAL_black
000F5A  3  37           	.byte $30 + PAL_black
000F5B  3  47           	.byte $40 + PAL_black
000F5C  3  57           	.byte $50 + PAL_black
000F5D  3  67           	.byte $60 + PAL_black
000F5E  3  77           	.byte $70 + PAL_black
000F5F  3  80           	.byte $80 + PAL_white
000F60  3  90           	.byte $90 + PAL_white
000F61  3  A0           	.byte $a0 + PAL_white
000F62  3  B0           	.byte $b0 + PAL_white
000F63  3  C0           	.byte $c0 + PAL_white
000F64  3  D0           	.byte $d0 + PAL_white
000F65  3  E0           	.byte $e0 + PAL_white
000F66  3  F0           	.byte $f0 + PAL_white
000F67  3               
000F67  3               ;----------------------------------------------------------------------
000F67  3               ; FODDER check
000F67  3               ;----------------------------------------------------------------------
000F67  3               
000F67  3               fdchk:
000F67  3  A0 00        	ldy #0
000F69  3  B1 rr        	lda (z80_hl),y	 	; fetch cell.
000F6B  3  C9 04        	cmp #FODDER 		; is it fodder?
000F6D  3  F0 01        	beq :+
000F6F  3  60           	rts 			; no.
000F70  3               :
000F70  3  A9 00        	lda #0
000F72  3  A0 00        	ldy #0
000F74  3  91 rr        	sta (z80_hl),y 		; rewrite block type.
000F76  3               
000F76  3  A5 rr        	lda z80_h		; store pointer to block.
000F78  3  48           	pha
000F79  3  A5 rr        	lda z80_l
000F7B  3  48           	pha
000F7C  3               
000F7C  3  38           	sec			; set carry flag for subtraction.
000F7D  3  A5 rr        	lda z80_l 		; find simple displacement for block.
000F7F  3  E9 00        	sbc #<MAP
000F81  3  85 rr        	sta z80_l
000F83  3  A5 rr        	lda z80_h
000F85  3  E9 03        	sbc #>MAP
000F87  3  85 rr        	sta z80_h
000F89  3               
000F89  3  A5 rr        	lda z80_l		; low byte is y coordinate.
000F8B  3  29 1F        	and #31 		; column position 0 - 31.
000F8D  3  85 rr        	sta dispx		; set up x position.
000F8F  3               
000F8F  3  06 rr        	asl z80_l		; multiply displacement by 8.
000F91  3  26 rr        	rol z80_h
000F93  3  06 rr        	asl z80_l
000F95  3  26 rr        	rol z80_h
000F97  3  06 rr        	asl z80_l
000F99  3  26 rr        	rol z80_h
000F9B  3               
000F9B  3  A5 rr        	lda z80_h		; x coordinate now in h.
000F9D  3  85 rr        	sta dispy		; set the display coordinate.
000F9F  3               
000F9F  3  A9 00        	lda #0 			; block to write.
000FA1  3  20 55 15     	jsr pattr 		; write block.
000FA4  3               
000FA4  3  68           	pla 			; restore block pointer.
000FA5  3  85 rr        	sta z80_l
000FA7  3  68           	pla
000FA8  3  85 rr        	sta z80_h
000FAA  3               
000FAA  3  60           	rts
000FAB  3               
000FAB  3               ;----------------------------------------------------
000FAB  3               ; Scrolly text and puzzle variables.
000FAB  3               ;----------------------------------------------------
000FAB  3               
000FAB  3               .if sflag
000FAB  3               txtbit:	.byte 128		; bit to write.
000FAB  3               txtwid:	.byte 16		; width of ticker message.
000FAB  3               txtpos:	.word msgdat
000FAB  3               txtini:	.word msgdat
000FAB  3               txtscr:	.word ScreenAddr
000FAB  3               .endif
000FAB  3               
000FAB  3               ;----------------------------------------------------
000FAB  3               ; Specialist routines.
000FAB  3               ; Process shrapnel.
000FAB  3               ;----------------------------------------------------
000FAB  3               proshr:
000FAB  3               .if pflag
000FAB  3               	lda #<SHRAPN		; table.
000FAB  3               	sta z80_x
000FAB  3               	lda #>SHRAPN
000FAB  3               	sta z80_i
000FAB  3               
000FAB  3               	lda #NUMSHR		; shrapnel pieces to process.
000FAB  3               	sta shrctr
000FAB  3               prosh0:
000FAB  3               	ldy #0
000FAB  3               	lda (z80_ix),y		; on/off marker.
000FAB  3               	asl a
000FAB  3               proshx:
000FAB  3               	bcs :+
000FAB  3               	jsr prosh1 		; on, so process it.
000FAB  3               :
000FAB  3               	clc
000FAB  3               	lda z80_x
000FAB  3               	adc #SHRSIZ
000FAB  3               	sta z80_x
000FAB  3               	bcc :+
000FAB  3               	inc z80_i
000FAB  3               :
000FAB  3               	dec shrctr		; round again.
000FAB  3               	bne prosh0
000FAB  3               .endif
000FAB  3               .if sflag
000FAB  3               	jsr scrly
000FAB  3               .endif
000FAB  3  60           	rts
000FAC  3               
000FAC  3               .if pflag
000FAC  3               shrctr:	.byte 0
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Proces shrapnel piece
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               prosh1:
000FAC  3               	jsr plot 		; delete the pixel.
000FAC  3               
000FAC  3               	lda #<shrptr		; shrapnel routine pointers.
000FAC  3               	sta z80_l
000FAC  3               	lda #>shrptr
000FAC  3               	sta z80_h
000FAC  3               
000FAC  3               	ldy #0
000FAC  3               	lda (z80_ix),y		; restore shrapnel type.
000FAC  3               	jsr prosh2 		; run the routine.
000FAC  3               	jsr chkxy		; check x and y are good before we redisplay.
000FAC  3               
000FAC  3               	lda #<SHRSIZ 		; distance to next.
000FAC  3               	sta z80_e
000FAC  3               	lda #>SHRSIZ
000FAC  3               	sta z80_d
000FAC  3               	rts
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Run the routine
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               prosh2:
000FAC  3               	asl a 			; 2 bytes per address.
000FAC  3               	tay
000FAC  3               	lda shrptr,y
000FAC  3               	sta z80_l
000FAC  3               	lda shrptr+1,y 		; fetch high byte from table.
000FAC  3               	sta z80_h
000FAC  3               	jmp (z80_hl) 		; jump to routine.
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Paricle routine table
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               shrptr:	.word laser		; laser.
000FAC  3               	.word trail		; vapour trail.
000FAC  3               	.word shrap		; shrapnel from explosion.
000FAC  3               	.word dotl		; horizontal starfield left.
000FAC  3               	.word dotr		; horizontal starfield right.
000FAC  3               	.word dotu		; vertical starfield up.
000FAC  3               	.word dotd		; vertical starfield down.
000FAC  3               	.word ptcusr		; user particle.
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Explosion shrapnel.
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               shrap:
000FAC  3               	ldy #1
000FAC  3               	lda (z80_ix),y 		; get the angle.
000FAC  3               	clc
000FAC  3               	adc #<shrsin		; shrapnel sine table.
000FAC  3               	sta z80_l
000FAC  3               	lda #>shrsin
000FAC  3               	adc #0
000FAC  3               	sta z80_h
000FAC  3               
000FAC  3               	ldy #0
000FAC  3               	lda (z80_hl),y 		; fetch value from table.
000FAC  3               	sta z80_e
000FAC  3               	inc z80_l 		; next byte of table.
000FAC  3               	bne :+
000FAC  3               	inc z80_h
000FAC  3               :
000FAC  3               	ldy #0
000FAC  3               	lda (z80_hl),y		; fetch value from table.
000FAC  3               	sta z80_d
000FAC  3               	inc z80_l		; next byte of table.
000FAC  3               	bne :+
000FAC  3               	inc z80_h
000FAC  3               :
000FAC  3               	ldy #0
000FAC  3               	lda (z80_hl),y 		; fetch value from table.
000FAC  3               	sta z80_c
000FAC  3               	inc z80_l 		; next byte of table.
000FAC  3               	bne :+
000FAC  3               	inc z80_h
000FAC  3               :
000FAC  3               	ldy #0
000FAC  3               	lda (z80_hl),y 		; fetch value from table.
000FAC  3               	sta z80_b
000FAC  3               
000FAC  3               	ldy #2
000FAC  3               	lda (z80_ix),y 		; x coordinate in hl.
000FAC  3               	clc
000FAC  3               	adc z80_e		; add sine lb
000FAC  3               	sta (z80_ix),y		; store new coordinate lb.
000FAC  3               	ldy #3
000FAC  3               	lda (z80_ix),y
000FAC  3               	adc z80_d		; add sine hb
000FAC  3               	sta (z80_ix),y		; store new coordinate hb.
000FAC  3               
000FAC  3               	ldy #4
000FAC  3               	lda (z80_ix),y	 	; y coordinate in hl.
000FAC  3               	clc
000FAC  3               	adc z80_c		; add cosine lb
000FAC  3               	sta (z80_ix),y		; store new coordinate lb.
000FAC  3               	ldy #5
000FAC  3               	lda (z80_ix),y
000FAC  3               	adc z80_b		; add cosine lb
000FAC  3               	sta (z80_ix),y		; store new coordinate hb.
000FAC  3               
000FAC  3               	rts
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Move dots
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               dotl:
000FAC  3               	ldy #5
000FAC  3               	lda (z80_ix),y
000FAC  3               	sec
000FAC  3               	sbc #1		 	; move left.
000FAC  3               	sta (z80_ix),y
000FAC  3               	rts
000FAC  3               dotr:
000FAC  3               	ldy #5
000FAC  3               	lda (z80_ix),y
000FAC  3               	clc
000FAC  3               	adc #1		 	; move left.
000FAC  3               	sta (z80_ix),y
000FAC  3               	rts
000FAC  3               dotu:
000FAC  3               	ldy #3
000FAC  3               	lda (z80_ix),y
000FAC  3               	sec
000FAC  3               	sbc #1		 	; move up.
000FAC  3               	sta (z80_ix),y
000FAC  3               	rts
000FAC  3               dotd:
000FAC  3               	ldy #3
000FAC  3               	lda (z80_ix),y
000FAC  3               	clc
000FAC  3               	adc #1			; move down.
000FAC  3               	sta (z80_ix),y
000FAC  3               	rts
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Check if coordinates are ok before redrawing at new position.
000FAC  3               ;
000FAC  3               ; left:   X>L		X=L	Ok
000FAC  3               ; right:  R+15>X	X=R	Ok
000FAC  3               ; top:    Y>T		Y=T	Ok
000FAC  3               ; bottom: B+15>Y	Y=B	Ok
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               chkxy:
000FAC  3               
000FAC  3               ; top:    Y>T		Y=T	Ok
000FAC  3               
000FAC  3               	ldy #3
000FAC  3               	lda (z80_ix),y	 	; fetch shrapnel coordinate.
000FAC  3               	cmp wntopx		; window top.
000FAC  3               	bcs :+			; compare with top window limit.
000FAC  3               	jmp kilshr		; out of window, kill shrapnel.
000FAC  3               :
000FAC  3               ; left:   X>L		X=L	Ok
000FAC  3               
000FAC  3               	ldy #5
000FAC  3               	lda (z80_ix),y	 	; fetch shrapnel coordinate.
000FAC  3               	cmp wnlftx		; left edge.
000FAC  3               	bcs :+			; compare with left window limit.
000FAC  3               	jmp kilshr		; out of window, kill shrapnel.
000FAC  3               :
000FAC  3               ; bottom: B+15>Y	Y=B	Ok
000FAC  3               
000FAC  3               	lda wnbotx		; point to bottom.
000FAC  3               	clc
000FAC  3               	adc #15
000FAC  3               	ldy #3
000FAC  3               	cmp (z80_ix),y	 	; fetch shrapnel coordinate.
000FAC  3               	bcs :+			; compare with shrapnel x coordinate.
000FAC  3               	jmp kilshr		; off screen, kill shrapnel..
000FAC  3               :
000FAC  3               ; right:  R+15>X	X=R	Ok
000FAC  3               
000FAC  3               	lda wnrgtx		; point to right edge.
000FAC  3               	clc
000FAC  3               	adc #15
000FAC  3               	ldy #5
000FAC  3               	cmp (z80_ix),y	 	; fetch shrapnel coordinate.
000FAC  3               	bcs :+			; compare with window limit.
000FAC  3               	jmp kilshr		; off screen, kill shrapnel.
000FAC  3               :
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Drop through.
000FAC  3               ; Display shrapnel.
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               plot:
000FAC  3               	ldy #3
000FAC  3               	lda (z80_ix),y		; y integer.
000FAC  3               	sta dispy	 	; workspace coordinates.
000FAC  3               	ldy #5
000FAC  3               	lda (z80_ix),y	 	; x integer.
000FAC  3               	sta dispx 		; workspace coordinates.
000FAC  3               
000FAC  3               	ldy #0
000FAC  3               	lda (z80_ix),y 		; type.
000FAC  3               	bne :+			; is it a laser?
000FAC  3               	jmp plot1 		; yes, draw laser instead.
000FAC  3               :
000FAC  3               plot0:
000FAC  3               	lda dispx		; which pixel within byte do we
000FAC  3               	and #7			; want to set first?
000FAC  3               	tay
000FAC  3               	lda dots,y 		; table of small pixel positions.
000FAC  3               	sta z80_e 		; get value.
000FAC  3               
000FAC  3               	jsr scadd 		; screen address.
000FAC  3               	ldy #0
000FAC  3               	lda (scraddr),y		; see what's already there.
000FAC  3               	eor z80_e
000FAC  3               	sta (scraddr),y 	; put back on screen.
000FAC  3               	rts
000FAC  3               
000FAC  3               plot1:
000FAC  3               	jsr scadd 		; screen address.
000FAC  3               	ldy #0
000FAC  3               	lda (scraddr),y 	; fetch byte there.
000FAC  3               	eor #255 		; toggle all bits.
000FAC  3               	sta (scraddr),y 	; new byte.
000FAC  3               	rts
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Switch off shrapnel
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               kilshr:
000FAC  3               	lda #128
000FAC  3               	ldy #0
000FAC  3               	sta (z80_ix),y	; switch off shrapnel.
000FAC  3               	rts
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Sine/cosine table
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               shrsin:	.word 0,1024,391,946,724,724,946,391
000FAC  3               	.word 1024,0,946,65144,724,64811,391,64589
000FAC  3               	.word 0,64512,65144,64589,64811,64811,64589,65144
000FAC  3               	.word 64512,0,64589,391,64811,724,65144,946
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Create trail
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               trail:
000FAC  3               	ldy #1
000FAC  3               	lda (z80_ix),y 	; time remaining.
000FAC  3               	sec
000FAC  3               	sbc #1
000FAC  3               	sta (z80_ix),y
000FAC  3               	bne :+
000FAC  3               	jmp trailk		; time to switch it off.
000FAC  3               :
000FAC  3               	jsr qrand		; get a random number.
000FAC  3               	lsr a 			; x or y axis?
000FAC  3               	bcc :+
000FAC  3               	jmp trailv		; use y.
000FAC  3               :
000FAC  3               ; Trail horizontal
000FAC  3               
000FAC  3               	lsr a 			; which direction?
000FAC  3               	bcc :+
000FAC  3               	jmp traill		; go left.
000FAC  3               :
000FAC  3               ; Trail right
000FAC  3               
000FAC  3               	ldy #5
000FAC  3               	lda (z80_ix),y
000FAC  3               	clc
000FAC  3               	adc #1	 		; go right.
000FAC  3               	sta (z80_ix),y
000FAC  3               	rts
000FAC  3               
000FAC  3               ; Trail left
000FAC  3               
000FAC  3               traill:
000FAC  3               	ldy #5
000FAC  3               	lda (z80_ix),y
000FAC  3               	sec
000FAC  3               	sbc #1 			; go left.
000FAC  3               	sta (z80_ix),y
000FAC  3               	rts
000FAC  3               
000FAC  3               ; Trail vertical
000FAC  3               
000FAC  3               trailv:
000FAC  3               	lsr a		 	; which direction?
000FAC  3               	bcc :+
000FAC  3               	jmp trailu		; go up.
000FAC  3               :
000FAC  3               ; Trail down
000FAC  3               
000FAC  3               	ldy #3
000FAC  3               	lda (z80_ix),y
000FAC  3               	clc
000FAC  3               	adc #1 			; go down.
000FAC  3               	sta (z80_ix),y
000FAC  3               	rts
000FAC  3               
000FAC  3               ; Trail up
000FAC  3               
000FAC  3               trailu:
000FAC  3               	ldy #3
000FAC  3               	lda (z80_ix),y
000FAC  3               	sec
000FAC  3               	sbc #1 			; go up.
000FAC  3               	sta (z80_ix),y
000FAC  3               	rts
000FAC  3               
000FAC  3               ; Kill trail
000FAC  3               
000FAC  3               trailk:
000FAC  3               	lda #200		; set off-screen to kill vapour trail.
000FAC  3               	ldy #3
000FAC  3               	sta (z80_ix),y
000FAC  3               	rts
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Create laser beam
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               laser:
000FAC  3               	ldy #1
000FAC  3               	lda (z80_ix),y 		; direction.
000FAC  3               	ror a 			; left or right?
000FAC  3               	bcs :+
000FAC  3               	jmp laserl		; move left.
000FAC  3               :
000FAC  3               ; Laser right
000FAC  3               
000FAC  3               	lda #8			; distance to travel.
000FAC  3               	sta z80_b
000FAC  3               	jmp laserm		; move laser.
000FAC  3               
000FAC  3               ; Laser left
000FAC  3               
000FAC  3               laserl:
000FAC  3               	lda #248		; distance to travel.
000FAC  3               	sta z80_b
000FAC  3               laserm:
000FAC  3               	ldy #5
000FAC  3               	lda (z80_ix),y		; x position.
000FAC  3               	clc
000FAC  3               	adc z80_b		; add distance.
000FAC  3               	sta (z80_ix),y		; set new x coordinate.
000FAC  3               
000FAC  3               ; Test new block.
000FAC  3               
000FAC  3               	sta dispx 		; set x for block collision detection purposes.
000FAC  3               	ldy #3
000FAC  3               	lda (z80_ix),y 		; get y.
000FAC  3               	sta dispy		; set coordinate for collision test.
000FAC  3               	jsr tstbl 		; get block type there.
000FAC  3               	cmp #WALL		; is it solid?
000FAC  3               	bne :+
000FAC  3               	jmp trailk		; yes, it cannot pass.
000FAC  3               :
000FAC  3               	rts
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Dots mask
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               dots:	.byte 128,64,32,16,8,4,2,1
000FAC  3               
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Plot, preserving de.
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               plotde:
000FAC  3               	lda z80_d 		; put de on stack.
000FAC  3               	pha
000FAC  3               	lda z80_e
000FAC  3               	pha
000FAC  3               
000FAC  3               	jsr plot 		; plot pixel.
000FAC  3               
000FAC  3               	pla			; restore de from stack.
000FAC  3               	sta z80_e
000FAC  3               	pla
000FAC  3               	sta z80_d
000FAC  3               
000FAC  3               	rts
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Shoot a laser.
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               shoot:
000FAC  3               	sta z80_c		; store direction in c register.
000FAC  3               	ldy #8
000FAC  3               	lda (z80_ix),y 		; y coordinate.
000FAC  3               shoot1:
000FAC  3               	clc
000FAC  3               	adc #7 			; down 7 pixels.
000FAC  3               	sta z80_l 		; puty y coordinate in l.
000FAC  3               
000FAC  3               	ldy #9
000FAC  3               	lda (z80_ix),y 		; x coordinate in h.
000FAC  3               	sta z80_h
000FAC  3               
000FAC  3               	lda z80_i		; store pointer to sprite.
000FAC  3               	pha
000FAC  3               	lda z80_x
000FAC  3               	pha
000FAC  3               
000FAC  3               	jsr fpslot 		; find particle slot.
000FAC  3               	bcs :+
000FAC  3               	jmp vapou2		; failed, restore ix.
000FAC  3               :
000FAC  3               	lda #0
000FAC  3               	ldy #0
000FAC  3               	sta (z80_ix),y 		; set up a laser.
000FAC  3               
000FAC  3               	lda z80_c
000FAC  3               	ldy #1
000FAC  3               	sta (z80_ix),y 		; set the direction.
000FAC  3               
000FAC  3               	lda z80_l
000FAC  3               	ldy #3
000FAC  3               	sta (z80_ix),y		; set y coordinate.
000FAC  3               
000FAC  3               	ror z80_c		; check direction we want.
000FAC  3               	bcc :+
000FAC  3               	jmp shootr		; shoot right.
000FAC  3               :
000FAC  3               	lda z80_h		; X position.
000FAC  3               shoot0:
000FAC  3               	and #248		; align on character boundary.
000FAC  3               	ldy #5
000FAC  3               	sta (z80_ix),y		; set x coordinate.
000FAC  3               	jmp vapou0 		; draw first image.
000FAC  3               shootr:
000FAC  3               	lda z80_h		; x position.
000FAC  3               	clc
000FAC  3               	adc #15			; look right.
000FAC  3               	jmp shoot0		; align and continue.
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Create a bit of vapour trail.
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               vapour:
000FAC  3               	lda z80_i		; store pointer to sprite.
000FAC  3               	pha
000FAC  3               	lda z80_x
000FAC  3               	pha
000FAC  3               
000FAC  3               	ldy #8
000FAC  3               	lda (z80_ix),y 		; y coordinate.
000FAC  3               	clc
000FAC  3               	adc #7			; mid-point of sprite.
000FAC  3               	sta z80_l
000FAC  3               
000FAC  3               	ldy #9
000FAC  3               	lda (z80_ix),y 		; x coordinate.
000FAC  3               	adc #7
000FAC  3               	sta z80_h
000FAC  3               
000FAC  3               	jsr fpslot 		; find particle slot.
000FAC  3               	bcc :+
000FAC  3               	jmp vapou1		; no, we can use it.
000FAC  3               :
000FAC  3               vapou2:
000FAC  3               	pla
000FAC  3               	sta z80_x
000FAC  3               	pla
000FAC  3               	sta z80_i
000FAC  3               	rts
000FAC  3               vapou1:
000FAC  3               	lda z80_l
000FAC  3               	ldy #3
000FAC  3               	sta (z80_ix),y		; set up y.
000FAC  3               
000FAC  3               	lda z80_h
000FAC  3               	ldy #5
000FAC  3               	sta (z80_ix),y 		; set up x coordinate.
000FAC  3               
000FAC  3               	jsr qrand		; get quick random number.
000FAC  3               	and #15			; random time.
000FAC  3               	clc
000FAC  3               	adc #15			; minimum time on screen.
000FAC  3               	ldy #1
000FAC  3               	sta (z80_ix),y		; set time on screen.
000FAC  3               
000FAC  3               	lda #1
000FAC  3               	ldy #0
000FAC  3               	sta (z80_ix),y		; define particle as vapour trail.
000FAC  3               vapou0:
000FAC  3               	jsr chkxy		; plot first position.
000FAC  3               	jmp vapou2
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Create a user particle.
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               ptusr:
000FAC  3               	sta z80_f		; store timer.
000FAC  3               
000FAC  3               	ldy #8
000FAC  3               	lda (z80_ix),y 		; y coordinate.
000FAC  3               	clc
000FAC  3               	adc #7			; mid-point of sprite.
000FAC  3               	sta z80_l
000FAC  3               
000FAC  3               	ldy #9
000FAC  3               	lda (z80_ix),y 		; x coordinate.
000FAC  3               	clc
000FAC  3               	adc #7			; mid-point of sprite.
000FAC  3               	sta z80_h
000FAC  3               
000FAC  3               	jsr fpslot 		; find particle slot.
000FAC  3               	bcs ptusr1
000FAC  3               	rts 			; out of slots, can't generate anything.
000FAC  3               ptusr1:
000FAC  3               	lda z80_l
000FAC  3               	ldy #3
000FAC  3               	sta (z80_ix),y 		; set up y.
000FAC  3               
000FAC  3               	lda z80_h
000FAC  3               	ldy #5
000FAC  3               	sta (z80_ix),y		; set up x coordinate.
000FAC  3               
000FAC  3               	lda z80_f 		; restore timer.
000FAC  3               	ldy #1
000FAC  3               	sta (z80_ix),y		; set time on screen.
000FAC  3               
000FAC  3               	lda #7
000FAC  3               	ldy #0
000FAC  3               	sta (z80_ix),y		; define particle as user particle.
000FAC  3               
000FAC  3               	jmp chkxy		; plot first position.
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Create a vertical or horizontal star.
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               star:
000FAC  3               	lda z80_i		; store pointer to sprite.
000FAC  3               	pha
000FAC  3               	lda z80_x
000FAC  3               	pha
000FAC  3               
000FAC  3               	jsr fpslot 		; find particle slot.
000FAC  3               	bcs star7		; found one we can use.
000FAC  3               star0:
000FAC  3               	pla 			; restore sprite pointer.
000FAC  3               	sta z80_x
000FAC  3               	pla
000FAC  3               	sta z80_i
000FAC  3               	rts 			; out of slots, can't generate anything.
000FAC  3               star7:
000FAC  3               	lda z80_c		; direction.
000FAC  3               	and #3 			; is it left?
000FAC  3               	bne :+
000FAC  3               	jmp star1 		; yes, it's left.
000FAC  3               :
000FAC  3               	cmp #1 			; is it right?
000FAC  3               	bne :+
000FAC  3               	jmp star2 		; yes, it's right.
000FAC  3               :
000FAC  3               	cmp #2 			; is it up?
000FAC  3               	bne :+
000FAC  3               	jmp star3 		; yes, it's up.
000FAC  3               :
000FAC  3               	ldy wntopx 		; get edge of screen.
000FAC  3               	iny			; down one pixel.
000FAC  3               	tya
000FAC  3               star8:
000FAC  3               	ldy #3
000FAC  3               	sta (z80_ix),y 		; set y coord.
000FAC  3               	jsr qrand 		; get quick random number.
000FAC  3               star9:
000FAC  3               	ldy #5
000FAC  3               	sta (z80_ix),y		; set x position.
000FAC  3               
000FAC  3               	lda z80_c		; direction.
000FAC  3               	and #3			; zero to three.
000FAC  3               	clc
000FAC  3               	adc #3			; 3 to 6 for starfield.
000FAC  3               	ldy #0
000FAC  3               	sta (z80_ix),y		; define particle as star.
000FAC  3               	jsr chkxy		; plot first position.
000FAC  3               	jmp star0
000FAC  3               star1:
000FAC  3               	jsr qrand		; get quick random number.
000FAC  3               	ldy #3
000FAC  3               	sta (z80_ix),y 		; set y coord.
000FAC  3               
000FAC  3               	lda wnrgtx 		; get edge of screen.
000FAC  3               	clc
000FAC  3               	adc #15			; add width of sprite minus 1.
000FAC  3               	jmp star9
000FAC  3               star2:
000FAC  3               	jsr qrand 		; get quick random number.
000FAC  3               	ldy #3
000FAC  3               	sta (z80_ix),y		; set y coord.
000FAC  3               
000FAC  3               	lda wnlftx		; get edge of screen.
000FAC  3               	jmp star9
000FAC  3               star3:
000FAC  3               	lda wnbotx 		; get edge of screen.
000FAC  3               	clc
000FAC  3               	adc #15 		; height of sprite minus one pixel.
000FAC  3               	jmp star8
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Find particle slot for lasers or vapour trail.
000FAC  3               ; can't use alternate accumulator.
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               fpslot:
000FAC  3               	lda #<SHRAPN 		; shrapnel table.
000FAC  3               	sta z80_x
000FAC  3               	lda #>SHRAPN
000FAC  3               	sta z80_i
000FAC  3               
000FAC  3               	lda #NUMSHR		; number of pieces in table.
000FAC  3               	sta z80_b
000FAC  3               fpslt0:
000FAC  3               	ldy #0
000FAC  3               	lda (z80_ix),y		; get type.
000FAC  3               	asl a  			; is this slot in use?
000FAC  3               	bcc :+
000FAC  3               	rts			; no, we can use it.
000FAC  3               :
000FAC  3               	clc			; point to more shrapnel.
000FAC  3               	lda z80_x
000FAC  3               	adc #SHRSIZ
000FAC  3               	sta z80_x
000FAC  3               	bcc :+
000FAC  3               	inc z80_i
000FAC  3               :
000FAC  3               	dec z80_b		; repeat for all shrapnel.
000FAC  3               	bne fpslt0
000FAC  3               
000FAC  3               	clc
000FAC  3               	rts 			; out of slots, can't generate anything.
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Create an explosion at sprite position.
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               explod:
000FAC  3               	sta z80_c 		; particles to create.
000FAC  3               
000FAC  3               	lda z80_i 		; store pointer to sprite.
000FAC  3               	pha
000FAC  3               	lda z80_x
000FAC  3               	pha
000FAC  3               
000FAC  3               	ldy #8
000FAC  3               	lda (z80_ix),y 		; y coordinate.
000FAC  3               	sta z80_l
000FAC  3               	ldy #9
000FAC  3               	lda (z80_ix),y		; x coordinate.
000FAC  3               	sta z80_h
000FAC  3               
000FAC  3               	lda #<SHRAPN		; shrapnel table.
000FAC  3               	sta z80_x
000FAC  3               	lda #>SHRAPN
000FAC  3               	sta z80_i
000FAC  3               
000FAC  3               	lda #NUMSHR		; number of pieces in table.
000FAC  3               	sta explcnt
000FAC  3               expld0:
000FAC  3               	ldy #0
000FAC  3               	lda (z80_ix),y		; get type.
000FAC  3               	asl a 			; is this slot in use?
000FAC  3               	bcs expld1		; no, we can use it.
000FAC  3               expld2:
000FAC  3               	clc
000FAC  3               	lda z80_x
000FAC  3               	adc #SHRSIZ
000FAC  3               	sta z80_x
000FAC  3               	bcc :+
000FAC  3               	inc z80_i
000FAC  3               :
000FAC  3               	dec explcnt		; repeat for all shrapnel.
000FAC  3               	bne expld0
000FAC  3               expld3:
000FAC  3               	pla			; restore sprite pointer.
000FAC  3               	sta z80_x
000FAC  3               	pla
000FAC  3               	sta z80_i
000FAC  3               	rts 			; out of slots, can't generate any more.
000FAC  3               
000FAC  3               expld1:
000FAC  3               	lda z80_c		; shrapnel counter.
000FAC  3               	and #15			; 0 to 15.
000FAC  3               	clc			; add to x.
000FAC  3               	adc z80_l
000FAC  3               	ldy #3
000FAC  3               	sta (z80_ix),y		; y coord.
000FAC  3               
000FAC  3               	lda seed3 		; crap random number.
000FAC  3               	and #15			; 0 to 15.
000FAC  3               	clc 			; add to y.
000FAC  3               	adc z80_h
000FAC  3               	ldy #5
000FAC  3               	sta (z80_ix),y		; x coord.
000FAC  3               
000FAC  3               	lda #2
000FAC  3               	ldy #0
000FAC  3               	sta (z80_ix),y		; switch it on.
000FAC  3               
000FAC  3               	jsr chkxy		; plot first position.
000FAC  3               	jsr qrand		; quick random angle.
000FAC  3               	and #60 		; keep within range.
000FAC  3               	ldy #1
000FAC  3               	sta (z80_ix),y		; angle.
000FAC  3               
000FAC  3               	dec z80_c		; one less piece of shrapnel to generate.
000FAC  3               	bne expld2 		; back to main explosion loop.
000FAC  3               	jmp expld3 		; restore sprite pointer and exit.
000FAC  3               
000FAC  3               explcnt:	.byte 0
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Quick random
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               qrand:
000FAC  3               	jsr random		; r register.
000FAC  3               	eor seed3		; combine with seed.
000FAC  3               	sta seed3 		; new seed.
000FAC  3               	rts
000FAC  3               
000FAC  3               seed3:	.byte 0
000FAC  3               
000FAC  3               ;----------------------------------------------------
000FAC  3               ; Display all shrapnel.
000FAC  3               ;----------------------------------------------------
000FAC  3               
000FAC  3               dshrp:
000FAC  3               	lda #<plotde		; display routine.
000FAC  3               	sta proshx+1
000FAC  3               	lda #>plotde
000FAC  3               	sta proshx+2
000FAC  3               	jsr proshr		; process shrapnel.
000FAC  3               
000FAC  3               	lda #<prosh1		; processing routine.
000FAC  3               	sta proshx+1
000FAC  3               	lda #>prosh1
000FAC  3               	sta proshx+2
000FAC  3               	rts
000FAC  3               
000FAC  3               ;------------------------------------------------------
000FAC  3               ; Particle engine.
000FAC  3               ;
000FAC  3               ; Init particle data for 55 particles in SHRAPN table.
000FAC  3               ; Every particle has 6 bytes.
000FAC  3               ;
000FAC  3               ; global:	-
000FAC  3               ; local:	x,y,hl
000FAC  3               ; calls:	-
000FAC  3               ;------------------------------------------------------
000FAC  3               
000FAC  3               inishr:
000FAC  3               	lda #<SHRAPN 		; table.
000FAC  3               	sta z80_l
000FAC  3               	lda #>SHRAPN
000FAC  3               	sta z80_h
000FAC  3               
000FAC  3               	ldy #0
000FAC  3               	ldx #NUMSHR		; shrapnel pieces to process.
000FAC  3               inish0:
000FAC  3               	lda #255 		; kill the shrapnel.
000FAC  3               	sta (z80_hl),y
000FAC  3               
000FAC  3               	clc 			; point there.
000FAC  3               	lda z80_l
000FAC  3               	adc #SHRSIZ		; distance to next.
000FAC  3               	sta z80_l
000FAC  3               	bcc :+
000FAC  3               	inc z80_h
000FAC  3               :
000FAC  3               	dex
000FAC  3               	bne inish0 		; round again.
000FAC  3               	rts
000FAC  3               
000FAC  3               ;------------------------------------------------------
000FAC  3               ; Check for collision between laser and sprite.
000FAC  3               ;------------------------------------------------------
000FAC  3               
000FAC  3               lcol:
000FAC  3               	lda #<SHRAPN		; shrapnel table.
000FAC  3               	sta z80_l
000FAC  3               	lda #>SHRAPN
000FAC  3               	sta z80_h
000FAC  3               
000FAC  3               	lda #NUMSHR		; number of pieces in table.
000FAC  3               	sta z80_b
000FAC  3               lcol0:
000FAC  3               	ldy #0
000FAC  3               	lda (z80_hl),y 		; get type.
000FAC  3               	beq lcol1		; yes, check collision.
000FAC  3               lcol3:
000FAC  3               	clc			; point to more shrapnel.
000FAC  3               	lda z80_l
000FAC  3               	adc #SHRSIZ
000FAC  3               	sta z80_l
000FAC  3               	bcc :+
000FAC  3               	inc z80_h
000FAC  3               :
000FAC  3               	dec z80_b		; repeat for all shrapnel.
000FAC  3               	bne lcol0
000FAC  3               	rts 			; no collision, carry not set.
000FAC  3               lcol1:
000FAC  3               	ldy #3
000FAC  3               	lda (z80_hl),y		; get y.
000FAC  3               	sec
000FAC  3               	ldy #8
000FAC  3               	sbc (z80_ix),y		; subtract sprite y.
000FAC  3               lcolh:
000FAC  3               	cmp #16 		; within range?
000FAC  3               	bcc :+
000FAC  3               	jmp lcol2		; no, missed.
000FAC  3               :
000FAC  3               	ldy #5
000FAC  3               	lda (z80_hl),y 		; get x.
000FAC  3               	sec
000FAC  3               	ldy #9
000FAC  3               	sbc (z80_ix),y 		; subtract sprite y.
000FAC  3               	cmp #16			; within range?
000FAC  3               	bcs :+
000FAC  3               	jmp lcol4 		; yes, collision occurred.
000FAC  3               :
000FAC  3               lcol2:
000FAC  3               	jmp lcol3
000FAC  3               lcol4:
000FAC  3               	sec
000FAC  3               	rts 			; return with carry set for collision.
000FAC  3               .endif
000FAC  3               
000FAC  3               ;------------------------------------------------------
000FAC  3               ; Main game engine code starts here.
000FAC  3               ; After initialisation, mloop is the main loop
000FAC  3               ;------------------------------------------------------
000FAC  3               
000FAC  3               game:
000FAC  3               
000FAC  3               ; Set up screen address table.
000FAC  3               
000FAC  3               setsat:
000FAC  3  A9 00        	lda #<ScreenAddr		; start of screen.
000FAE  3  85 rr        	sta scraddr
000FB0  3  A9 68        	lda #>ScreenAddr
000FB2  3  85 rr        	sta scraddr+1
000FB4  3               
000FB4  3  A0 00        	ldy #0			; vertical lines on screen.
000FB6  3               setsa0:
000FB6  3  A5 rr        	lda scraddr
000FB8  3  99 00 06     	sta SCADTB_lb,y		; write low byte.
000FBB  3  A5 rr        	lda scraddr+1
000FBD  3  99 00 07     	sta SCADTB_hb,y		; write high byte.
000FC0  3  20 E6 1D     	jsr nline		; next line down.
000FC3  3  C8           	iny			; next position in table.
000FC4  3  D0 F0        	bne setsa0
000FC6  3               
000FC6  3               ; Init graphics mode
000FC6  3               
000FC6  3  20 26 0F     	jsr setcrtc
000FC9  3  20 3D 0F     	jsr setpal 		; set up palette.
000FCC  3               
000FCC  3               ; Init AtoMMC joystick
000FCC  3  20 BE 19     	jsr joyinit		; AtoMMC joystick on PORT B
000FCF  3               
000FCF  3               rpblc2:
000FCF  3               .if pflag
000FCF  3               	jsr inishr 		; initialise particle engine.
000FCF  3               .endif
000FCF  3               evintr:
000FCF  3  20 55 49     	jsr evnt12 		; call intro/menu event.
000FD2  3               
000FD2  3  A9 02        	lda #WALL 		; write default property.
000FD4  3  A2 00        	ldx #0
000FD6  3               clrmap:
000FD6  3  9D 00 03     	sta MAP,x 		; block properties.
000FD9  3  9D 00 04     	sta MAP+256,x
000FDC  3  9D 00 05     	sta MAP+512,x
000FDF  3  E8           	inx			; next byte.
000FE0  3  D0 F4        	bne clrmap
000FE2  3               
000FE2  3  20 77 0E     	jsr iniob 		; initialise objects.
000FE5  3               
000FE5  3  A9 00        	lda #0			; put zero in accumulator.
000FE7  3  85 rr        	sta gamwon		; reset game won flag.
000FE9  3               
000FE9  3  20 3F 11     	jsr inisc 		; init the score.
000FEC  3               mapst:
000FEC  3  AD 42 23     	lda stmap 		; start position on map.
000FEF  3  8D 1F 23     	sta roomtb		; set up position in table, if there is one.
000FF2  3               
000FF2  3               inipbl:
000FF2  3  20 07 1F     	jsr initsc 		; set up first screen.
000FF5  3               
000FF5  3  A9 0E        	lda #<ssprit 		; default to spare sprite in table.
000FF7  3  85 rr        	sta z80_x
000FF9  3  A9 23        	lda #>ssprit
000FFB  3  85 rr        	sta z80_i
000FFD  3               evini:
000FFD  3  20 56 49     	jsr evnt13 		; initialisation.
001000  3               
001000  3               ; Two restarts.
001000  3               ; First restart - clear all sprites and initialise everything.
001000  3               
001000  3               rstrt:
001000  3  20 EC 10     	jsr rsevt 		; restart events.
001003  3  20 6A 0E     	jsr xspr 		; clear sprite table.
001006  3  20 68 20     	jsr sprlst 		; fetch pointer to screen sprites.
001009  3  20 F5 20     	jsr ispr 		; initialise sprite table.
00100C  3               
00100C  3  4C 1B 10     	jmp rstrt0
00100F  3               
00100F  3               ; Second restart - clear all but player, and don't initialise him.
00100F  3               
00100F  3               rstrtn:
00100F  3  20 EC 10     	jsr rsevt		; restart events.
001012  3  20 95 20     	jsr nspr 		; clear all non-player sprites.
001015  3  20 68 20     	jsr sprlst 		; fetch pointer to screen sprites.
001018  3  20 35 21     	jsr kspr 		; initialise sprite table, no more players.
00101B  3               
00101B  3               ; Set up the player and/or enemy sprites.
00101B  3               
00101B  3               rstrt0:
00101B  3  A9 00        	lda #0 			; zero in accumulator.
00101D  3  85 rr        	sta nexlev 		; reset next level flag.
00101F  3  85 rr        	sta restfl 		; reset restart flag.
001021  3  85 rr        	sta deadf 		; reset dead flag.
001023  3  20 74 16     	jsr droom 		; show screen layout.
001026  3               rpblc0:
001026  3               .if pflag
001026  3               	jsr inishr 		; initialise particle engine.
001026  3               .endif
001026  3  20 8F 11     	jsr shwob		; draw objects.
001029  3               
001029  3  A9 42        	lda #<sprtab 		; address of sprite table, even sprites.
00102B  3  85 rr        	sta z80_x
00102D  3  A9 22        	lda #>sprtab
00102F  3  85 rr        	sta z80_i
001031  3  20 26 1C     	jsr dspr 		; display sprites.
001034  3               
001034  3  A9 53        	lda #<(sprtab+TABSIZ) 	; address of first odd sprite.
001036  3  85 rr        	sta z80_x
001038  3  A9 22        	lda #>(sprtab+TABSIZ)
00103A  3  85 rr        	sta z80_i
00103C  3  20 26 1C     	jsr dspr 		; display sprites.
00103F  3               mloop:
00103F  3  20 A9 0E     	jsr vsync 		; synchronise with display.
001042  3               
001042  3  A9 42        	lda #<sprtab 		; address of sprite table, even sprites.
001044  3  85 rr        	sta z80_x
001046  3  A9 22        	lda #>sprtab
001048  3  85 rr        	sta z80_i
00104A  3  20 26 1C     	jsr dspr 		; display even sprites.
00104D  3               
00104D  3  20 8E 11     	jsr plsnd 		; play sounds.
001050  3  20 A9 0E     	jsr vsync 		; synchronise with display.
001053  3               
001053  3  A9 53        	lda #<(sprtab+TABSIZ) 	; address of first odd sprite.
001055  3  85 rr        	sta z80_x
001057  3  A9 22        	lda #>(sprtab+TABSIZ)
001059  3  85 rr        	sta z80_i
00105B  3  20 26 1C     	jsr dspr 		; display odd sprites.
00105E  3               
00105E  3  A9 0E        	lda #<(ssprit) 		; point to spare sprite for spawning purposes.
001060  3  85 rr        	sta z80_x
001062  3  A9 23        	lda #>(ssprit)
001064  3  85 rr        	sta z80_i
001066  3               evlp1:
001066  3  20 6B 48     	jsr evnt10 		; called once per main loop.
001069  3  20 9B 1B     	jsr pspr 		; process sprites.
00106C  3               
00106C  3               ; Main loop events.
00106C  3               
00106C  3  A9 0E        	lda #<ssprit 		; point to spare sprite for spawning purposes.
00106E  3  85 rr        	sta z80_x
001070  3  A9 23        	lda #>ssprit
001072  3  85 rr        	sta z80_i
001074  3               evlp2:
001074  3  20 54 49     	jsr evnt11 		; called once per main loop.
001077  3               bsortx:
001077  3  20 0E 1B     	jsr bsort 		; sort sprites.
00107A  3               
00107A  3  A5 rr        	lda nexlev		; finished level flag.
00107C  3  D0 1D        	bne newlev		; is set, go to next level.
00107E  3  A5 rr        	lda gamwon		; finished game flag.
001080  3  D0 28        	bne evwon		; is set, finish the game.
001082  3  A5 rr        	lda restfl 		; finished level flag.
001084  3  C9 01        	cmp #1			; has it been set?
001086  3  D0 03        	bne :+
001088  3  4C 00 10     	jmp rstrt		; yes, go to next level.
00108B  3               :
00108B  3  C9 02        	cmp #2			; has it been set?
00108D  3  D0 03        	bne :+
00108F  3  4C 0F 10     	jmp rstrtn		; yes, go to next level.
001092  3               :
001092  3  A5 rr        	lda deadf 		; dead flag.
001094  3  D0 1A        	bne pdead		; yes, player dead.
001096  3               
001096  3               ; back to start of main loop.
001096  3               
001096  3  E6 rr        	inc clock
001098  3  4C 3F 10     	jmp mloop		; switched to a jmp mloop during test mode.
00109B  3               
00109B  3               ;----------------------------------------------------------
00109B  3               ; New level
00109B  3               ;----------------------------------------------------------
00109B  3               
00109B  3               newlev:
00109B  3  A5 rr        	lda scno 			; current screen.
00109D  3  18           	clc
00109E  3  69 01        	adc #1				; next screen.
0010A0  3  CD 73 72     	cmp numsc			; total number of screens.
0010A3  3  B0 05        	bcs evwon			; yes, game finished.
0010A5  3  85 rr        	sta scno			; set new level number.
0010A7  3  4C 00 10     	jmp rstrt			; restart, clearing all aliens.
0010AA  3               
0010AA  3               evwon:
0010AA  3  20 EF 4D     	jsr evnt18		 	; game completed.
0010AD  3  4C C1 10     	jmp tidyup			; tidy up and return to BASIC/calling routine.
0010B0  3               
0010B0  3               ;----------------------------------------------------------
0010B0  3               ; Player dead.
0010B0  3               ;----------------------------------------------------------
0010B0  3               
0010B0  3               pdead:
0010B0  3  A9 00        	lda #0				; zeroise accumulator.
0010B2  3  85 rr        	sta deadf			; reset dead flag.
0010B4  3               evdie:
0010B4  3  20 ED 4D     	jsr evnt16 			; death subroutine.
0010B7  3  A5 rr        	lda numlif			; number of lives.
0010B9  3  F0 03        	beq :+
0010BB  3  4C 00 10     	jmp rstrt 			; restart game.
0010BE  3               :
0010BE  3               evfail:
0010BE  3  20 EE 4D     	jsr evnt17 			; failure event.
0010C1  3               
0010C1  3               ;----------------------------------------------------------
0010C1  3               ; Tidy things up
0010C1  3               ;----------------------------------------------------------
0010C1  3               
0010C1  3               tidyup:
0010C1  3  A0 00        	ldy #0				; digits to check.
0010C3  3               tidyu2:
0010C3  3  B9 67 13     	lda score,y 			; get score digit.
0010C6  3  CD 6D 13     	cmp hiscor 			; are we larger than high score digit?
0010C9  3  90 07        	bcc tidyu0			; high score is bigger.
0010CB  3  D0 0E        	bne tidyu1			; score is greater, record new high score.
0010CD  3  C8           	iny				; next digit of high score.
0010CE  3  C0 06        	cpy #6
0010D0  3  D0 F1        	bne tidyu2			; repeat for all digits
0010D2  3               tidyu0:
0010D2  3  A9 67        	lda #<score			; return pointing to score.
0010D4  3  85 rr        	sta z80_c
0010D6  3  A9 13        	lda #>score
0010D8  3  85 rr        	sta z80_b
0010DA  3  60           	rts
0010DB  3               tidyu1:
0010DB  3  A0 05        	ldy #5
0010DD  3               tidyu3:
0010DD  3  B9 67 13     	lda score,y			; score.
0010E0  3  99 6D 13     	sta hiscor,y			; high score.
0010E3  3  88           	dey
0010E4  3  10 F7        	bpl tidyu3 			; copy score to high score.
0010E6  3               evnewh:
0010E6  3  20 F0 4D     	jsr evnt19			; new high score event.
0010E9  3  4C D2 10     	jmp tidyu0			; tidy up.
0010EC  3               
0010EC  3               ;--------------------------------------------------
0010EC  3               ; Restart event.
0010EC  3               ;--------------------------------------------------
0010EC  3               
0010EC  3               rsevt:
0010EC  3  A9 0E        	lda #<ssprit 			; default to spare element in table.
0010EE  3  85 rr        	sta z80_x
0010F0  3  A9 23        	lda #>ssprit
0010F2  3  85 rr        	sta z80_i
0010F4  3               evrs:
0010F4  3  4C 85 49     	jmp evnt14	 		; call restart event.
0010F7  3               
0010F7  3               ;------------------------------------------------------------------
0010F7  3               ; Copy number passed in a to string position bc, right-justified.
0010F7  3               ;
0010F7  3               ; Input:
0010F7  3               ;  A  = number
0010F7  3               ;  BC = string address
0010F7  3               ;
0010F7  3               ; Output:
0010F7  3               ;  BC = string with number
0010F7  3               ;-----------------------------------------------------------------
0010F7  3               
0010F7  3               num2ch:
0010F7  3  85 rr        	sta z80_d		; Save number
0010F9  3               
0010F9  3  A9 00        	lda #0
0010FB  3  8D 3E 11     	sta flag
0010FE  3               
0010FE  3  A2 64        	ldx #100		; hundreds column.
001100  3  86 rr        	stx z80_e
001102  3  20 13 11     	jsr numdg		; show digit.
001105  3               
001105  3  A2 0A        	ldx #10			; tens column.
001107  3  86 rr        	stx z80_e
001109  3  20 13 11     	jsr numdg		; show digit.
00110C  3               
00110C  3  EE 3E 11     	inc flag
00110F  3  A2 01        	ldx #1			; units column.
001111  3  86 rr        	stx z80_e
001113  3               numdg:
001113  3  A9 30        	lda #48			; clear digit.
001115  3  85 rr        	sta z80_a
001117  3               numdg1:
001117  3  A5 rr        	lda z80_d
001119  3  C5 rr        	cmp z80_e
00111B  3  90 0F        	bcc numdg0		; nothing to show.
00111D  3  38           	sec
00111E  3  A5 rr        	lda z80_d
001120  3  E5 rr        	sbc z80_e		; subtract from column.
001122  3  85 rr        	sta z80_d
001124  3  E6 rr        	inc z80_a		; increment digit.
001126  3  EE 3E 11     	inc flag
001129  3  4C 17 11     	jmp numdg1		; repeat until column is zero.
00112C  3               numdg0:
00112C  3  A0 00        	ldy #0
00112E  3  A5 rr        	lda z80_a
001130  3  91 rr        	sta (z80_bc),y		; write digit to buffer.
001132  3  AD 3E 11     	lda flag
001135  3  F0 06        	beq :+
001137  3  E6 rr        	inc z80_c		; next buffer position.
001139  3  D0 02        	bne :+
00113B  3  E6 rr        	inc z80_b
00113D  3               :
00113D  3  60           	rts
00113E  3               
00113E  3  00           flag:	.byte 0
00113F  3               
00113F  3               ;---------------------------------------------------------
00113F  3               ; Reset score to "000000"
00113F  3               ;---------------------------------------------------------
00113F  3               
00113F  3               inisc:
00113F  3  A9 30        	lda #'0'
001141  3  A2 05        	ldx #5			; digits to initialise.
001143  3               inisc0:
001143  3  9D 67 13     	sta score,x 		; write zero digit.
001146  3  CA           	dex			; next column.
001147  3  10 FA        	bpl inisc0		; repeat for all digits.
001149  3               
001149  3  60           	rts
00114A  3               
00114A  3               ;-----------------------------------------------------
00114A  3               ; Multiply h by d and return in hl.
00114A  3               ;
00114A  3               ; Input:
00114A  3               ;  H = first number
00114A  3               ;  D = second number
00114A  3               ;
00114A  3               ; Output:
00114A  3               ;  HL = result H x D
00114A  3               ;-----------------------------------------------------
00114A  3               
00114A  3               imul:
00114A  3  A5 rr        	lda z80_d		; HL = H * D
00114C  3  85 rr        	sta z80_e
00114E  3  A5 rr        	lda z80_h
001150  3  85 rr        	sta z80_c		; make c first multiplier.
001152  3               imul0:
001152  3  A9 00        	lda #0			; zeroise total.
001154  3  85 rr        	sta z80_l
001156  3  85 rr        	sta z80_h
001158  3               
001158  3  A5 rr        	lda z80_h
00115A  3  85 rr        	sta z80_d		; zeroise high byte.
00115C  3               
00115C  3  A9 08        	lda #8			; repeat 8 times.
00115E  3  85 rr        	sta z80_b
001160  3               imul1:
001160  3  46 rr        	lsr z80_c		; rotate rightmost bit into carry.
001162  3  90 0E        	bcc imul2		; wasn't set.
001164  3  18           	clc			; bit was set, so add de.
001165  3  A5 rr        	lda z80_l
001167  3  65 rr        	adc z80_e
001169  3  85 rr        	sta z80_l
00116B  3  A5 rr        	lda z80_h
00116D  3  65 rr        	adc z80_d
00116F  3  85 rr        	sta z80_h
001171  3  18           	clc 			; reset carry.
001172  3               imul2:
001172  3  06 rr        	asl z80_e 		; shift de 1 bit left.
001174  3  26 rr        	rol z80_d
001176  3  C6 rr        	dec z80_b
001178  3  D0 E6        	bne imul1		; repeat 8 times.
00117A  3               
00117A  3  60           	rts
00117B  3               
00117B  3               ;-----------------------------------------------
00117B  3               ; Divide d by e and return in d, remainder in a.
00117B  3               ;
00117B  3               ; Input:
00117B  3               ;  D = first number
00117B  3               ;  E = second number
00117B  3               ;
00117B  3               ; Output:
00117B  3               ;  D = result D/E
00117B  3               ;  A = remainder
00117B  3               ;-----------------------------------------------
00117B  3               
00117B  3               idiv:
00117B  3  A9 00        	lda #0
00117D  3  A0 08        	ldy #8		 	; bits to shift.
00117F  3  06 rr        	asl z80_d
001181  3               idiv0:
001181  3  2A           	rol a 			; multiply d by 2.
001182  3  C5 rr        	cmp z80_e 		; test if e is smaller.
001184  3  90 02        	bcc idiv1		; e is greater, no division this time.
001186  3  E5 rr        	sbc z80_e		; subtract it.
001188  3               idiv1:
001188  3  26 rr        	rol z80_d		; rotate into d.
00118A  3  88           	dey
00118B  3  D0 F4        	bne idiv0		; repeat
00118D  3  60           	rts
00118E  3               
00118E  3               ;---------------------------------------------------
00118E  3               ; Play AY sound effect
00118E  3               ;---------------------------------------------------
00118E  3               
00118E  3               plsnd:
00118E  3  60           	rts
00118F  3               
00118F  3               ;---------------------------------------------------
00118F  3               ; Objects handling.
00118F  3               ; 32 bytes for image
00118F  3               ; 3 for room, y and x
00118F  3               ; 3 for starting room, y and x.
00118F  3               ; 254 = disabled.
00118F  3               ; 255 = object in player"s pockets.
00118F  3               ;---------------------------------------------------
00118F  3               
00118F  3               ;---------------------------------------------------
00118F  3               ; Show items present.
00118F  3               ;---------------------------------------------------
00118F  3               
00118F  3               shwob:
00118F  3  A9 D7        	lda #<objdta 			; objects table.
001191  3  85 rr        	sta z80_l
001193  3  A9 72        	lda #>objdta
001195  3  85 rr        	sta z80_h
001197  3               
001197  3  AD 37 0E     	lda numob 			; number of objects in the game.
00119A  3  8D D9 1C     	sta sprcnt
00119D  3               shwob0:
00119D  3  A0 20        	ldy #32 			; distance to room number.
00119F  3  B1 rr        	lda (z80_hl),y 			; same as an item?
0011A1  3  C5 rr        	cmp scno 			; current location.
0011A3  3  D0 03        	bne :+
0011A5  3  20 BB 11     	jsr dobj 			; yes, display object.
0011A8  3               :
0011A8  3  18           	clc
0011A9  3  A5 rr        	lda z80_l
0011AB  3  69 26        	adc #38 			; distance to next item.
0011AD  3  85 rr        	sta z80_l
0011AF  3  A5 rr        	lda z80_h
0011B1  3  69 00        	adc #0
0011B3  3  85 rr        	sta z80_h	 		; point to it.
0011B5  3  CE D9 1C     	dec sprcnt
0011B8  3  D0 E3        	bne shwob0 			; repeat for others.
0011BA  3  60           	rts
0011BB  3               
0011BB  3               ;---------------------------------------------------
0011BB  3               ; Display object.
0011BB  3               ; hl must point to object's start address.
0011BB  3               ;
0011BB  3               ; Input:
0011BB  3               ;  HL = object address
0011BB  3               ;---------------------------------------------------
0011BB  3               
0011BB  3               dobj:
0011BB  3  A0 21        	ldy #33
0011BD  3  B1 rr        	lda (z80_hl),y 			; point to y.
0011BF  3  85 rr        	sta dispy
0011C1  3  C8           	iny
0011C2  3  B1 rr        	lda (z80_hl),y 			; point to x.
0011C4  3  85 rr        	sta dispx
0011C6  3               dobj1:
0011C6  3  4C BF 15     	jmp sprite 			; draw this sprite.
0011C9  3               
0011C9  3               ;--------------------------------------
0011C9  3               ; Remove an object.
0011C9  3               ;
0011C9  3               ; Input:
0011C9  3               ;  A = object number
0011C9  3               ;--------------------------------------
0011C9  3               
0011C9  3               remob:
0011C9  3  CD 37 0E     	cmp numob			; number of objects in game.
0011CC  3  90 01        	bcc :+				; are we checking past the end?
0011CE  3  60           	rts				; yes, can't get non-existent item.
0011CF  3               :
0011CF  3  48           	pha				; remember object.
0011D0  3  20 DE 11     	jsr getob			; pick it up if we haven't already got it.
0011D3  3  68           	pla				; retrieve object number.
0011D4  3  20 0D 12     	jsr gotob			; get its address.
0011D7  3  A9 FE        	lda #254
0011D9  3  A0 20        	ldy #32
0011DB  3  91 rr        	sta (z80_hl),y			; remove it.
0011DD  3  60           	rts
0011DE  3               
0011DE  3               ;---------------------------------------------------
0011DE  3               ; Pick up object number held in the accumulator.
0011DE  3               ;
0011DE  3               ; Input:
0011DE  3               ;  A = object number
0011DE  3               ;---------------------------------------------------
0011DE  3               
0011DE  3               getob:
0011DE  3  CD 37 0E     	cmp numob 		; number of objects in game.
0011E1  3  90 01        	bcc :+			; are we checking past the end?
0011E3  3  60           	rts			; yes, can't get non-existent item.
0011E4  3               :
0011E4  3  20 0D 12     	jsr gotob 		; check if we already have it.
0011E7  3  C9 FF        	cmp #255
0011E9  3  D0 01        	bne :+
0011EB  3  60           	rts			; we already do.
0011EC  3               :
0011EC  3  A0 20        	ldy #32
0011EE  3  B1 rr        	lda (z80_hl),y		; is it on this screen?
0011F0  3  C5 rr        	cmp scno 		; current screen.
0011F2  3  D0 14        	bne getob0		; not on screen, so nothing to delete.
0011F4  3               
0011F4  3  A9 FF        	lda #255
0011F6  3  91 rr        	sta (z80_hl),y		; pick it up.
0011F8  3  C8           	iny 			; point to y coord.
0011F9  3               getob1:
0011F9  3  A0 21        	ldy #33
0011FB  3  B1 rr        	lda (z80_hl),y		; y coord.
0011FD  3  85 rr        	sta dispy
0011FF  3  A0 22        	ldy #34
001201  3  B1 rr        	lda (z80_hl),y 		; x coord.
001203  3  85 rr        	sta dispx
001205  3  4C C6 11     	jmp dobj1 		; delete object sprite.
001208  3               getob0:
001208  3  A9 FF        	lda #255
00120A  3  91 rr        	sta (z80_hl),y 		; pick it up.
00120C  3  60           	rts
00120D  3               
00120D  3               ;-----------------------------------------------------------------
00120D  3               ; Got object check.
00120D  3               ; Call with object in accumulator, returns zero set if in pockets.
00120D  3               ;
00120D  3               ; Input:
00120D  3               ;  A = object number
00120D  3               ;-----------------------------------------------------------------
00120D  3               
00120D  3               gotob:
00120D  3  CD 37 0E     	cmp numob 		; number of objects in game.
001210  3  90 03        	bcc :+ 			; are we checking past the end?
001212  3  4C 19 12     	jmp gotob0 		; yes, we can't have a non-existent object.
001215  3               :
001215  3  20 1E 12     	jsr findob		; find the object.
001218  3               gotob1:
001218  3  60           	rts
001219  3               
001219  3               gotob0:
001219  3  A9 FE        	lda #254 		; missing.
00121B  3  4C 18 12     	jmp gotob1
00121E  3               
00121E  3               findob:
00121E  3  48           	pha			; save object number
00121F  3  A9 D7        	lda #<objdta 		; objects.
001221  3  85 rr        	sta z80_l
001223  3  A9 72        	lda #>objdta
001225  3  85 rr        	sta z80_h
001227  3  68           	pla			; retreive object number
001228  3  F0 0F        	beq fndob1 		; is it zero? yes, skip loop.
00122A  3  AA           	tax 			; loop counter
00122B  3               fndob2:
00122B  3  18           	clc
00122C  3  A5 rr        	lda z80_l
00122E  3  69 26        	adc #38 		; size of each object.
001230  3  85 rr        	sta z80_l
001232  3  90 02        	bcc :+
001234  3  E6 rr        	inc z80_h
001236  3               :
001236  3  CA           	dex 			; repeat until we find address.
001237  3  D0 F2        	bne fndob2
001239  3               fndob1:
001239  3  A0 20        	ldy #32			; distance to room it's in.
00123B  3  B1 rr        	lda (z80_hl),y		; fetch status.
00123D  3  60           	rts
00123E  3               
00123E  3               ;---------------------------------------------
00123E  3               ; Drop object number at (dispx, dispy).
00123E  3               ;
00123E  3               ; Input:
00123E  3               ;  A = object number
00123E  3               ;---------------------------------------------
00123E  3               
00123E  3               drpob:
00123E  3  CD 37 0E     	cmp numob 		; are we checking past the end?
001241  3  90 01        	bcc :+
001243  3  60           	rts			; yes, can't drop non-existent item.
001244  3               :
001244  3  20 0D 12     	jsr gotob		; make sure object is in inventory.
001247  3  C5 rr        	cmp scno		; already on this screen?
001249  3  D0 01        	bne :+
00124B  3  60           	rts			; yes, nothing to do.
00124C  3               :
00124C  3  A0 20        	ldy #32
00124E  3  A5 rr        	lda scno
001250  3  91 rr        	sta (z80_hl),y		; bring onto screen.
001252  3  A5 rr        	lda dispy		; sprite y coordinate.
001254  3  C8           	iny 
001255  3  91 rr        	sta (z80_hl),y		; point to object y.
001257  3  A5 rr        	lda dispx 		; sprite x coordinate.
001259  3  C8           	iny
00125A  3  91 rr        	sta (z80_hl),y 		; point to object x
00125C  3  4C BB 11     	jmp dobj		; draw the object sprite.
00125F  3               
00125F  3               ;-----------------------------------------------
00125F  3               ; Seek objects at sprite position.
00125F  3               ;
00125F  3               ; Output:
00125F  3               ;  A = object number, if not found A=255
00125F  3               ;-----------------------------------------------
00125F  3               
00125F  3               skobj:
00125F  3  A9 D7        	lda #<objdta 		; pointer to objects.
001261  3  85 rr        	sta z80_l
001263  3  A9 72        	lda #>objdta
001265  3  85 rr        	sta z80_h
001267  3               
001267  3  AD 37 0E     	lda numob 		; number of objects in game.
00126A  3  85 rr        	sta z80_b 		; set up the loop counter.
00126C  3               skobj0:
00126C  3  A5 rr        	lda scno		; current room number.
00126E  3  A0 20        	ldy #32
001270  3  D1 rr        	cmp (z80_hl),y		; is object in here?
001272  3  D0 03        	bne :+
001274  3  20 89 12     	jsr skobj1		; yes, check coordinates.
001277  3               :
001277  3  18           	clc			; point to next object in table.
001278  3  A5 rr        	lda z80_l
00127A  3  69 26        	adc #38			; size of each object.
00127C  3  85 rr        	sta z80_l
00127E  3  90 02        	bcc :+
001280  3  E6 rr        	inc z80_h
001282  3               :
001282  3  C6 rr        	dec z80_b
001284  3  D0 E6        	bne skobj0		; repeat for all objects.
001286  3               
001286  3  A9 FF        	lda #255		; end of list and nothing found, return 255.
001288  3  60           	rts
001289  3               
001289  3               skobj1:
001289  3  A0 21        	ldy #33			; point to y coordinate.
00128B  3  B1 rr        	lda (z80_hl),y		; point to y coordinate.
00128D  3  38           	sec
00128E  3  A0 08        	ldy #var_newY
001290  3  F1 rr        	sbc (z80_ix),y 		; subtract sprite y.
001292  3  18           	clc
001293  3  69 0F        	adc #15			; add sprite height minus one.
001295  3  C9 1F        	cmp #31			; within range?
001297  3  90 03        	bcc :+
001299  3  4C B7 12     	jmp skobj2		; no, ignore object.
00129C  3               :
00129C  3  A0 22        	ldy #34			; point to x coordinate now.
00129E  3  B1 rr        	lda (z80_hl),y 		; get coordinate.
0012A0  3  38           	sec
0012A1  3  A0 09        	ldy #var_newX
0012A3  3  F1 rr        	sbc (z80_ix),y 		; subtract the sprite x.
0012A5  3  18           	clc			; add sprite width minus one.
0012A6  3  69 0F        	adc #15
0012A8  3  C9 1F        	cmp #31			; within range?
0012AA  3  90 03        	bcc :+
0012AC  3  4C B7 12     	jmp skobj2		; no, ignore object.
0012AF  3               :
0012AF  3  68           	pla			; remove return address from stack.
0012B0  3  68           	pla
0012B1  3               
0012B1  3  AD 37 0E     	lda numob 		; objects in game.
0012B4  3  38           	sec
0012B5  3  E5 rr        	sbc z80_b		; subtract loop counter.
0012B7  3               skobj2:
0012B7  3  60           	rts			; accumulator now points to object.
0012B8  3               
0012B8  3               
0012B8  3               ;---------------------------------------------------------------------
0012B8  3               ; Spawn a new sprite.
0012B8  3               ;---------------------------------------------------------------------
0012B8  3               
0012B8  3               spawn:
0012B8  3  A9 42        	lda #<sprtab		; sprite table.
0012BA  3  85 rr        	sta z80_l
0012BC  3  A9 22        	lda #>sprtab
0012BE  3  85 rr        	sta z80_h
0012C0  3               numsp1:
0012C0  3  A9 0C        	lda #NUMSPR		; number of sprites.
0012C2  3  8D 63 13     	sta spcnt
0012C5  3               spaw0:
0012C5  3  A0 00        	ldy #var_Type
0012C7  3  B1 rr        	lda (z80_hl),y		; get sprite type.
0012C9  3  C9 FF        	cmp #255		; is it an unused slot?
0012CB  3  F0 10        	beq spaw1 		; yes, we can use this one.
0012CD  3               
0012CD  3  18           	clc 			; point to next sprite in table.
0012CE  3  A5 rr        	lda z80_l
0012D0  3  69 11        	adc #TABSIZ		; size of each entry.
0012D2  3  85 rr        	sta z80_l
0012D4  3  90 02        	bcc :+
0012D6  3  E6 rr        	inc z80_h
0012D8  3               :
0012D8  3  CE 63 13     	dec spcnt		; one less iteration.
0012DB  3  D0 E8        	bne spaw0		; keep going until we find a slot.
0012DD  3               
0012DD  3               ; Didn't find one but drop through and set up a dummy sprite instead.
0012DD  3               
0012DD  3               spaw1:
0012DD  3  A5 rr        	lda z80_i		; address of original sprite.
0012DF  3  48           	pha
0012E0  3  A5 rr        	lda z80_x
0012E2  3  48           	pha
0012E3  3               
0012E3  3  A5 rr        	lda z80_l		; store spawned sprite address.
0012E5  3  8D 64 13     	sta spptr
0012E8  3  A5 rr        	lda z80_h
0012EA  3  8D 65 13     	sta spptr+1
0012ED  3               
0012ED  3  A5 rr        	lda z80_c
0012EF  3  A0 00        	ldy #var_Type
0012F1  3  91 rr        	sta (z80_hl),y 		; set the type.
0012F3  3  A0 05        	ldy #var_newType
0012F5  3  91 rr        	sta (z80_hl),y		; copy
0012F7  3               
0012F7  3  A5 rr        	lda z80_b
0012F9  3  A0 01        	ldy #var_Image
0012FB  3  91 rr        	sta (z80_hl),y		; set the image.
0012FD  3  A0 06        	ldy #var_newImage
0012FF  3  91 rr        	sta (z80_hl),y		; copy
001301  3               
001301  3  A9 00        	lda #0 				; frame zero.
001303  3  A0 02        	ldy #var_Frame
001305  3  91 rr        	sta (z80_hl),y		; set frame.
001307  3  A0 07        	ldy #var_newFrame
001309  3  91 rr        	sta (z80_hl),y		; copy
00130B  3               
00130B  3  A0 09        	ldy #9
00130D  3  B1 rr        	lda (z80_ix),y 		; x coordinate.
00130F  3  A0 04        	ldy #var_X
001311  3  91 rr        	sta (z80_hl),y		; set sprite coordinate.
001313  3  A0 09        	ldy #var_newX
001315  3  91 rr        	sta (z80_hl),y		; copy
001317  3               
001317  3  A0 08        	ldy #8
001319  3  B1 rr        	lda (z80_ix),y 		; y coordinate.
00131B  3  A0 03        	ldy #var_Y
00131D  3  91 rr        	sta (z80_hl),y		; set sprite coordinate.
00131F  3  A0 08        	ldy #var_newY
001321  3  91 rr        	sta (z80_hl),y		; copy
001323  3               
001323  3  A0 0A        	ldy #10				; direction of original.
001325  3  B1 rr        	lda (z80_ix),y
001327  3  A0 0A        	ldy #var_Direction
001329  3  91 rr        	sta (z80_hl),y		; direction
00132B  3               
00132B  3  A9 00        	lda #0
00132D  3  A0 0D        	ldy #var_jumpLo
00132F  3  91 rr        	sta (z80_hl),y		; reset parameter.
001331  3  C8           	iny
001332  3  91 rr        	sta (z80_hl),y		; reset parameter.
001334  3  C8           	iny
001335  3  91 rr        	sta (z80_hl),y		; reset parameter.
001337  3  C8           	iny
001338  3  91 rr        	sta (z80_hl),y		; reset parameter.
00133A  3               rtssp:
00133A  3  AD 64 13     	lda spptr			; address of new sprite.
00133D  3  85 rr        	sta z80_x
00133F  3  AD 65 13     	lda spptr+1
001342  3  85 rr        	sta z80_i
001344  3               evis1:
001344  3  20 A9 47     	jsr evnt09 			; call sprite initialisation event.
001347  3               
001347  3  AD 64 13     	lda spptr 			; address of new sprite.
00134A  3  85 rr        	sta z80_x
00134C  3  AD 65 13     	lda spptr+1
00134F  3  85 rr        	sta z80_i
001351  3               
001351  3               	; _BEEB clipping code copied from CPC Engine - MISSING?!
001351  3  A0 03        	ldy #var_Y
001353  3  B1 rr        	lda (z80_hl), y		; old x coord
001355  3  C9 B9        	cmp #SpriteMaxY     ; beyond maximum?
001357  3  B0 03        	bcs :+				; yes, don't draw it.
001359  3               
001359  3  20 62 1D     	jsr sspria 			; display the new sprite.
00135C  3               :
00135C  3  68           	pla					; address of original sprite.
00135D  3  85 rr        	sta z80_x
00135F  3  68           	pla
001360  3  85 rr        	sta z80_i
001362  3               
001362  3  60           	rts
001363  3               
001363  3  00           spcnt:	.byte 0
001364  3  00 00        spptr:	.word 0			; spawned sprite pointer.
001366  3  00           seed:	.byte 0			; seed for random numbers.
001367  3  30 30 30 30  score:	.byte "000000"		; player"s score.
00136B  3  30 30        
00136D  3  30 30 30 30  hiscor:	.byte "000000"		; high score.
001371  3  30 30        
001373  3  30 30 30 30  bonus:	.byte "000000"		; bonus.
001377  3  30 30        
001379  3  00 68        grbase:	.word ScreenAddr	; graphics base address.
00137B  3               
00137B  3               ;----------------------------------------------------
00137B  3               ; Check y-pos
00137B  3               ;----------------------------------------------------
00137B  3               
00137B  3               checkx:
00137B  3  A5 rr        	lda dispy		; y position.
00137D  3  C9 18        	cmp #24			; off screen?
00137F  3  B0 01        	bcs :+
001381  3  60           	rts			; no, it's okay.
001382  3               :
001382  3  68           	pla			; remove return address from stack.
001383  3  85 rr        	sta z80_l
001385  3  68           	pla
001386  3  85 rr        	sta z80_h
001388  3  60           	rts
001389  3               
001389  3               ;-----------------------------------------------
001389  3               ; Displays the current high score.
001389  3               ;-----------------------------------------------
001389  3               
001389  3               dhisc:
001389  3  A9 6D        	lda #<hiscor 		; high score text.
00138B  3  85 rr        	sta z80_l
00138D  3  A9 13        	lda #>hiscor
00138F  3  85 rr        	sta z80_h
001391  3  4C 9C 13     	jmp dscor1		; check in printable range then show 6 digits.
001394  3               
001394  3               ;------------------------------------------------------
001394  3               ; Displays the current score.
001394  3               ;------------------------------------------------------
001394  3               
001394  3               dscor:
001394  3  A9 67        	lda #<score		; score text.
001396  3  85 rr        	sta z80_l
001398  3  A9 13        	lda #>score
00139A  3  85 rr        	sta z80_h
00139C  3               dscor1:
00139C  3  20 E2 1A     	jsr preprt		; set up font and print position.
00139F  3  20 7B 13     	jsr checkx		; make sure we're in a printable range.
0013A2  3               
0013A2  3  A9 06        	lda #6			; digits to display.
0013A4  3  85 rr        	sta z80_b
0013A6  3  AD 31 1A     	lda prtmod		; get print mode.
0013A9  3  F0 03        	beq :+			; standard size text?
0013AB  3  4C CA 13     	jmp bscor0		; no, show double-height.
0013AE  3               :
0013AE  3               dscor0:
0013AE  3  A0 00        	ldy #0
0013B0  3  B1 rr        	lda (z80_hl),y 		; fetch character.
0013B2  3  20 14 15     	jsr pchar 		; display character.
0013B5  3  E6 rr        	inc dispx		; move along x coordinate
0013B7  3               
0013B7  3  E6 rr        	inc z80_l		; next score column.
0013B9  3  D0 02        	bne :+
0013BB  3  E6 rr        	inc z80_h
0013BD  3               :
0013BD  3  C6 rr        	dec z80_b
0013BF  3  D0 ED        	bne dscor0 		; repeat for all digits.
0013C1  3               dscor2:
0013C1  3  A5 rr        	lda dispx 		; set up display coordinates.
0013C3  3  85 rr        	sta charx
0013C5  3  A5 rr        	lda dispy
0013C7  3  85 rr        	sta chary
0013C9  3  60           	rts
0013CA  3               
0013CA  3               ;------------------------------------------------------
0013CA  3               ; Displays the current score in double-height characters.
0013CA  3               ;
0013CA  3               ; Input:
0013CA  3               ;  B  = digit number
0013CA  3               ;  HL = score string
0013CA  3               ;------------------------------------------------------
0013CA  3               
0013CA  3               bscor0:
0013CA  3  A0 00        	ldy #0
0013CC  3               
0013CC  3  B1 rr        	lda (z80_hl),y 		; fetch character.
0013CE  3  20 64 1A     	jsr bchar 		; display big char.
0013D1  3               
0013D1  3  E6 rr        	inc z80_l 		; next score column.
0013D3  3  D0 02        	bne :+
0013D5  3  E6 rr        	inc z80_h
0013D7  3               :
0013D7  3  C6 rr        	dec z80_b
0013D9  3  F0 03        	beq :+
0013DB  3  4C CA 13     	jmp bscor0 		; repeat for all digits.
0013DE  3               :
0013DE  3  4C C1 13     	jmp dscor2 		; tidy up line and column variables.
0013E1  3               
0013E1  3               ;-----------------------------------------------------
0013E1  3               ; Adds number in the hl pair to the score.
0013E1  3               ;-----------------------------------------------------
0013E1  3               
0013E1  3               addsc:
0013E1  3  A9 68        	lda #<(score+1) 	; ten thousands column.
0013E3  3  85 rr        	sta z80_e
0013E5  3  A9 13        	lda #>(score+1)
0013E7  3  85 rr        	sta z80_d
0013E9  3  A9 10        	lda #<10000		; amount to add each time.
0013EB  3  85 rr        	sta z80_c
0013ED  3  A9 27        	lda #>10000
0013EF  3  85 rr        	sta z80_b
0013F1  3  20 35 14     	jsr incsc		; add to score.
0013F4  3               
0013F4  3  E6 rr        	inc z80_e		; thousands column.
0013F6  3  D0 02        	bne :+
0013F8  3  E6 rr        	inc z80_d
0013FA  3               :
0013FA  3  A9 E8        	lda #<1000		; amount to add each time.
0013FC  3  85 rr        	sta z80_c
0013FE  3  A9 03        	lda #>1000
001400  3  85 rr        	sta z80_b
001402  3  20 35 14     	jsr incsc 		; add to score.
001405  3               
001405  3  E6 rr        	inc z80_e		; hundreds column.
001407  3  D0 02        	bne :+
001409  3  E6 rr        	inc z80_d
00140B  3               :
00140B  3  A9 64        	lda #<100		; amount to add each time.
00140D  3  85 rr        	sta z80_c
00140F  3  A9 00        	lda #>100
001411  3  85 rr        	sta z80_b
001413  3  20 35 14     	jsr incsc		; add to score.
001416  3               
001416  3  E6 rr        	inc z80_e 		; tens column.
001418  3  D0 02        	bne :+
00141A  3  E6 rr        	inc z80_d
00141C  3               :
00141C  3  A9 0A        	lda #<10		; amount to add each time.
00141E  3  85 rr        	sta z80_c
001420  3  A9 00        	lda #>10
001422  3  85 rr        	sta z80_b
001424  3  20 35 14     	jsr incsc 		; add to score.
001427  3               
001427  3  E6 rr        	inc z80_e		; units column.
001429  3  D0 02        	bne :+
00142B  3  E6 rr        	inc z80_d
00142D  3               :
00142D  3  A9 01        	lda #<1			; units.
00142F  3  85 rr        	sta z80_c
001431  3  A9 00        	lda #>1
001433  3  85 rr        	sta z80_b
001435  3               incsc:
001435  3  A5 rr        	lda z80_h		; store amount to add.
001437  3  48           	pha
001438  3  A5 rr        	lda z80_l
00143A  3  48           	pha
00143B  3               
00143B  3  38           	sec			; subtract from amount to add.
00143C  3  A5 rr        	lda z80_l
00143E  3  E5 rr        	sbc z80_c
001440  3  85 rr        	sta z80_l
001442  3  A5 rr        	lda z80_h
001444  3  E5 rr        	sbc z80_b
001446  3  85 rr        	sta z80_h
001448  3  90 14        	bcc incsc0		; too much, restore value.
00144A  3               
00144A  3  68           	pla			; delete the previous amount from the stack.
00144B  3  68           	pla
00144C  3               
00144C  3  A5 rr        	lda z80_d 		; store column position.
00144E  3  48           	pha
00144F  3  A5 rr        	lda z80_e
001451  3  48           	pha
001452  3  20 65 14     	jsr incsc2		; do the increment.
001455  3               
001455  3  68           	pla			; restore column.
001456  3  85 rr        	sta z80_e
001458  3  68           	pla
001459  3  85 rr        	sta z80_d
00145B  3  4C 35 14     	jmp incsc		; repeat until all added.
00145E  3               
00145E  3               incsc0:
00145E  3  68           	pla			; restore previous value.
00145F  3  85 rr        	sta z80_l
001461  3  68           	pla
001462  3  85 rr        	sta z80_h
001464  3  60           	rts
001465  3               incsc2:
001465  3  A0 00        	ldy #0
001467  3  B1 rr        	lda (z80_de),y 		; get amount.
001469  3  18           	clc
00146A  3  69 01        	adc #1			; add one to column.
00146C  3  91 rr        	sta (z80_de),y		; write new column total.
00146E  3  C9 3A        	cmp #'9'+1		; gone beyond range of digits?
001470  3  B0 01        	bcs :+
001472  3  60           	rts			; no, carry on.
001473  3               :
001473  3  A9 30        	lda #'0'		; make it zero.
001475  3  91 rr        	sta (z80_de),y		; write new column total.
001477  3  C6 rr        	dec z80_e		; back one column.
001479  3  D0 02        	bne :+
00147B  3  C6 rr        	dec z80_d
00147D  3               :
00147D  3  4C 65 14     	jmp incsc2
001480  3               
001480  3               ;------------------------------------
001480  3               ; Add bonus to score and reset bonus
001480  3               ;------------------------------------
001480  3               
001480  3               addbo:
001480  3  A2 05        	ldx #5			; last digit.
001482  3  18           	clc			; clear carry.
001483  3               addbo0:
001483  3  BD 67 13     	lda score,x		; get score.
001486  3  7D 73 13     	adc bonus,x		; add bonus.
001489  3  38           	sec			; 0 to 18.
00148A  3  E9 30        	sbc #48
00148C  3  48           	pha
00148D  3  A9 30        	lda #'0'
00148F  3  9D 73 13     	sta bonus,x		; zeroise bonus.
001492  3  68           	pla
001493  3  C9 3A        	cmp #58			; carried?
001495  3  B0 07        	bcs addbo2		; no, do next one.
001497  3  38           	sec
001498  3  E9 0A        	sbc #10			; subtract 10.
00149A  3  38           	sec
00149B  3  4C 9F 14     	jmp addbo1
00149E  3               addbo2:
00149E  3  18           	clc
00149F  3               addbo1:
00149F  3  9D 67 13     	sta score,x		; write new score.
0014A2  3  CA           	dex			; next digit.
0014A3  3  10 DE        	bpl addbo0		; repeat for all 6 digits.
0014A5  3  60           	rts
0014A6  3               
0014A6  3               ;------------------------------------
0014A6  3               ; Swap score and bonus.
0014A6  3               ;------------------------------------
0014A6  3               
0014A6  3               swpsb:
0014A6  3  A2 05        	ldx #5			; digits to add.
0014A8  3               swpsb0:
0014A8  3  BD 67 13     	lda score,x 		; get score digits.
0014AB  3  48           	pha			; save digit
0014AC  3  BD 73 13     	lda bonus,x 		; get bonus digits.
0014AF  3  9D 67 13     	sta score,x		; switch score-bonus
0014B2  3  68           	pla
0014B3  3  9D 73 13     	sta bonus,x
0014B6  3  CA           	dex 			; repeat for all 6 digits.
0014B7  3  10 EF        	bpl swpsb0
0014B9  3  60           	rts
0014BA  3               
0014BA  3               ;----------------------------------------------------
0014BA  3               ; Get print address.
0014BA  3               ;----------------------------------------------------
0014BA  3               
0014BA  3               gprad:
0014BA  3  98           	tya
0014BB  3  48           	pha
0014BC  3               
0014BC  3  A5 rr        	lda dispx 		; x coordinate.
0014BE  3  85 rr        	sta scraddr
0014C0  3  A9 00        	lda #0
0014C2  3  85 rr        	sta scraddr+1
0014C4  3  06 rr        	asl scraddr  	; multiply char by 8
0014C6  3  26 rr        	rol scraddr+1
0014C8  3  06 rr        	asl scraddr
0014CA  3  26 rr        	rol scraddr+1
0014CC  3  06 rr        	asl scraddr
0014CE  3  26 rr        	rol scraddr+1
0014D0  3               
0014D0  3  A5 rr        	lda dispy		; y coordinate.
0014D2  3  0A           	asl a
0014D3  3  0A           	asl a
0014D4  3  0A           	asl a			; multiply char by 8
0014D5  3  A8           	tay
0014D6  3               
0014D6  3  18           	clc
0014D7  3  A5 rr        	lda scraddr
0014D9  3  79 00 06     	adc SCADTB_lb,y
0014DC  3  85 rr        	sta scraddr
0014DE  3  A5 rr        	lda scraddr+1
0014E0  3  79 00 07     	adc SCADTB_hb,y
0014E3  3  85 rr        	sta scraddr+1
0014E5  3               
0014E5  3  68           	pla
0014E6  3  A8           	tay
0014E7  3  60           	rts
0014E8  3               
0014E8  3               ;--------------------------------------------------------------
0014E8  3               ; Get property buffer address of char at (dispx, dispy) in hl.
0014E8  3               ; 
0014E8  3               ; Output:
0014E8  3               ;  buffaddr = bufaddr = MAP + dispy*32 + dispx
0014E8  3               ;--------------------------------------------------------------
0014E8  3               
0014E8  3               pradd:
0014E8  3  A5 rr        	lda dispy 		; y coordinate.
0014EA  3  85 rr        	sta bufaddr
0014EC  3  A9 00        	lda #0
0014EE  3  85 rr        	sta bufaddr+1
0014F0  3  06 rr        	asl bufaddr  		; multiply char by 32
0014F2  3  26 rr        	rol bufaddr+1
0014F4  3  06 rr        	asl bufaddr
0014F6  3  26 rr        	rol bufaddr+1
0014F8  3  06 rr        	asl bufaddr
0014FA  3  26 rr        	rol bufaddr+1
0014FC  3  06 rr        	asl bufaddr
0014FE  3  26 rr        	rol bufaddr+1
001500  3  06 rr        	asl bufaddr
001502  3  26 rr        	rol bufaddr+1
001504  3  18           	clc			; add address of MAP graphics.
001505  3  A5 rr        	lda bufaddr
001507  3  65 rr        	adc dispx
001509  3  69 00        	adc #<MAP
00150B  3  85 rr        	sta bufaddr
00150D  3  A5 rr        	lda bufaddr+1
00150F  3  69 03        	adc #>MAP
001511  3  85 rr        	sta bufaddr+1
001513  3  60           	rts
001514  3               
001514  3               ;----------------------------------------------------
001514  3               ; Display character in A at dispx,dispy.
001514  3               ;
001514  3               ; Input:
001514  3               ;  A 	   = character to print
001514  3               ;----------------------------------------------------
001514  3               
001514  3               pchar:
001514  3  85 rr        	sta fntaddr
001516  3  A9 00        	lda #0
001518  3  85 rr        	sta fntaddr+1
00151A  3  06 rr        	asl fntaddr  		; multiply char by 8.
00151C  3  26 rr        	rol fntaddr+1
00151E  3  06 rr        	asl fntaddr
001520  3  26 rr        	rol fntaddr+1
001522  3  06 rr        	asl fntaddr
001524  3  26 rr        	rol fntaddr+1
001526  3               
001526  3  A5 rr        	lda fntaddr
001528  3  18           	clc
001529  3  65 rr        	adc FontPtr
00152B  3  85 rr        	sta fntaddr		; that's the low byte.
00152D  3  A5 rr        	lda fntaddr+1
00152F  3  65 rr        	adc FontPtr+1
001531  3  85 rr        	sta fntaddr+1		; add displacement.
001533  3               pchark:
001533  3  20 BA 14     	jsr gprad		; get screen address.
001536  3  A2 07        	ldx #7			; lines to write.
001538  3               pchar0:
001538  3  A0 00        	ldy #0
00153A  3  B1 rr        	lda (fntaddr),y 	; get image byte.
00153C  3  BC 4D 15     	ldy scrtab,x		; Get rowoffset
00153F  3               
00153F  3  49 00        	eor #TxtInvert		; Invert
001541  3               
001541  3  91 rr        	sta (scraddr),y 	; copy to screen.
001543  3  E6 rr        	inc fntaddr		; next image byte.
001545  3  D0 02        	bne :+
001547  3  E6 rr        	inc fntaddr+1
001549  3               :
001549  3  CA           	dex			; next screen row down.
00154A  3  10 EC        	bpl pchar0		; repeat.
00154C  3  60           	rts
00154D  3               
00154D  3  07 06 05 04  scrtab:		.byte $07,$06,$05,$04,$03,$02,$01,$00
001551  3  03 02 01 00  
001555  3               ;scrtab:	.byte $e0,$c0,$a0,$80,$60,$40,$20,$00
001555  3               
001555  3               ;----------------------------------------------
001555  3               ; Print attributes, properties and pixels.
001555  3               ;
001555  3               ; Input:
001555  3               ;  A	= tile number
001555  3               ;----------------------------------------------
001555  3               
001555  3               pattr:
001555  3  85 rr        	sta z80_b		; store cell in b register for now.
001557  3  AA           	tax
001558  3  BD F6 51     	lda bprop,x 		; block properties.
00155B  3  85 rr        	sta z80_c
00155D  3  20 E8 14     	jsr pradd 		; get property buffer address.
001560  3  A5 rr        	lda z80_c
001562  3  A0 00        	ldy #0
001564  3  91 rr        	sta (bufaddr),y 	; write property.
001566  3  A5 rr        	lda z80_b 		; restore cell.
001568  3               
001568  3               ; Print attributes, no properties.
001568  3               
001568  3               panp:
001568  3  85 rr        	sta z80_e		; displacement in e.
00156A  3  A9 00        	lda #0
00156C  3  85 rr        	sta z80_d		; no high byte.
00156E  3  06 rr        	asl z80_e  		; multiply char by 8.
001570  3  26 rr        	rol z80_d
001572  3  06 rr        	asl z80_e
001574  3  26 rr        	rol z80_d
001576  3  06 rr        	asl z80_e
001578  3  26 rr        	rol z80_d
00157A  3  18           	clc
00157B  3  A5 rr        	lda z80_e
00157D  3  69 26        	adc #<chgfx 		; address of graphics.
00157F  3  85 rr        	sta tileaddr
001581  3  A5 rr        	lda z80_d
001583  3  69 4F        	adc #>chgfx
001585  3  85 rr        	sta tileaddr+1
001587  3  20 BA 14     	jsr gprad 		; get screen address.
00158A  3  A2 07        	ldx #7			; number of pixel rows to write.
00158C  3               panp0:
00158C  3  A0 00        	ldy #0
00158E  3  B1 rr        	lda (tileaddr),y 	; get image byte.
001590  3  49 00        	eor #TxtInvert		; Invert
001592  3  BC 4D 15     	ldy scrtab,x
001595  3  91 rr        	sta (scraddr),y 	; copy to screen.
001597  3  E6 rr        	inc tileaddr 		; next image byte.
001599  3  D0 02        	bne :+
00159B  3  E6 rr        	inc tileaddr+1
00159D  3               :
00159D  3  CA           	dex	 		; repeat for 8 pixel rows.
00159E  3  10 EC        	bpl panp0
0015A0  3  E6 rr        	inc dispx 		; move along one.
0015A2  3  E6 rr        	inc charx
0015A4  3  60           	rts
0015A5  3               
0015A5  3               ;----------------------------------------------
0015A5  3               ; Print character pixels, no more.
0015A5  3               ;
0015A5  3               ; Input:
0015A5  3               ;  A	= character to print
0015A5  3               ;----------------------------------------------
0015A5  3               
0015A5  3               pchr:
0015A5  3  20 14 15     	jsr pchar 		; show character in accumulator.
0015A8  3  E6 rr        	inc dispx		; move along one.
0015AA  3  60           	rts
0015AB  3               
0015AB  3               ;----------------------------------------------------
0015AB  3               ; Shifter sprite routine for objects.
0015AB  3               ;----------------------------------------------------
0015AB  3               
0015AB  3               sprit7:
0015AB  3  A5 rr        	lda z80_b
0015AD  3  F0 0F        	beq sprit0
0015AF  3  85 rr        	sta z80_a
0015B1  3               sprit3:
0015B1  3  4E 3B 16     	lsr spr			; shift into position.
0015B4  3  6E 3C 16     	ror spr+1
0015B7  3  6E 3D 16     	ror spr+2
0015BA  3  C6 rr        	dec z80_a		; one less iteration.
0015BC  3  D0 F3        	bne sprit3
0015BE  3               sprit0:
0015BE  3  60           	rts 			; now apply to screen.
0015BF  3               
0015BF  3               ;----------------------------------------------------
0015BF  3               ; Draw sprite
0015BF  3               ;----------------------------------------------------
0015BF  3               
0015BF  3               sprite:
0015BF  3  8E 3E 16     	stx xtmp		; Save X-reg
0015C2  3  20 46 1D     	jsr scadd 		; get screen address in scraddr.
0015C5  3               
0015C5  3  A5 rr        	lda dispx 		; x position.
0015C7  3  29 07        	and #7 			; position straddling cells.
0015C9  3  85 rr        	sta z80_b		; store in b register.
0015CB  3               
0015CB  3  A5 rr        	lda z80_l		; store sprite graphic address.
0015CD  3  8D E0 15     	sta sprit1+1
0015D0  3  8D E7 15     	sta sprit2+1
0015D3  3  A5 rr        	lda z80_h
0015D5  3  8D E1 15     	sta sprit1+2
0015D8  3  8D E8 15     	sta sprit2+2
0015DB  3               
0015DB  3  A2 00        	ldx #0			; pixel height.
0015DD  3  A0 00        	ldy #0
0015DF  3               sprit1:
0015DF  3  BD D7 72     	lda objdta,x		; fetch first byte.
0015E2  3  8D 3B 16     	sta spr
0015E5  3  E8           	inx
0015E6  3               sprit2:
0015E6  3  BD D7 72     	lda objdta,x
0015E9  3  8D 3C 16     	sta spr+1
0015EC  3               
0015EC  3  A9 00        	lda #0
0015EE  3  8D 3D 16     	sta spr+2
0015F1  3  20 AB 15     	jsr sprit7		; shift sprite
0015F4  3               
0015F4  3  AD 3B 16     	lda spr			; fetch graphic.
0015F7  3  A0 00        	ldy #0			; _BEEB
0015F9  3  51 rr        	eor (scraddr),y		; merge with screen image.
0015FB  3  91 rr        	sta (scraddr),y		; write to screen.
0015FD  3               
0015FD  3  AD 3C 16     	lda spr+1		; fetch graphic.
001600  3  A0 08        	ldy #8			; _BEEB
001602  3  51 rr        	eor (scraddr),y		; merge with screen image.
001604  3  91 rr        	sta (scraddr),y		; write to screen.
001606  3               
001606  3  AD 3D 16     	lda spr+2		; fetch graphic.
001609  3  A0 10        	ldy #16			; _BEEB
00160B  3  51 rr        	eor (scraddr),y		; merge with screen image.
00160D  3  91 rr        	sta (scraddr),y		; write to screen.
00160F  3               
00160F  3  20 E6 1D     	jsr nline
001612  3               
001612  3  E8           	inx			; next source byte.
001613  3  E0 20        	cpx #32
001615  3  D0 C8        	bne sprit1		; repeat
001617  3               
001617  3  AE 3E 16     	ldx xtmp		; retreive X-reg
00161A  3  60           	rts
00161B  3               
00161B  3               spritetab:
00161B  3  00 01 20 21  	.byte $00,$01,$20,$21,$40,$41,$60,$61
00161F  3  40 41 60 61  
001623  3  80 81 A0 A1  	.byte $80,$81,$a0,$a1,$c0,$c1,$e0,$e1
001627  3  C0 C1 E0 E1  
00162B  3  00 01 20 21  	.byte $00,$01,$20,$21,$40,$41,$60,$61
00162F  3  40 41 60 61  
001633  3  80 81 A0 A1  	.byte $80,$81,$a0,$a1,$c0,$c1,$e0,$e1
001637  3  C0 C1 E0 E1  
00163B  3               
00163B  3  00 00 00     spr:	.byte 0,0,0
00163E  3               
00163E  3  00           xtmp:	.byte 0
00163F  3               
00163F  3               ;-----------------------------------------------------------
00163F  3               ; Get room address.
00163F  3               ;-----------------------------------------------------------
00163F  3               
00163F  3               groom:
00163F  3  A6 rr        	ldx scno 		; screen number.
001641  3  A0 00        	ldy #0
001643  3               groomx:
001643  3  A9 FA        	lda #<scdat 		; pointer to screens.
001645  3  85 rr        	sta z80_l
001647  3  A9 6D        	lda #>scdat
001649  3  85 rr        	sta z80_h
00164B  3               groom1:
00164B  3  E0 00        	cpx #0			; is it the first one?
00164D  3  F0 15        	beq groom0 		; no more screens to skip.
00164F  3               
00164F  3  18           	clc
001650  3  A5 rr        	lda z80_l
001652  3  79 FA 6D     	adc scdat,y 		; low byte of screen size.
001655  3  85 rr        	sta z80_l
001657  3  C8           	iny			; point to high byte.
001658  3  A5 rr        	lda z80_h
00165A  3  79 FA 6D     	adc scdat,y 		; high byte of screen size.
00165D  3  85 rr        	sta z80_h
00165F  3  C8           	iny			; next address.
001660  3               
001660  3  CA           	dex 			; one less iteration.
001661  3  4C 4B 16     	jmp groom1 		; loop until we reach the end.
001664  3               groom0:
001664  3  AD 73 72     	lda numsc 		; add displacement.
001667  3  0A           	asl a
001668  3  18           	clc			; add double displacement to address.
001669  3  65 rr        	adc z80_l
00166B  3  85 rr        	sta z80_l
00166D  3  A5 rr        	lda z80_h
00166F  3  69 00        	adc #0
001671  3  85 rr        	sta z80_h
001673  3  60           	rts
001674  3               
001674  3               ;-----------------------------------------------------------
001674  3               ; Draw present room.
001674  3               ;-----------------------------------------------------------
001674  3               
001674  3               droom:
001674  3  AD 33 0E     	lda wintop 		; window top.
001677  3  85 rr        	sta dispy		; set cursor y position.
001679  3               droom2:
001679  3  20 3F 16     	jsr groom 		; get address of current room.
00167C  3  A9 00        	lda #0	 		; zero in accumulator.
00167E  3  8D D9 16     	sta comcnt 		; reset compression counter.
001681  3  AD 35 0E     	lda winhgt 		; height of window.
001684  3  8D A6 16     	sta rrow		; set row counter
001687  3               droom0:
001687  3  AD 34 0E     	lda winlft 		; window left edge.
00168A  3  85 rr        	sta dispx 		; set cursor x position.
00168C  3  AD 36 0E     	lda winwid 		; width of window.
00168F  3  8D A5 16     	sta rcol		; set column counter
001692  3               droom1:
001692  3  20 A7 16     	jsr flbyt 		; decompress next byte on the fly.
001695  3  20 55 15     	jsr pattr 		; show attributes and block.
001698  3  CE A5 16     	dec rcol		; one less column.
00169B  3  D0 F5        	bne droom1 		; repeat for entire line.
00169D  3  E6 rr        	inc dispy		; move down one line.
00169F  3  CE A6 16     	dec rrow 		; one less row.
0016A2  3  D0 E3        	bne droom0 		; repeat for all rows.
0016A4  3  60           	rts
0016A5  3               
0016A5  3  00           rcol:	.byte 0
0016A6  3  00           rrow:	.byte 0
0016A7  3               
0016A7  3               ;----------------------------------------------
0016A7  3               ; Decompress bytes on-the-fly.
0016A7  3               ;----------------------------------------------
0016A7  3               
0016A7  3               flbyt:
0016A7  3  AD D9 16     	lda comcnt 		; compression counter.
0016AA  3  D0 22        	bne flbyt1		; any more to decompress?  yes.
0016AC  3               
0016AC  3  A0 00        	ldy #0
0016AE  3  B1 rr        	lda (z80_hl),y 		; fetch next byte.
0016B0  3  E6 rr        	inc z80_l 		; point to next cell.
0016B2  3  D0 02        	bne :+
0016B4  3  E6 rr        	inc z80_h
0016B6  3               :
0016B6  3  C9 FF        	cmp #255 		; is this byte a control code?
0016B8  3  F0 01        	beq :+
0016BA  3  60           	rts 			; no, this byte is uncompressed.
0016BB  3               :
0016BB  3  B1 rr        	lda (z80_hl),y 		; fetch byte type.
0016BD  3  8D D8 16     	sta combyt 		; set up the type.
0016C0  3  E6 rr        	inc z80_l 		; point to quantity.
0016C2  3  D0 02        	bne :+
0016C4  3  E6 rr        	inc z80_h
0016C6  3               :
0016C6  3  B1 rr        	lda (z80_hl),y 		; get quantity.
0016C8  3  E6 rr        	inc z80_l 		; point to next byte.
0016CA  3  D0 02        	bne :+
0016CC  3  E6 rr        	inc z80_h
0016CE  3               :
0016CE  3               flbyt1:
0016CE  3  8D D9 16     	sta comcnt 		; store new quantity.
0016D1  3  CE D9 16     	dec comcnt		; one less.
0016D4  3  AD D8 16     	lda combyt 		; byte to expand.
0016D7  3  60           	rts
0016D8  3               
0016D8  3  00           combyt:	.byte 0			; byte type compressed.
0016D9  3  00           comcnt:	.byte 0			; compression counter.
0016DA  3               
0016DA  3               ;------------------------------------------
0016DA  3               ; Ladder down check.
0016DA  3               ;
0016DA  3               ; Input:
0016DA  3               ;  IX = sprite pointer
0016DA  3               ;------------------------------------------
0016DA  3               
0016DA  3               laddd:
0016DA  3  A0 09        	ldy #9
0016DC  3  B1 rr        	lda (z80_ix),y		; x coordinate.
0016DE  3  85 rr        	sta dispx
0016E0  3               
0016E0  3  A0 08        	ldy #8
0016E2  3  B1 rr        	lda (z80_ix),y		; y coordinate.
0016E4  3  29 FE        	and #254		; make it even.
0016E6  3  91 rr        	sta (z80_ix),y 		; reset it.
0016E8  3               numsp5:
0016E8  3  18           	clc 			; look down 16 pixels.
0016E9  3  69 10        	adc #16
0016EB  3  85 rr        	sta dispy		; coords in dispx,dispy.
0016ED  3  4C 03 17     	jmp laddv
0016F0  3               
0016F0  3               ;------------------------------------------
0016F0  3               ; Ladder up check.
0016F0  3               ;
0016F0  3               ; Input:
0016F0  3               ;  IX = sprite pointer
0016F0  3               ;
0016F0  3               ; Output:
0016F0  3               ;  A  = 0 is ok, A <>0 is not ok
0016F0  3               ;------------------------------------------
0016F0  3               
0016F0  3               laddu:
0016F0  3  A0 09        	ldy #9
0016F2  3  B1 rr        	lda (z80_ix),y		; x coordinate.
0016F4  3  85 rr        	sta dispx
0016F6  3               
0016F6  3  A0 08        	ldy #8
0016F8  3  B1 rr        	lda (z80_ix),y		; y coordinate.
0016FA  3  29 FE        	and #254 		; make it even.
0016FC  3  91 rr        	sta (z80_ix),y		; reset it.
0016FE  3               numsp6:
0016FE  3  18           	clc 			; look 2 pixels above feet.
0016FF  3  69 0E        	adc #14
001701  3  85 rr        	sta dispy		; coords in dispx,dispy.
001703  3               laddv:
001703  3  20 D9 18     	jsr tstbl 		; get map address.
001706  3  20 10 18     	jsr ldchk 		; standard ladder check.
001709  3  F0 01        	beq :+
00170B  3  60           	rts 			; no way through.
00170C  3               :
00170C  3  E6 rr        	inc bufaddr 		; look right one cell.
00170E  3  D0 02        	bne :+
001710  3  E6 rr        	inc bufaddr+1
001712  3               :
001712  3  20 10 18     	jsr ldchk 		; do the check.
001715  3  F0 01        	beq :+
001717  3  60           	rts 			; impassable.
001718  3               :
001718  3  A5 rr        	lda dispx 		; y coordinate.
00171A  3  29 07        	and #7 			; position straddling block cells.
00171C  3  D0 01        	bne :+
00171E  3  60           	rts 			; no more checks needed.
00171F  3               :
00171F  3  E6 rr        	inc bufaddr 		; look to third cell.
001721  3  D0 02        	bne :+
001723  3  E6 rr        	inc bufaddr+1
001725  3               :
001725  3  20 10 18     	jsr ldchk 		; do the check.
001728  3  60           	rts  			; return with zero flag set accordingly.
001729  3               
001729  3               ;---------------------------------------------------------
001729  3               ; Can go up check.
001729  3               ;
001729  3               ; Input:
001729  3               ;  IX = sprite pointer
001729  3               ;
001729  3               ; Output:
001729  3               ;  A  = 0 is ok, A <>0 is not ok
001729  3               ;---------------------------------------------------------
001729  3               
001729  3               cangu:
001729  3  A0 09        	ldy #9
00172B  3  B1 rr        	lda (z80_ix),y		; x coordinate.
00172D  3  85 rr        	sta dispx
00172F  3  A0 08        	ldy #8
001731  3  B1 rr        	lda (z80_ix),y 		; y coordinate.
001733  3  38           	sec
001734  3  E9 02        	sbc #2
001736  3  85 rr        	sta dispy		; coords in dispx,dispy.
001738  3  20 D9 18     	jsr tstbl 		; get map address.
00173B  3  20 DB 17     	jsr lrchk 		; standard left/right check.
00173E  3  F0 01        	beq :+
001740  3  60           	rts			; no way through.
001741  3               :
001741  3  E6 rr        	inc bufaddr		; look right one cell.
001743  3  D0 02        	bne :+
001745  3  E6 rr        	inc bufaddr+1
001747  3               :
001747  3  20 DB 17     	jsr lrchk 		; do the check.
00174A  3  F0 01        	beq :+
00174C  3  60           	rts			; impassable.
00174D  3               :
00174D  3  A5 rr        	lda dispx		; x coordinate.
00174F  3  29 07        	and #7			; position straddling block cells.
001751  3  D0 01        	bne :+
001753  3  60           	rts			; no more checks needed.
001754  3               :
001754  3  E6 rr        	inc bufaddr		; look to third cell.
001756  3  D0 02        	bne :+
001758  3  E6 rr        	inc bufaddr+1
00175A  3               :
00175A  3  20 DB 17     	jsr lrchk		; do the check.
00175D  3  60           	rts 			; return with zero flag set accordingly.
00175E  3               
00175E  3               ;---------------------------------------------------------
00175E  3               ; Can go down check.
00175E  3               ;
00175E  3               ; Input:
00175E  3               ;  IX = sprite pointer
00175E  3               ;
00175E  3               ; Output:
00175E  3               ;  A  = 0 is ok, A <>0 is not ok
00175E  3               ;---------------------------------------------------------
00175E  3               
00175E  3               cangd:
00175E  3  A0 09        	ldy #9
001760  3  B1 rr        	lda (z80_ix),y 		; x coordinate.
001762  3  85 rr        	sta dispx
001764  3  A0 08        	ldy #8
001766  3  B1 rr        	lda (z80_ix),y		; y coordinate.
001768  3               numsp3:
001768  3  18           	clc
001769  3  69 10        	adc #16 		; look down 16 pixels.
00176B  3  85 rr        	sta dispy		; coords in dispx,dispy.
00176D  3  20 D9 18     	jsr tstbl 		; get map address.
001770  3  20 F0 17     	jsr plchk 		; block, platform check.
001773  3  F0 01        	beq :+
001775  3  60           	rts			; no way through.
001776  3               :
001776  3  E6 rr        	inc bufaddr		; look right one cell.
001778  3  D0 02        	bne :+
00177A  3  E6 rr        	inc bufaddr+1
00177C  3               :
00177C  3  20 F0 17     	jsr plchk		; block, platform check.
00177F  3  F0 01        	beq :+
001781  3  60           	rts			; impassable.
001782  3               :
001782  3  A5 rr        	lda dispx		; x coordinate.
001784  3  29 07        	and #7			; position straddling block cells.
001786  3  D0 01        	bne :+
001788  3  60           	rts			; no more checks needed.
001789  3               :
001789  3  E6 rr        	inc bufaddr		; look to third cell.
00178B  3  D0 02        	bne :+
00178D  3  E6 rr        	inc bufaddr+1
00178F  3               :
00178F  3  20 F0 17     	jsr plchk		; block, platform check.
001792  3  60           	rts			; return with zero flag set accordingly.
001793  3               
001793  3               ;---------------------------------------------------------
001793  3               ; Can go left check.
001793  3               ;
001793  3               ; Input:
001793  3               ;  IX = sprite pointer
001793  3               ;
001793  3               ; Output:
001793  3               ;  A  = 0 is ok, A <>0 is not ok
001793  3               ;---------------------------------------------------------
001793  3               
001793  3               cangl:
001793  3  A0 08        	ldy #8
001795  3  B1 rr        	lda (z80_ix),y 		; y coordinate.
001797  3  85 rr        	sta dispy
001799  3  A0 09        	ldy #9
00179B  3  B1 rr        	lda (z80_ix),y 		; x coordinate.
00179D  3  38           	sec
00179E  3  E9 02        	sbc #2			; look left 2 pixels.
0017A0  3  85 rr        	sta dispx		; coords in dispx,dispy.
0017A2  3  4C B4 17     	jmp cangh		; test if we can go there.
0017A5  3               
0017A5  3               ;---------------------------------------------------------
0017A5  3               ; Can go right check.
0017A5  3               ;
0017A5  3               ; Input:
0017A5  3               ;  IX = sprite pointer
0017A5  3               ;
0017A5  3               ; Output:
0017A5  3               ;  A  = 0 is ok, A <>0 is not ok
0017A5  3               ;---------------------------------------------------------
0017A5  3               
0017A5  3               cangr:
0017A5  3  A0 08        	ldy #8
0017A7  3  B1 rr        	lda (z80_ix),y		; y coordinate.
0017A9  3  85 rr        	sta dispy
0017AB  3  A0 09        	ldy #9
0017AD  3  B1 rr        	lda (z80_ix),y		; x coordinate.
0017AF  3  18           	clc
0017B0  3  69 10        	adc #16			; look right 16 pixels.
0017B2  3  85 rr        	sta dispx		; coords in dispx,dispy.
0017B4  3               cangh:
0017B4  3               cangh2:
0017B4  3  A9 03        	lda #3			; default rows to write.
0017B6  3  85 rr        	sta z80_b
0017B8  3  A5 rr        	lda dispy		; y position.
0017BA  3  29 07        	and #7			; does x straddle cells?
0017BC  3  D0 02        	bne cangh0		; yes, loop counter is good.
0017BE  3  C6 rr        	dec z80_b		; one less row to write.
0017C0  3               cangh0:
0017C0  3  20 D9 18     	jsr tstbl		; get map address.
0017C3  3               cangh1:
0017C3  3  20 DB 17     	jsr lrchk		; standard left/right check.
0017C6  3  F0 01        	beq :+
0017C8  3  60           	rts			; no way through.
0017C9  3               :
0017C9  3  48           	pha
0017CA  3  18           	clc
0017CB  3  A5 rr        	lda bufaddr
0017CD  3  69 20        	adc #32			; look down.
0017CF  3  85 rr        	sta bufaddr
0017D1  3  90 02        	bcc :+
0017D3  3  E6 rr        	inc bufaddr+1
0017D5  3               :
0017D5  3  68           	pla
0017D6  3               
0017D6  3  C6 rr        	dec z80_b
0017D8  3  D0 E9        	bne cangh1
0017DA  3  60           	rts
0017DB  3               
0017DB  3               ;-------------------------------------
0017DB  3               ; Check left/right movement is okay.
0017DB  3               ;
0017DB  3               ; Input:
0017DB  3               ;  bufaddr = MAP + x/8 + y/8*32
0017DB  3               ;
0017DB  3               ; Output:
0017DB  3               ;  A  = 0 is ok, A <>0 is not ok
0017DB  3               ;-------------------------------------
0017DB  3               
0017DB  3               lrchk:
0017DB  3  A0 00        	ldy #0
0017DD  3  B1 rr        	lda (bufaddr),y		; fetch map cell.
0017DF  3  C9 02        	cmp #WALL 		; is it passable?
0017E1  3  F0 0A        	beq lrchkx		; no.
0017E3  3               
0017E3  3  C9 04        	cmp #FODDER		; fodder has to be dug.
0017E5  3  F0 06        	beq lrchkx		; not passable.
0017E7  3  A9 00        	lda #0
0017E9  3  60           	rts
0017EA  3               
0017EA  3               ;--------------------------------------------------------------
0017EA  3               ; Called by mmenu
0017EA  3               ;--------------------------------------------------------------
0017EA  3               
0017EA  3               always:
0017EA  3  A9 FF        	lda #255		; report it as okay.
0017EC  3  60           	rts
0017ED  3               
0017ED  3               lrchkx:
0017ED  3  A9 01        	lda #1 			; reset all bits.
0017EF  3  60           	rts
0017F0  3               
0017F0  3               
0017F0  3               ;--------------------------------------------------------------
0017F0  3               ; Check platform or solid item is not in way.
0017F0  3               ;
0017F0  3               ; Input:
0017F0  3               ;  bufaddr = MAP + x/8 + y/8*32
0017F0  3               ;
0017F0  3               ; Output:
0017F0  3               ;  A  = 0 is ok, A <>0 is not ok
0017F0  3               ;--------------------------------------------------------------
0017F0  3               
0017F0  3               plchk:
0017F0  3  A0 00        	ldy #0
0017F2  3  B1 rr        	lda (bufaddr),y 	; fetch map cell.
0017F4  3  C9 02        	cmp #WALL 		; is it passable?
0017F6  3  F0 F5        	beq lrchkx		; no.
0017F8  3               
0017F8  3  C9 04        	cmp #FODDER		; fodder has to be dug.
0017FA  3  F0 F1        	beq lrchkx		; not passable.
0017FC  3               
0017FC  3  C9 01        	cmp #PLATFM		; platform is solid.
0017FE  3  F0 07        	beq plchkx		; not passable.
001800  3               
001800  3  C9 03        	cmp #LADDER		; is it a ladder?
001802  3  F0 E9        	beq lrchkx		; on ladder, deny movement.
001804  3               plchk0:
001804  3  A9 00        	lda #0			; report as ok
001806  3  60           	rts
001807  3               plchkx:
001807  3  A5 rr        	lda dispy		; x coordinate.
001809  3  29 07        	and #7			; position straddling blocks.
00180B  3  F0 E0        	beq lrchkx		; on platform, deny movement.
00180D  3  4C 04 18     	jmp plchk0
001810  3               
001810  3               ;--------------------------------------------------------------
001810  3               ; Check ladder is available.
001810  3               ;
001810  3               ; Input:
001810  3               ;  bufaddr = MAP + x/8 + y/8*32
001810  3               ;
001810  3               ; Output:
001810  3               ;  A  = 0 is ok, A <>0 is not ok
001810  3               ;--------------------------------------------------------------
001810  3               
001810  3               ldchk:
001810  3  A0 00        	ldy #0
001812  3  B1 rr        	lda (bufaddr),y 	; fetch cell.
001814  3  C9 03        	cmp #LADDER 		; is it a ladder?
001816  3  F0 03        	beq ldchk1
001818  3  A9 01        	lda #1
00181A  3  60           	rts  			; return with zero flag set accordingly.
00181B  3               ldchk1:
00181B  3  A9 00        	lda #0
00181D  3  60           	rts
00181E  3               
00181E  3               ;--------------------------------------------------------------
00181E  3               ; Touched deadly block check.
00181E  3               ; returns with DEADLY (must be non-zero) in accumulator if true.
00181E  3               ;
00181E  3               ; Input:
00181E  3               ;  IX = sprite address
00181E  3               ;
00181E  3               ; Output:
00181E  3               ;  A  = 0 is ok, A=5 is not ok
00181E  3               ;--------------------------------------------------------------
00181E  3               
00181E  3               tded:
00181E  3  A0 08        	ldy #8
001820  3  B1 rr        	lda (z80_ix),y 		; y coordinate.
001822  3  85 rr        	sta dispy
001824  3  C8           	iny
001825  3  B1 rr        	lda (z80_ix),y 		; x coordinate.
001827  3  85 rr        	sta dispx		; coords in dispx,dispy.
001829  3  20 D9 18     	jsr tstbl		; get map address.
00182C  3  48           	pha
00182D  3  A9 1F        	lda #31			; default distance to next line down.
00182F  3  85 rr        	sta z80_e
001831  3  68           	pla
001832  3  C5 rr        	cmp z80_b		; is this the required block?
001834  3  D0 01        	bne :+
001836  3  60           	rts			; yes.
001837  3               :
001837  3  E6 rr        	inc bufaddr 		; next cell.
001839  3  D0 02        	bne :+
00183B  3  E6 rr        	inc bufaddr+1
00183D  3               :
00183D  3  A0 00        	ldy #0
00183F  3  B1 rr        	lda (bufaddr),y		; fetch type.
001841  3  C5 rr        	cmp z80_b 		; is this deadly/custom?
001843  3  D0 01        	bne :+
001845  3  60           	rts			; yes.
001846  3               :
001846  3  A5 rr        	lda dispx		; horizontal position.
001848  3  85 rr        	sta z80_c 		; store column in c register.
00184A  3  29 07        	and #7			; is it straddling cells?
00184C  3  D0 03        	bne :+
00184E  3  4C 62 18     	jmp tded0		; no.
001851  3               :
001851  3  E6 rr        	inc bufaddr 		; last cell.
001853  3  D0 02        	bne :+
001855  3  E6 rr        	inc bufaddr+1
001857  3               :
001857  3  A0 00        	ldy #0
001859  3  B1 rr        	lda (bufaddr),y 	; fetch type.
00185B  3  C5 rr        	cmp z80_b		; is this the block?
00185D  3  D0 01        	bne :+
00185F  3  60           	rts			; yes.
001860  3               :
001860  3  C6 rr        	dec z80_e		; one less cell to next row down.
001862  3               tded0:
001862  3  18           	clc 			; point to next row.
001863  3  A5 rr        	lda bufaddr
001865  3  65 rr        	adc z80_e
001867  3  85 rr        	sta bufaddr
001869  3  90 02        	bcc :+
00186B  3  E6 rr        	inc bufaddr+1
00186D  3               :
00186D  3  A0 00        	ldy #0
00186F  3  B1 rr        	lda (bufaddr),y		; fetch left cell block.
001871  3  C5 rr        	cmp z80_b		; is this fatal?
001873  3  D0 01        	bne :+
001875  3  60           	rts			; yes.
001876  3               :
001876  3  E6 rr        	inc bufaddr 		; next cell.
001878  3  D0 02        	bne :+
00187A  3  E6 rr        	inc bufaddr+1
00187C  3               :
00187C  3  A0 00        	ldy #0
00187E  3  B1 rr        	lda (bufaddr),y 	; fetch type.
001880  3  C5 rr        	cmp z80_b		; is this fatal?
001882  3  D0 01        	bne :+
001884  3  60           	rts			; yes.
001885  3               :
001885  3  A5 rr        	lda z80_c		; horizontal position.
001887  3  29 07        	and #7			; is it straddling cells?
001889  3  D0 03        	bne :+
00188B  3  4C 9D 18     	jmp tded1 		; no.
00188E  3               :
00188E  3  E6 rr        	inc bufaddr		; last cell.
001890  3  D0 02        	bne :+
001892  3  E6 rr        	inc bufaddr+1
001894  3               :
001894  3  A0 00        	ldy #0
001896  3  B1 rr        	lda (bufaddr),y		; fetch type.
001898  3  C5 rr        	cmp z80_b		; is this fatal?
00189A  3  D0 01        	bne :+
00189C  3  60           	rts			; yes.
00189D  3               :
00189D  3               tded1:
00189D  3  A5 rr        	lda dispy		; vertical position.
00189F  3  29 07        	and #7 			; is it straddling cells?
0018A1  3  D0 01        	bne :+
0018A3  3  60           	rts			; no, job done.
0018A4  3               :
0018A4  3  18           	clc			; point to next row.
0018A5  3  A5 rr        	lda bufaddr
0018A7  3  65 rr        	adc z80_e
0018A9  3  85 rr        	sta bufaddr
0018AB  3  90 02        	bcc :+
0018AD  3  E6 rr        	inc bufaddr+1
0018AF  3               :
0018AF  3  A0 00        	ldy #0
0018B1  3  B1 rr        	lda (bufaddr),y 	; fetch left cell block.
0018B3  3  C5 rr        	cmp z80_b		; is this fatal?
0018B5  3  D0 01        	bne :+
0018B7  3  60           	rts			; yes.
0018B8  3               :
0018B8  3  E6 rr        	inc bufaddr		; next cell.
0018BA  3  D0 02        	bne :+
0018BC  3  E6 rr        	inc bufaddr+1
0018BE  3               :
0018BE  3  A0 00        	ldy #0
0018C0  3  B1 rr        	lda (bufaddr),y 	; fetch type.
0018C2  3  C5 rr        	cmp z80_b		; is this fatal?
0018C4  3  D0 01        	bne :+
0018C6  3  60           	rts			; yes.
0018C7  3               :
0018C7  3  A5 rr        	lda z80_c		; horizontal position.
0018C9  3  29 07        	and #7			; is it straddling cells?
0018CB  3  D0 01        	bne :+
0018CD  3  60           	rts			; no.
0018CE  3               :
0018CE  3  E6 rr        	inc bufaddr		; last cell.
0018D0  3  D0 02        	bne :+
0018D2  3  E6 rr        	inc bufaddr+1
0018D4  3               :
0018D4  3  A0 00        	ldy #0
0018D6  3  B1 rr        	lda (bufaddr),y		; fetch final type.
0018D8  3  60           	rts 			; return with final type in accumulator.
0018D9  3               
0018D9  3               ;---------------------------------------------------
0018D9  3               ; Fetch block type at (dispx, dispy).
0018D9  3               ;
0018D9  3               ; Output:
0018D9  3               ;  A = block type
0018D9  3               ;---------------------------------------------------
0018D9  3               
0018D9  3               tstbl:
0018D9  3  A5 rr        	lda dispy 		; fetch y coord.
0018DB  3  4A           	lsr a			; bufaddr = y/8
0018DC  3  4A           	lsr a
0018DD  3  4A           	lsr a
0018DE  3  85 rr        	sta bufaddr
0018E0  3  A9 00        	lda #0
0018E2  3  85 rr        	sta bufaddr+1
0018E4  3               
0018E4  3  06 rr        	asl bufaddr  		; bufaddr = y/8 * 32
0018E6  3  26 rr        	rol bufaddr+1
0018E8  3  06 rr        	asl bufaddr
0018EA  3  26 rr        	rol bufaddr+1
0018EC  3  06 rr        	asl bufaddr
0018EE  3  26 rr        	rol bufaddr+1
0018F0  3  06 rr        	asl bufaddr
0018F2  3  26 rr        	rol bufaddr+1
0018F4  3  06 rr        	asl bufaddr
0018F6  3  26 rr        	rol bufaddr+1
0018F8  3               
0018F8  3  A5 rr        	lda dispx		; x/8
0018FA  3  4A           	lsr a
0018FB  3  4A           	lsr a
0018FC  3  4A           	lsr a
0018FD  3               
0018FD  3  18           	clc			; bufaddr = MAP + x/8 + y/8*32
0018FE  3  65 rr        	adc bufaddr
001900  3  69 00        	adc #<MAP
001902  3  85 rr        	sta bufaddr
001904  3  A5 rr        	lda bufaddr+1
001906  3  69 03        	adc #>MAP
001908  3  85 rr        	sta bufaddr+1
00190A  3               
00190A  3  A0 00        	ldy #0
00190C  3  B1 rr        	lda (bufaddr),y 	; fetch byte there.
00190E  3  60           	rts
00190F  3               
00190F  3               
00190F  3               ;-------------------------------------------------------------------
00190F  3               ; Jump - if we can.
00190F  3               ; Requires initial speed to be set up in accumulator prior to call.
00190F  3               ;
00190F  3               ; Input:
00190F  3               ;  IX = sprite address
00190F  3               ;-------------------------------------------------------------------
00190F  3               
00190F  3               jump:
00190F  3  A0 0D        	ldy #13
001911  3  B1 rr        	lda (z80_ix),y		; jump table low.
001913  3  A0 0E        	ldy #14
001915  3  11 rr        	ora (z80_ix),y		; jump table high.
001917  3  F0 01        	beq :+
001919  3  60           	rts			; already in the air.
00191A  3               :
00191A  3  A9 19        	lda #>jtab
00191C  3  A0 0E        	ldy #14
00191E  3  91 rr        	sta (z80_ix),y		; set jump high.
001920  3  A9 27        	lda #<jtab		; jump table start.
001922  3  A0 0D        	ldy #13
001924  3  91 rr        	sta (z80_ix),y		; set jump low.
001926  3  60           	rts
001927  3               
001927  3               ; Jump table.
001927  3               
001927  3               jtab:
001927  3  F8 FA FC     	.byte 248,250,252
00192A  3  FE FE FF     	.byte 254,254,255
00192D  3  FF FF 00 00  	.byte 255,255,0,0
001931  3  00 01 01 01  	.byte 0,1,1,1,2,2
001935  3  02 02        
001937  3  04 06 08 08  	.byte 4,6,8,8,8,99
00193B  3  08 63        
00193D  3               
00193D  3               ;------------------------------------------------
00193D  3               ; Random numbers code.
00193D  3               ; Pseudo-random number generator, 8-bit.
00193D  3               ;
00193D  3               ; Output:
00193D  3               ;  RND = random number
00193D  3               ;------------------------------------------------
00193D  3               
00193D  3               random:
00193D  3  AD 66 13     	lda seed		; get last random number.
001940  3  0A           	asl a
001941  3  0A           	asl a
001942  3  18           	clc
001943  3  6D 66 13     	adc seed
001946  3  18           	clc
001947  3  69 45        	adc #$45
001949  3  8D 66 13     	sta seed		; store new seed.
00194C  3  85 rr        	sta varrnd		; return number in variable.
00194E  3  60           	rts
00194F  3               
00194F  3               ;--------------------------------------------------------
00194F  3               ; Keys
00194F  3               ;
00194F  3               ; Out: joyval=x65FUDLR (bit cleared if key pressed)
00194F  3               ;             ||||||||
00194F  3               ;             |||||||+> Right    KEY 0  - X
00194F  3               ;             ||||||+-> Left     KEY 1  - Z
00194F  3               ;             |||||+--> Down     KEY 2  - .
00194F  3               ;             ||||+---> Up       KEY 3  - ;
00194F  3               ;             |||+----> Fire1    KEY 4  - SPC
00194F  3               ;             ||+-----> Fire2    KEY 5  - Q
00194F  3               ;             |+------> Fire3    KEY 6  - P
00194F  3               ;             +-------> Not used
00194F  3               ;
00194F  3               ;                       Option1  KEY 7  - 1
00194F  3               ;                       Option2  KEY 8  - 2
00194F  3               ;                       Option3  KEY 9  - 3
00194F  3               ;                       Option4  KEY 10 - 4
00194F  3               ;--------------------------------------------------------
00194F  3               
00194F  3               ;              X   Z   .   ;  SPC  Q   P
00194F  3  42 61 68 48  keys:   .byte $42,$61,$68,$48,$62,$10,$37       ; Keys defined by game designer.
001953  3  62 10 37     
001956  3  30 31 11 12          .byte $30,$31,$11,$12                   ; menu options.
00195A  3               ;keys:   .byte $35,$15,$93,$22,$90,$04,$14       ; Keys defined by game designer.
00195A  3               ;        .byte $21,$11,$01,$92                   ; menu options.
00195A  3               
00195A  3  42 61 68 48  jkeys:  .byte $42,$61,$68,$48,$62,$10,$37       ; Keys defined by game designer.
00195E  3  62 10 37     
001961  3  30 31 11 12          .byte $30,$31,$11,$12                   ; menu options.
001965  3               ;jkeys:  .byte $03,$01,$02,$04,$00,$04,$14       ; Joykey keys
001965  3               ;        .byte $21,$11,$01,$92                   ; menu options.
001965  3               
001965  3               ;--------------------------------------------------------
001965  3               ; Keyboard test routine.
001965  3               ;
001965  3               ; Input:
001965  3               ;  A = key to read, high nibble=row and low nibble=col
001965  3               ;
001965  3               ; Output:
001965  3               ;  carry clr = key pressed
001965  3               ;  carry set = key not pressed
001965  3               ;--------------------------------------------------------
001965  3               
001965  3               ktest:
001965  3  85 rr        	sta z80_a		; save key
001967  3  98           	tya
001968  3  48           	pha
001969  3               
001969  3               ; _BEEB keyboard read
001969  3  A5 rr        	lda z80_a
00196B  3  49 80        	eor #$80		; _BEEB just look for this key
00196D  3  AA           	tax
00196E  3               
00196E  3  A9 79        	lda #$79
001970  3  20 F4 FF     	jsr OSBYTE
001973  3               
001973  3  8A           	txa
001974  3  30 04        	bmi pressed 	; _BEEB X is negative if key is pressed
001976  3               
001976  3  38           	sec			; key not pressed
001977  3  68           	pla
001978  3  A8           	tay
001979  3  60           	rts
00197A  3               
00197A  3               pressed:
00197A  3  18           	clc			; key pressed
00197B  3  68           	pla
00197C  3  A8           	tay
00197D  3  60           	rts
00197E  3               
00197E  3  01 02 04 08  keymask:	.byte $01,$02,$04,$08,$10,$20
001982  3  10 20        
001984  3               
001984  3               ;-------------------------------------------------------
001984  3               ; Joystick and keyboard reading routines.
001984  3               ;
001984  3               ; contrl = 0, Keyboard
001984  3               ;          1, JoyKeyb
001984  3               ;          2, JoyMMC
001984  3               ;-------------------------------------------------------
001984  3               
001984  3               joykey:
001984  3  A5 rr        	lda contrl 		; control flag.
001986  3  C9 01        	cmp #1
001988  3  D0 03        	bne :+
00198A  3  4C A8 19     	jmp joyjoy 		; read keyboard joystick
00198D  3               :
00198D  3  C9 02        	cmp #2
00198F  3  D0 03        	bne :+
001991  3  4C BF 19     	jmp joysin 		; read MMC joystick.
001994  3               :
001994  3               ; Keyboard controls.
001994  3               
001994  3  A9 00        	lda #0		 	; zero reading.
001996  3  85 rr        	sta z80_e
001998  3               
001998  3  A0 06        	ldy #6	 		; address of last key.
00199A  3               joyke0:
00199A  3  B9 4F 19     	lda keys,y 		; get key from table.
00199D  3  20 65 19     	jsr ktest		; being pressed?
0019A0  3  26 rr        	rol z80_e 		; rotate into reading.
0019A2  3               
0019A2  3  88           	dey		 	; next key.
0019A3  3  10 F5        	bpl joyke0 		; repeat for all keys.
0019A5  3  4C B9 19     	jmp joyjo1 		; store the value.
0019A8  3               
0019A8  3               ; Keyboard joystick controls.
0019A8  3               
0019A8  3               joyjoy:
0019A8  3  A9 00        	lda #0		 	; zero reading.
0019AA  3  85 rr        	sta z80_e
0019AC  3               
0019AC  3  A0 06        	ldy #6	 		; address of last key.
0019AE  3               joyjo3:
0019AE  3  B9 5A 19     	lda jkeys,y 		; get key from table.
0019B1  3  20 65 19     	jsr ktest		; being pressed?
0019B4  3  26 rr        	rol z80_e 		; rotate into reading.
0019B6  3               
0019B6  3  88           	dey		 	; next key.
0019B7  3  10 F5        	bpl joyjo3 		; repeat for all keys.
0019B9  3               joyjo1:
0019B9  3  A5 rr        	lda z80_e 		; copy e register to accumulator.
0019BB  3               joyjo2:
0019BB  3  85 rr        	sta joyval		; remember value.
0019BD  3  60           	rts
0019BE  3               
0019BE  3               
0019BE  3               ; AtoMMC joystick controls.
0019BE  3               ; _BEEB TODO
0019BE  3               ; Set PORTB direction
0019BE  3               
0019BE  3               joyinit:
0019BE  3               .if 0
0019BE  3               	lda #$ff   		; Write value to latch, bits 0-7 input
0019BE  3               	sta DatReg
0019BE  3               	jsr interwritedelay
0019BE  3               	lda #$a1   		; Write direction in latch to PORTB
0019BE  3               	sta CmdReg
0019BE  3               
0019BE  3               wait_until_not_busy:
0019BE  3               	lda CmdReg
0019BE  3               	bmi wait_until_not_busy
0019BE  3               .endif
0019BE  3  60           	rts
0019BF  3               
0019BF  3               ; Get PORTB value
0019BF  3               
0019BF  3               joysin:
0019BF  3               .if 0
0019BF  3               	lda #$a2   		; Read value PORTB in latch
0019BF  3               	sta CmdReg
0019BF  3               	jsr interwritedelay
0019BF  3               
0019BF  3               	lda DatReg		; Read joystick status
0019BF  3               	and #$7f
0019BF  3               	sta joyval
0019BF  3               	sta $f0
0019BF  3               
0019BF  3               	lda keys+5		; check fire2
0019BF  3               	jsr ktest
0019BF  3               	bcs :+
0019BF  3               	lda joyval
0019BF  3               	and #$df
0019BF  3               	sta joyval
0019BF  3               :
0019BF  3               	lda keys+6		; check fire3
0019BF  3               	jsr ktest
0019BF  3               	bcs :+
0019BF  3               	lda joyval
0019BF  3               	and #$bf
0019BF  3               	sta joyval
0019BF  3               :
0019BF  3               	rts
0019BF  3               
0019BF  3               ; Short delay
0019BF  3               ; Enough to intersperse 2 writes to the FATPIC.
0019BF  3               
0019BF  3               interwritedelay:
0019BF  3               	lda  #8
0019BF  3               	sec
0019BF  3               loop:
0019BF  3               	sbc  #1
0019BF  3               	bne  loop
0019BF  3               .endif
0019BF  3  60           	rts
0019C0  3               
0019C0  3               ;tmp_byte:   .byte 0
0019C0  3               
0019C0  3               ;---------------------------------------------------------------
0019C0  3               ; Getkey in column,row format
0019C0  3               ;
0019C0  3               ; Output:
0019C0  3               ;  A = high nibble=row and low nibble=column key in matrix
0019C0  3               ;---------------------------------------------------------------
0019C0  3               
0019C0  3               kget:
0019C0  3  8E 3E 16     	stx xtmp
0019C3  3               
0019C3  3               kget1:
0019C3  3  A9 79        	lda #$79			; _BEEB read keyboard with OSBYTE &79
0019C5  3  A2 01        	ldx #$01
0019C7  3  20 F4 FF     	jsr OSBYTE
0019CA  3               
0019CA  3  E0 FF        	cpx #$ff
0019CC  3  F0 F5        	beq kget1
0019CE  3               
0019CE  3  8A           	txa
0019CF  3               
0019CF  3  AE 3E 16     	ldx xtmp
0019D2  3  60           	rts
0019D3  3               
0019D3  3               ;---------------------------------------------------------------
0019D3  3               ; Display message.
0019D3  3               ;
0019D3  3               ; Input:
0019D3  3               ;  A = message number
0019D3  3               ;---------------------------------------------------------------
0019D3  3               
0019D3  3               dmsg:
0019D3  3  AA           	tax
0019D4  3  A9 F2        	lda #<msgdat		; pointer to messages.
0019D6  3  85 rr        	sta z80_l
0019D8  3  A9 4D        	lda #>msgdat
0019DA  3  85 rr        	sta z80_h
0019DC  3  20 F5 1A     	jsr getwrd		; get message number.
0019DF  3               dmsg3:
0019DF  3  20 E2 1A     	jsr preprt		; pre-printing stuff.
0019E2  3  20 7B 13     	jsr checkx		; make sure we"re in a printable range.
0019E5  3  AD 31 1A     	lda prtmod		; print mode.
0019E8  3  D0 48        	bne bmsg1		; no, double-height text.
0019EA  3               dmsg0:
0019EA  3  A5 rr        	lda z80_h		; store string pointer.
0019EC  3  48           	pha
0019ED  3  A5 rr        	lda z80_l
0019EF  3  48           	pha
0019F0  3               
0019F0  3  A0 00        	ldy #0
0019F2  3  B1 rr        	lda (z80_hl),y		; fetch byte to display.
0019F4  3  29 7F        	and #127		; remove any end marker.
0019F6  3  C9 0D        	cmp #13
0019F8  3  F0 24        	beq dmsg1
0019FA  3  20 14 15     	jsr pchar		; display character.
0019FD  3  20 CD 1A     	jsr nexpos 		; display position.
001A00  3  D0 03        	bne dmsg2		; not on a new line.
001A02  3  20 D4 1A     	jsr nexlin		; next line down.
001A05  3               dmsg2:
001A05  3  68           	pla			; retrieve string pointer
001A06  3  85 rr        	sta z80_l
001A08  3  68           	pla
001A09  3  85 rr        	sta z80_h
001A0B  3               
001A0B  3  A0 00        	ldy #0
001A0D  3  B1 rr        	lda (z80_hl),y		; fetch last character.
001A0F  3  0A           	asl a  			; was it the end?
001A10  3  90 03        	bcc :+
001A12  3  4C C1 13     	jmp dscor2		; yes, job done.
001A15  3               :
001A15  3  E6 rr        	inc z80_l		; next character to display.
001A17  3  D0 02        	bne :+
001A19  3  E6 rr        	inc z80_h
001A1B  3               :
001A1B  3  4C EA 19     	jmp dmsg0
001A1E  3               dmsg1:
001A1E  3  E6 rr        	inc dispy
001A20  3  A5 rr        	lda dispy
001A22  3  C9 18        	cmp #24
001A24  3  90 04        	bcc dmsg4
001A26  3  A9 00        	lda #0
001A28  3  85 rr        	sta dispy
001A2A  3               dmsg4:
001A2A  3  A9 00        	lda #0
001A2C  3  85 rr        	sta dispx
001A2E  3  4C 05 1A     	jmp dmsg2
001A31  3               
001A31  3  00           prtmod:	.byte 0            	; print mode, 0 = standard, 1 = double-height.
001A32  3               
001A32  3               ;----------------------------------------------------------
001A32  3               ; Display message in big text.
001A32  3               ;
001A32  3               ; Input:
001A32  3               ;  HL = string pointer
001A32  3               ;----------------------------------------------------------
001A32  3               
001A32  3               bmsg1:
001A32  3  A0 00        	ldy #0
001A34  3  B1 rr        	lda (z80_hl),y 		; get character to display.
001A36  3  29 7F        	and #127		; only want 7 bits.
001A38  3  C9 0D        	cmp #13
001A3A  3  F0 13        	beq bmsg2
001A3C  3  20 64 1A     	jsr bchar 		; display big char.
001A3F  3               bmsg3:
001A3F  3  A0 00        	ldy #0
001A41  3  B1 rr        	lda (z80_hl),y 		; look at last character.
001A43  3  48           	pha
001A44  3  E6 rr        	inc z80_l 		; next character in list.
001A46  3  D0 02        	bne :+
001A48  3  E6 rr        	inc z80_h
001A4A  3               :
001A4A  3  68           	pla
001A4B  3  0A           	asl a  			; was terminator flag set?
001A4C  3  90 E4        	bcc bmsg1		; no, keep going.
001A4E  3               :
001A4E  3  60           	rts
001A4F  3               bmsg2:
001A4F  3  A9 00        	lda #0
001A51  3  85 rr        	sta dispx
001A53  3  E6 rr        	inc dispy
001A55  3  E6 rr        	inc dispy
001A57  3  A5 rr        	lda dispy
001A59  3  C9 17        	cmp #23
001A5B  3  90 E2        	bcc bmsg3
001A5D  3  A9 00        	lda #0
001A5F  3  85 rr        	sta dispy
001A61  3  4C 3F 1A     	jmp bmsg3
001A64  3               
001A64  3               ;----------------------------------------------------------
001A64  3               ; Big character display.
001A64  3               ;
001A64  3               ; Input:
001A64  3               ;  A = character
001A64  3               ;----------------------------------------------------------
001A64  3               
001A64  3               bchar:
001A64  3  85 rr        	sta z80_e		; save char in lb
001A66  3  A9 00        	lda #0
001A68  3  85 rr        	sta z80_d		; reset hb
001A6A  3               
001A6A  3  06 rr        	asl z80_e 		; multiply char by 8.
001A6C  3  26 rr        	rol z80_d
001A6E  3  06 rr        	asl z80_e
001A70  3  26 rr        	rol z80_d
001A72  3  06 rr        	asl z80_e
001A74  3  26 rr        	rol z80_d		; de = a*8
001A76  3               
001A76  3  18           	clc			; de = FontPtr + a*8
001A77  3  A5 rr        	lda z80_e
001A79  3  65 rr        	adc FontPtr 		; address of font.
001A7B  3  85 rr        	sta z80_e
001A7D  3  A5 rr        	lda z80_d
001A7F  3  65 rr        	adc FontPtr+1
001A81  3  85 rr        	sta z80_d
001A83  3               
001A83  3  20 BA 14     	jsr gprad 		; get screen address.
001A86  3               
001A86  3  A2 00        	ldx #0			; height of character in font.
001A88  3               bchar0:
001A88  3  A0 00        	ldy #0
001A8A  3  B1 rr        	lda (z80_de),y 		; get a bit of the font.
001A8C  3               
001A8C  3  49 00        	eor #TxtInvert		; Invert
001A8E  3               
001A8E  3  91 rr        	sta (scraddr),y
001A90  3  48           	pha
001A91  3  20 E6 1D     	jsr nline 		; next line down.
001A94  3  68           	pla
001A95  3  91 rr        	sta (scraddr),y
001A97  3  20 E6 1D     	jsr nline 		; next line down.
001A9A  3               
001A9A  3  18           	clc
001A9B  3  E6 rr        	inc z80_e 		; next line of font.
001A9D  3  D0 02        	bne :+
001A9F  3  E6 rr        	inc z80_d
001AA1  3               :
001AA1  3  E8           	inx
001AA2  3  E0 08        	cpx #8
001AA4  3  D0 E2        	bne bchar0
001AA6  3               	
001AA6  3  20 CD 1A     	jsr nexpos		; display position.
001AA9  3  D0 05        	bne bchar2 		; not on a new line.
001AAB  3               bchar3:
001AAB  3  E6 rr        	inc dispy
001AAD  3  20 D4 1A     	jsr nexlin 		; next line check.
001AB0  3               bchar2:
001AB0  3  4C C1 13     	jmp dscor2		; tidy up line and column variables.
001AB3  3               
001AB3  3               
001AB3  3               ;-------------------------------------------------
001AB3  3               ; Display a character.
001AB3  3               ;
001AB3  3               ; Input:
001AB3  3               ;  A = character
001AB3  3               ;-------------------------------------------------
001AB3  3               
001AB3  3               achar:
001AB3  3  85 rr        	sta z80_b 		; copy to b.
001AB5  3  20 E2 1A     	jsr preprt 		; get ready to print.
001AB8  3  A5 rr        	lda z80_b		; character in accumulator.
001ABA  3  AE 31 1A     	ldx prtmod 		; print mode.
001ABD  3  F0 03        	beq :+
001ABF  3  4C 64 1A     	jmp bchar 		; no, double-height text.
001AC2  3               :
001AC2  3  20 14 15     	jsr pchar 		; display character.
001AC5  3  20 CD 1A     	jsr nexpos 		; display position.
001AC8  3  F0 E1        	beq bchar3		; next line down.
001ACA  3  4C B0 1A     	jmp bchar2 		; tidy up.
001ACD  3               
001ACD  3               
001ACD  3               ;-------------------------------------------------
001ACD  3               ; Get next print column position.
001ACD  3               ;-------------------------------------------------
001ACD  3               
001ACD  3               nexpos:
001ACD  3  E6 rr        	inc dispx		; move along one position.
001ACF  3  A5 rr        	lda dispx 		; get coordinate.
001AD1  3  29 1F        	and #31
001AD3  3  60           	rts 			; return with status in zero flag.
001AD4  3               
001AD4  3               ;-------------------------------------------------
001AD4  3               ; Get next print line position.
001AD4  3               ;-------------------------------------------------
001AD4  3               
001AD4  3               nexlin:
001AD4  3  E6 rr        	inc dispy 		; newline.
001AD6  3  A5 rr        	lda dispy		; vertical position.
001AD8  3  C9 18        	cmp #24			; past screen edge?
001ADA  3  B0 01        	bcs :+
001ADC  3  60           	rts			; no, still okay.
001ADD  3               :
001ADD  3  A9 00        	lda #0			; restart at top.
001ADF  3  85 rr        	sta dispy
001AE1  3  60           	rts
001AE2  3               
001AE2  3               ;--------------------------------------------------------
001AE2  3               ; Pre-print preliminaries.
001AE2  3               ;--------------------------------------------------------
001AE2  3               
001AE2  3               preprt:
001AE2  3  A5 rr        	lda FontPtr		; font pointer.
001AE4  3  8D 79 13     	sta grbase		; set up graphics base.
001AE7  3  A5 rr        	lda FontPtr+1
001AE9  3  8D 7A 13     	sta grbase+1
001AEC  3               prescr:
001AEC  3  A5 rr        	lda charx 		; display coordinates.
001AEE  3  85 rr        	sta dispx		; set up general coordinates.
001AF0  3  A5 rr        	lda chary
001AF2  3  85 rr        	sta dispy
001AF4  3  60           	rts
001AF5  3               
001AF5  3               ;--------------------------------------------------------------
001AF5  3               ; Get messagenr x in hl
001AF5  3               ;
001AF5  3               ; Input:
001AF5  3               ;  HL = pointer to message list
001AF5  3               ;  X  = message number.
001AF5  3               ;--------------------------------------------------------------
001AF5  3               
001AF5  3               getwrd:
001AF5  3  E0 00        	cpx #0
001AF7  3  D0 01        	bne:+ 			; first word in list?
001AF9  3  60           	rts 			; yep, don't search.
001AFA  3               :
001AFA  3  A0 00        	ldy #0
001AFC  3               getwd0:
001AFC  3  B1 rr        	lda (z80_hl),y
001AFE  3  48           	pha
001AFF  3  E6 rr        	inc z80_l
001B01  3  D0 02        	bne :+
001B03  3  E6 rr        	inc z80_h
001B05  3               :
001B05  3  68           	pla
001B06  3  C9 80        	cmp #128		; found end?
001B08  3  30 F2        	bmi getwd0		; no, carry on.
001B0A  3  CA           	dex			; until we have right number.
001B0B  3  D0 EF        	bne getwd0
001B0D  3  60           	rts
001B0E  3               
001B0E  3               ;-----------------------------------------------------------
001B0E  3               ; Bubble sort.
001B0E  3               ;-----------------------------------------------------------
001B0E  3               
001B0E  3               bsort:
001B0E  3  A9 0B        	lda #NUMSPR - 1		; sprites to swap.
001B10  3  8D 46 1B     	sta qscnt
001B13  3               
001B13  3  A9 42        	lda #<sprtab 		; sprite table.
001B15  3  85 rr        	sta z80_x
001B17  3  A9 22        	lda #>sprtab
001B19  3  85 rr        	sta z80_i
001B1B  3               bsort0:
001B1B  3  A0 00        	ldy #0
001B1D  3  B1 rr        	lda (z80_ix),y 		; first sprite type.
001B1F  3  C9 FF        	cmp #255 		; is it switched off?
001B21  3  F0 32        	beq swemp		; yes, may need to switch another in here.
001B23  3               
001B23  3  A0 11        	ldy #TABSIZ
001B25  3  B1 rr        	lda (z80_ix),y 		; check next slot exists.
001B27  3  C9 FF        	cmp #255 		; is it enabled?
001B29  3  F0 0A        	beq bsort2 		; no, nothing to swap.
001B2B  3               
001B2B  3  A0 14        	ldy #TABSIZ+3
001B2D  3  B1 rr        	lda (z80_ix),y 		; fetch next sprite's coordinate.
001B2F  3  A0 03        	ldy #3
001B31  3  D1 rr        	cmp (z80_ix),y 		; compare with this x coordinate.
001B33  3  90 12        	bcc bsort1		; next sprite is higher - may need to switch.
001B35  3               bsort2:
001B35  3  18           	clc
001B36  3  A5 rr        	lda z80_x
001B38  3  69 11        	adc #TABSIZ 		; distance to next odd/even entry.
001B3A  3  85 rr        	sta z80_x
001B3C  3  90 02        	bcc :+
001B3E  3  E6 rr        	inc z80_i
001B40  3               :
001B40  3  CE 46 1B     	dec qscnt 
001B43  3  D0 D6        	bne bsort0		; repeat for remaining sprites.
001B45  3  60           	rts
001B46  3               
001B46  3  00           qscnt:	.byte 0
001B47  3               
001B47  3               bsort1:
001B47  3  A0 11        	ldy #TABSIZ
001B49  3  B1 rr        	lda (z80_ix),y		; sprite on/off flag.
001B4B  3  C9 FF        	cmp #255		; is it enabled?
001B4D  3  F0 E6        	beq bsort2		; no, nothing to swap.
001B4F  3  20 63 1B     	jsr swspr		; swap positions.
001B52  3  4C 35 1B     	jmp bsort2
001B55  3               swemp:
001B55  3  A0 11        	ldy #TABSIZ
001B57  3  B1 rr        	lda (z80_ix),y		; next table entry.
001B59  3  C9 FF        	cmp #255		; is that one on?
001B5B  3  F0 D8        	beq bsort2		; no, nothing to swap.
001B5D  3  20 63 1B     	jsr swspr		; swap positions.
001B60  3  4C 35 1B     	jmp bsort2
001B63  3               
001B63  3               ; Swap sprites.
001B63  3               
001B63  3               swspr:
001B63  3  A5 rr        	lda z80_x		; table address 
001B65  3  85 rr        	sta z80_e		; copy to de pair.
001B67  3  85 rr        	sta z80_l		; copy to hl pair.
001B69  3  A5 rr        	lda z80_i
001B6B  3  85 rr        	sta z80_h
001B6D  3  85 rr        	sta z80_d
001B6F  3               
001B6F  3  18           	clc
001B70  3  A5 rr        	lda z80_l
001B72  3  69 11        	adc #TABSIZ		; distance to second entry.
001B74  3  85 rr        	sta z80_l
001B76  3  90 02        	bcc :+
001B78  3  E6 rr        	inc z80_h
001B7A  3               :
001B7A  3  A9 11        	lda #TABSIZ		; bytes to swap.
001B7C  3  85 rr        	sta z80_b
001B7E  3  A0 00        	ldy #0
001B80  3               swspr0:
001B80  3  B1 rr        	lda (z80_hl),y		; fetch second byte.
001B82  3  48           	pha
001B83  3  B1 rr        	lda (z80_de),y 		; fetch first byte.
001B85  3  91 rr        	sta (z80_hl),y 		; copy to second.
001B87  3  68           	pla
001B88  3  91 rr        	sta (z80_de),y 		; copy to first sprite entry.
001B8A  3               
001B8A  3  E6 rr        	inc z80_e 		; next byte.
001B8C  3  D0 02        	bne :+	
001B8E  3  E6 rr        	inc z80_d
001B90  3               :
001B90  3  E6 rr        	inc z80_l 		; next byte.
001B92  3  D0 02        	bne :+
001B94  3  E6 rr        	inc z80_h
001B96  3               :
001B96  3  C6 rr        	dec z80_b
001B98  3  D0 E6        	bne swspr0 		; swap all bytes in table entry.
001B9A  3  60           	rts
001B9B  3               
001B9B  3               ;----------------------------------------------------
001B9B  3               ; Process sprites.
001B9B  3               ;----------------------------------------------------
001B9B  3               
001B9B  3               pspr:
001B9B  3  A9 0C        	lda #NUMSPR		; sprites to process.
001B9D  3  8D C4 1B     	sta sprptr
001BA0  3               
001BA0  3  A9 42        	lda #<sprtab 		; sprite table.
001BA2  3  85 rr        	sta z80_x
001BA4  3  A9 22        	lda #>sprtab
001BA6  3  85 rr        	sta z80_i
001BA8  3               pspr1:
001BA8  3  A0 00        	ldy #0
001BAA  3  B1 rr        	lda (z80_ix),y		; fetch sprite type.
001BAC  3  C9 09        	cmp #9 			; within range of sprite types?
001BAE  3  B0 03        	bcs :+
001BB0  3  20 C5 1B     	jsr pspr2 		; yes, process this one.
001BB3  3               :
001BB3  3  18           	clc
001BB4  3  A5 rr        	lda z80_x
001BB6  3  69 11        	adc #TABSIZ 		; distance to next odd/even entry.
001BB8  3  85 rr        	sta z80_x
001BBA  3  90 02        	bcc :+
001BBC  3  E6 rr        	inc z80_i		; next sprite.
001BBE  3               :
001BBE  3  CE C4 1B     	dec sprptr 		; repeat for remaining sprites.
001BC1  3  D0 E5        	bne pspr1
001BC3  3  60           	rts
001BC4  3               
001BC4  3  00           sprptr:	.byte 0
001BC5  3               
001BC5  3               pspr2:
001BC5  3  A5 rr        	lda z80_x 		; store original sprite pointer.
001BC7  3  8D 12 1C     	sta ogptr
001BCA  3  A5 rr        	lda z80_i
001BCC  3  8D 13 1C     	sta ogptr+1
001BCF  3  20 DD 1B     	jsr pspr3		; do the routine.
001BD2  3               rtorg:
001BD2  3  AD 12 1C     	lda ogptr 		; restore original pointer to sprite.
001BD5  3  85 rr        	sta z80_x
001BD7  3  AD 13 1C     	lda ogptr+1
001BDA  3  85 rr        	sta z80_i
001BDC  3               rtorg0:
001BDC  3  60           	rts
001BDD  3               
001BDD  3               pspr3:
001BDD  3  A9 14        	lda #<evtyp0		; sprite type events list.
001BDF  3  85 rr        	sta z80_l
001BE1  3  A9 1C        	lda #>evtyp0
001BE3  3  85 rr        	sta z80_h
001BE5  3               pspr4:
001BE5  3  B1 rr        	lda (z80_ix),y
001BE7  3  0A           	asl a			; double accumulator.
001BE8  3  18           	clc
001BE9  3  65 rr        	adc z80_l
001BEB  3  85 rr        	sta z80_l
001BED  3  90 02        	bcc :+
001BEF  3  E6 rr        	inc z80_h
001BF1  3               :
001BF1  3  B1 rr        	lda (z80_hl),y
001BF3  3  85 rr        	sta z80_e 		; copy to de.
001BF5  3  48           	pha
001BF6  3               
001BF6  3  E6 rr        	inc z80_l 		; next byte of address.
001BF8  3  D0 02        	bne :+
001BFA  3  E6 rr        	inc z80_h
001BFC  3               :
001BFC  3  B1 rr        	lda (z80_hl),y 		; address high.
001BFE  3  85 rr        	sta z80_d
001C00  3               
001C00  3  48           	pha	 		; swap address into hl.
001C01  3  A5 rr        	lda z80_h
001C03  3  85 rr        	sta z80_d
001C05  3  68           	pla
001C06  3  85 rr        	sta z80_h
001C08  3  68           	pla
001C09  3  85 rr        	sta z80_l
001C0B  3  A5 rr        	lda z80_l
001C0D  3  85 rr        	sta z80_e
001C0F  3               	
001C0F  3  6C rr rr     	jmp (z80_hl) 		; go there.
001C12  3               
001C12  3  00 00        ogptr:	.word 0			; original sprite pointer.
001C14  3               
001C14  3               ; Address of each sprite type's routine.
001C14  3               
001C14  3  43 23        evtyp0:	.word evnt00
001C16  3  F2 2D        evtyp1:	.word evnt01
001C18  3  FE 36        evtyp2:	.word evnt02
001C1A  3  AD 38        evtyp3:	.word evnt03
001C1C  3  32 3C        evtyp4:	.word evnt04
001C1E  3  8D 3D        evtyp5:	.word evnt05
001C20  3  D4 40        evtyp6:	.word evnt06
001C22  3  3E 43        evtyp7:	.word evnt07
001C24  3  41 46        evtyp8:	.word evnt08
001C26  3               
001C26  3               ;--------------------------------------------------------------
001C26  3               ; Display sprites.
001C26  3               ;
001C26  3               ; Input:
001C26  3               ;  IX = sprite table
001C26  3               ;--------------------------------------------------------------
001C26  3               
001C26  3               dspr:
001C26  3  A9 06        	lda #(NUMSPR/2)		; number of sprites to display.
001C28  3  8D D9 1C     	sta sprcnt
001C2B  3               
001C2B  3               dspr0:
001C2B  3  A0 00        	ldy #var_Type
001C2D  3  B1 rr        	lda (z80_ix),y 		; get sprite type.
001C2F  3  C9 FF        	cmp #255 			; is it enabled?
001C31  3  D0 46        	bne dspr1 			; yes, it needs deleting.
001C33  3               
001C33  3               dspr5:
001C33  3  A0 05        	ldy #var_newType
001C35  3  B1 rr        	lda (z80_ix),y 		; new type.
001C37  3  C9 FF        	cmp #255			; is it enabled?
001C39  3  F0 03        	beq dspr2			; no, skip
001C3B  3  4C C8 1C     	jmp dspr3 			; yes, it needs drawing.
001C3E  3               
001C3E  3               dspr2:
001C3E  3  A0 05        	ldy #var_newType
001C40  3  B1 rr        	lda (z80_ix),y 		; copy new type.
001C42  3  A0 00        	ldy #var_Type
001C44  3  91 rr        	sta (z80_ix),y
001C46  3  A0 06        	ldy #var_newImage
001C48  3  B1 rr        	lda (z80_ix),y 		; copy new image number.
001C4A  3  A0 01        	ldy #var_Image
001C4C  3  91 rr        	sta (z80_ix),y
001C4E  3  A0 07        	ldy #var_newFrame
001C50  3  B1 rr        	lda (z80_ix),y 		; copy new frame.
001C52  3  A0 02        	ldy #var_Frame
001C54  3  91 rr        	sta (z80_ix),y
001C56  3  A0 08        	ldy #var_newY
001C58  3  B1 rr        	lda (z80_ix),y 		; copy new y.
001C5A  3  A0 03        	ldy #var_Y
001C5C  3  91 rr        	sta (z80_ix),y
001C5E  3  A0 09        	ldy #var_newX
001C60  3  B1 rr        	lda (z80_ix),y 		; copy new x.
001C62  3  A0 04        	ldy #var_X
001C64  3  91 rr        	sta (z80_ix),y
001C66  3               
001C66  3  18           	clc
001C67  3  A5 rr        	lda z80_x
001C69  3  69 22        	adc #(TABSIZ*2)		; distance to next odd/even entry.
001C6B  3  85 rr        	sta z80_x
001C6D  3  A5 rr        	lda z80_i
001C6F  3  69 00        	adc #0
001C71  3  85 rr        	sta z80_i 			; next sprite.
001C73  3  CE D9 1C     	dec sprcnt
001C76  3  D0 B3        	bne dspr0			; repeat for remaining sprites.
001C78  3  60           	rts
001C79  3               
001C79  3               dspr1:
001C79  3               	; _BEEB clipping code copied from CPC Engine
001C79  3  A0 03        	ldy #var_Y
001C7B  3  B1 rr        	lda (z80_ix), y		; old x coord
001C7D  3  C9 B9        	cmp #SpriteMaxY     ; beyond maximum?
001C7F  3  B0 B2        	bcs dspr5			; yes, don't delete it.
001C81  3               
001C81  3  A0 05        	ldy #var_newType
001C83  3  B1 rr        	lda (z80_ix),y 		; type of new sprite.
001C85  3  C9 FF        	cmp #255			; is this enabled?
001C87  3  D0 06        	bne dspr4 			; yes, display both.
001C89  3               
001C89  3               dspr6:
001C89  3  20 62 1D     	jsr sspria 			; show single sprite.
001C8C  3  4C 3E 1C     	jmp dspr2
001C8F  3               
001C8F  3               ; Displaying two sprites.  Don't bother redrawing if nothing has changed.
001C8F  3               
001C8F  3               dspr4:
001C8F  3               	; _BEEB clipping code copied from CPC Engine
001C8F  3  A0 08        	ldy #var_newY
001C91  3  B1 rr        	lda (z80_ix), y		; old x coord
001C93  3  C9 B9        	cmp #SpriteMaxY     ; beyond maximum?
001C95  3  B0 F2        	bcs dspr6			; yes, don't display it.
001C97  3               
001C97  3  A0 04        	ldy #var_X
001C99  3  B1 rr        	lda (z80_ix),y		; old x.
001C9B  3  A0 09        	ldy #var_newX
001C9D  3  D1 rr        	cmp (z80_ix),y 		; compare with new value.
001C9F  3  D0 21        	bne dspr7 			; they differ, need to redraw.
001CA1  3               
001CA1  3  A0 03        	ldy #var_Y
001CA3  3  B1 rr        	lda (z80_ix),y		; old y.
001CA5  3  A0 08        	ldy #var_newY
001CA7  3  D1 rr        	cmp (z80_ix),y 		; compare against new value.
001CA9  3  D0 17        	bne dspr7			; they differ, need to redraw.
001CAB  3               
001CAB  3  A0 02        	ldy #var_Frame
001CAD  3  B1 rr        	lda (z80_ix),y 		; old frame.
001CAF  3  A0 07        	ldy #var_newFrame
001CB1  3  D1 rr        	cmp (z80_ix),y 		; compare against new value.
001CB3  3  D0 0D        	bne dspr7 			; they differ, need to redraw.
001CB5  3               
001CB5  3  A0 01        	ldy #var_Image
001CB7  3  B1 rr        	lda (z80_ix),y 		; old image.
001CB9  3  A0 06        	ldy #var_newImage
001CBB  3  D1 rr        	cmp (z80_ix),y 		; compare against new value.
001CBD  3  D0 03        	bne dspr7 			; they differ, need to redraw.
001CBF  3  4C 3E 1C     	jmp dspr2			; everything is the same, don't redraw.
001CC2  3               
001CC2  3               dspr7:
001CC2  3  20 7A 1D     	jsr sspric 			; delete old sprite, draw new one simultaneously.
001CC5  3  4C 3E 1C     	jmp dspr2
001CC8  3               
001CC8  3               dspr3:
001CC8  3               	; _BEEB clipping code copied from CPC Engine
001CC8  3  A0 08        	ldy #var_newY
001CCA  3  B1 rr        	lda (z80_ix), y		; old x coord
001CCC  3  C9 B9        	cmp #SpriteMaxY     ; beyond maximum?
001CCE  3  90 03        	bcc :+				; no, continue
001CD0  3  4C 3E 1C     	jmp dspr2			; yes, don't display it.
001CD3  3               :
001CD3  3  20 74 1D     	jsr ssprib 			; show single sprite.
001CD6  3  4C 3E 1C     	jmp dspr2
001CD9  3               
001CD9  3  00           sprcnt:	.byte 0
001CDA  3               
001CDA  3               ;-----------------------------------------
001CDA  3               ; Get sprite address calculations.
001CDA  3               ; gspran = new sprite, gsprad = old sprite.
001CDA  3               ;
001CDA  3               ; Input:
001CDA  3               ;  IX = sprite address
001CDA  3               ;-----------------------------------------
001CDA  3               
001CDA  3               gspran:
001CDA  3  A0 08        	ldy #var_newY
001CDC  3  B1 rr        	lda (z80_ix),y 		; new y coordinate.
001CDE  3  85 rr        	sta dispy
001CE0  3  A0 09        	ldy #var_newX
001CE2  3  B1 rr        	lda (z80_ix),y 		; new x coordinate.
001CE4  3  85 rr        	sta dispx
001CE6  3  A0 06        	ldy #var_newImage
001CE8  3  B1 rr        	lda (z80_ix),y 		; new sprite image.
001CEA  3  20 59 20     	jsr gfrm		; fetch start frame for this sprite.
001CED  3               
001CED  3  A0 00        	ldy #0
001CEF  3  B1 rr        	lda (z80_hl),y 		; frame in accumulator.
001CF1  3  A0 07        	ldy #var_newFrame
001CF3  3  18           	clc
001CF4  3  71 rr        	adc (z80_ix),y 		; new add frame number.
001CF6  3  4C 15 1D     	jmp gspra0
001CF9  3               
001CF9  3               ;-----------------------------------------
001CF9  3               ; Calculate old sprite address
001CF9  3               ;
001CF9  3               ; Input:
001CF9  3               ;  IX = sprite address
001CF9  3               ;
001CF9  3               ; Output:
001CF9  3               ;  B  = right byte mask
001CF9  3               ;  C  = left byte mask
001CF9  3               ;  DE = spriteframe address
001CF9  3               ;  scraddr = screenaddress(dispx,dispy)
001CF9  3               ;-----------------------------------------
001CF9  3               
001CF9  3               gsprad:
001CF9  3  A0 03        	ldy #var_Y
001CFB  3  B1 rr        	lda (z80_ix),y		; y coordinate.
001CFD  3  85 rr        	sta dispy
001CFF  3  A0 04        	ldy #var_X
001D01  3  B1 rr        	lda (z80_ix),y		; x coordinate.
001D03  3  85 rr        	sta dispx
001D05  3  A0 01        	ldy #var_Image
001D07  3  B1 rr        	lda (z80_ix),y 		; sprite image.
001D09  3  20 59 20     	jsr gfrm 		; fetch start frame for this sprite.
001D0C  3               
001D0C  3  A0 00        	ldy #0
001D0E  3  B1 rr        	lda (z80_hl),y 		; frame in accumulator.
001D10  3  A0 02        	ldy #var_Frame
001D12  3  18           	clc
001D13  3  71 rr        	adc (z80_ix),y 		; add frame number.
001D15  3               
001D15  3               gspra0:
001D15  3  4A           	lsr a	  		; multiply by 128.
001D16  3  85 rr        	sta z80_d 		; store in d.
001D18  3  A9 00        	lda #0
001D1A  3  6A           	ror a
001D1B  3  85 rr        	sta z80_e 		; got low byte.
001D1D  3               
001D1D  3  18           	clc 			; address of play sprites.
001D1E  3  A5 rr        	lda z80_e
001D20  3  69 50        	adc #<sprgfx
001D22  3  85 rr        	sta z80_e
001D24  3  A5 rr        	lda z80_d
001D26  3  69 52        	adc #>sprgfx
001D28  3  85 rr        	sta z80_d
001D2A  3               
001D2A  3  A5 rr        	lda dispx 		; y coordinate.
001D2C  3  29 06        	and #6 			; position within byte boundary.
001D2E  3  AA           	tax	 		; low byte of table displacement.
001D2F  3               
001D2F  3  0A           	asl a	  		; multiply by 32.
001D30  3  0A           	asl a  			; already a multiple
001D31  3  0A           	asl a  			; of 2, so just 4
001D32  3  0A           	asl a  			; shifts needed.
001D33  3               
001D33  3  18           	clc 			; add to sprite address.
001D34  3  65 rr        	adc z80_e
001D36  3  85 rr        	sta z80_e
001D38  3  90 02        	bcc :+
001D3A  3  E6 rr        	inc z80_d
001D3C  3               :
001D3C  3  BD 5A 1D     	lda spmask,x		 ; pointer to mask table.
001D3F  3  85 rr        	sta z80_c 		; left mask.
001D41  3  BD 5B 1D     	lda spmask+1,x
001D44  3  85 rr        	sta z80_b 		; right mask.
001D46  3               
001D46  3               ;------------------------------------------------------------------
001D46  3               ; Drop into screen address routine.
001D46  3               ; This routine returns a screen address for (dispx, dispy) in scraddr.
001D46  3               ;------------------------------------------------------------------
001D46  3               
001D46  3               scadd:
001D46  3  A6 rr        	ldx dispy
001D48  3  A5 rr        	lda dispx
001D4A  3  29 F8        	and #$f8
001D4C  3  18           	clc
001D4D  3  7D 00 06     	adc SCADTB_lb,x
001D50  3  85 rr        	sta scraddr
001D52  3  BD 00 07     	lda SCADTB_hb,x
001D55  3  69 00        	adc #0
001D57  3  85 rr        	sta scraddr+1
001D59  3  60           	rts
001D5A  3               
001D5A  3  FF 00 3F C0  spmask:	.byte 255,0,63,192,15,240,3,252
001D5E  3  0F F0 03 FC  
001D62  3               
001D62  3               
001D62  3               ;-----------------------------------------------------------------
001D62  3               ; These are the sprite routines.
001D62  3               ; sspria = single sprite, old (ix).
001D62  3               ; ssprib = single sprite, new (ix+5).
001D62  3               ; sspric = both sprites, old (ix) and new (ix+5).
001D62  3               ;-----------------------------------------------------------------
001D62  3               
001D62  3               sspria:
001D62  3  20 F9 1C     	jsr gsprad		; get old sprite address.
001D65  3               sspri2:
001D65  3  A9 10        	lda #16			; vertical lines.
001D67  3  8D 73 1D     	sta acnt
001D6A  3               sspri0:
001D6A  3  20 9D 1D     	jsr dline		; draw a line.
001D6D  3  CE 73 1D     	dec acnt
001D70  3  D0 F8        	bne sspri0		; repeat 16 times
001D72  3  60           	rts
001D73  3               
001D73  3  00           acnt:	.byte 0
001D74  3               
001D74  3               ;-----------------------------------------------------------------
001D74  3               
001D74  3               ssprib:
001D74  3  20 DA 1C     	jsr gspran 		; get new sprite address.
001D77  3  4C 65 1D     	jmp sspri2
001D7A  3               
001D7A  3               ;-----------------------------------------------------------------
001D7A  3               
001D7A  3               ccnt = $7c
001D7A  3               
001D7A  3               sspric:
001D7A  3  20 F9 1C     	jsr gsprad 		; get old sprite address.
001D7D  3  20 2D 77     	jsr exx  		; store addresses.
001D80  3  20 DA 1C     	jsr gspran 		; get new sprite addresses.
001D83  3               
001D83  3  A9 0F        	lda #15
001D85  3  85 7C        	sta ccnt
001D87  3               lloop:
001D87  3  20 9D 1D     	jsr dline 		; draw a line.
001D8A  3  20 2D 77     	jsr exx  		; restore old addresses.
001D8D  3  20 9D 1D     	jsr dline 		; delete a line.
001D90  3  20 2D 77     	jsr exx  		; flip to new sprite addresses.
001D93  3  C6 7C        	dec ccnt
001D95  3  D0 F0        	bne lloop
001D97  3               
001D97  3  20 9D 1D     	jsr dline		; draw a line.
001D9A  3  20 2D 77     	jsr exx 		; restore old addresses.
001D9D  3               
001D9D  3               ;-------------------------------------------------------------
001D9D  3               ; Drop through.
001D9D  3               ; Line drawn, now work out next target address.
001D9D  3               ;
001D9D  3               ; Input:
001D9D  3               ;  B  = right mask
001D9D  3               ;  C  = left mask
001D9D  3               ;  DE = spriteaddress
001D9D  3               ;  scraddr = screen address
001D9D  3               ;-------------------------------------------------------------
001D9D  3               
001D9D  3               dline:
001D9D  3  A0 00        	ldy #0
001D9F  3  B1 rr        	lda (z80_de),y 		; graphic data.
001DA1  3  25 rr        	and z80_c 		; mask away what's not needed.
001DA3  3  51 rr        	eor (scraddr),y 	; XOR with what's there.
001DA5  3  91 rr        	sta (scraddr),y 	; bung it in.
001DA7  3               
001DA7  3               ; _BEEB screen arrangement
001DA7  3  18           	clc
001DA8  3  A5 rr        	lda scraddr
001DAA  3  69 10        	adc #16
001DAC  3  85 rr        	sta scraddr
001DAE  3  90 02        	bcc :+
001DB0  3  E6 rr        	inc scraddr+1
001DB2  3               :
001DB2  3               
001DB2  3  B1 rr        	lda (z80_de),y 		; fetch data.
001DB4  3  25 rr        	and z80_b 		; mask away unwanted bits.
001DB6  3  51 rr        	eor (scraddr),y 	; XOR with what's there.
001DB8  3  91 rr        	sta (scraddr),y 	; bung it in.
001DBA  3               
001DBA  3  E6 rr        	inc z80_e 		; next graphic.
001DBC  3  D0 02        	bne :+
001DBE  3  E6 rr        	inc z80_d
001DC0  3               :
001DC0  3               ; _BEEB screen arrangement
001DC0  3  38           	sec
001DC1  3  A5 rr        	lda scraddr 		; one character cell to the left.
001DC3  3  E9 08        	sbc #8
001DC5  3  85 rr        	sta scraddr
001DC7  3  A5 rr        	lda scraddr+1
001DC9  3  E9 00        	sbc #0
001DCB  3  85 rr        	sta scraddr+1
001DCD  3               
001DCD  3  B1 rr        	lda (z80_de),y 		; second bit of data.
001DCF  3  51 rr        	eor (scraddr),y 	; XOR with what's there.
001DD1  3  91 rr        	sta (scraddr),y 	; bung it in.
001DD3  3               
001DD3  3  E6 rr        	inc z80_e 		; point to next line of data.
001DD5  3  D0 02        	bne :+
001DD7  3  E6 rr        	inc z80_d
001DD9  3               :
001DD9  3               ; _BEEB screen arrangement
001DD9  3  38           	sec
001DDA  3  A5 rr        	lda scraddr 		; another char left.
001DDC  3  E9 08        	sbc #8
001DDE  3  85 rr        	sta scraddr
001DE0  3  A5 rr        	lda scraddr+1
001DE2  3  E9 00        	sbc #0
001DE4  3  85 rr        	sta scraddr+1
001DE6  3               
001DE6  3               ;----------------------------------------------------------------------
001DE6  3               ; Line drawn, now work out next target address.
001DE6  3               ;----------------------------------------------------------------------
001DE6  3               
001DE6  3               ; _BEEB screen arrangement
001DE6  3               
001DE6  3               nline:
001DE6  3  A5 rr        	lda scraddr 		; get low byte of address.
001DE8  3  29 07        	and #7				
001DEA  3  C9 07        	cmp #7				; is this last line of row?
001DEC  3  F0 03        	beq beeb_next_row
001DEE  3               
001DEE  3               	; within same row
001DEE  3  E6 rr        	inc scraddr			; new low byte of address.
001DF0  3               ;	bne :+
001DF0  3               ;	inc scraddr+1		; new high byte of address.
001DF0  3               :
001DF0  3  60           	rts
001DF1  3               
001DF1  3               beeb_next_row:
001DF1  3  18           	clc
001DF2  3  A5 rr        	lda scraddr
001DF4  3  69 F9        	adc #<(ScreenRowBytes-7)
001DF6  3  85 rr        	sta scraddr			; new low byte of address.
001DF8  3  A5 rr        	lda scraddr+1
001DFA  3  69 00        	adc #>(ScreenRowBytes-7)
001DFC  3  85 rr        	sta scraddr+1		; new high byte of address.
001DFE  3  60           	rts
001DFF  3               
001DFF  3               ;-----------------------------------------------------------
001DFF  3               ; Animates a sprite.
001DFF  3               ;
001DFF  3               ; Input:
001DFF  3               ;  IX = sprite address
001DFF  3               ;  HL = last sprite address
001DFF  3               ;-----------------------------------------------------------
001DFF  3               
001DFF  3               animsp:
001DFF  3  A0 06        	ldy #var_newImage
001E01  3  B1 rr        	lda (z80_ix),y		; sprite image
001E03  3  20 59 20     	jsr gfrm		; get frame data.
001E06  3               
001E06  3  E6 rr        	inc z80_l		; point to frames.
001E08  3  D0 02        	bne :+
001E0A  3  E6 rr        	inc z80_h
001E0C  3               :
001E0C  3  A0 07        	ldy #var_newFrame
001E0E  3  B1 rr        	lda (z80_ix),y		; sprite frame.
001E10  3  18           	clc
001E11  3  69 01        	adc #1			; next one along.
001E13  3  A0 00        	ldy #0
001E15  3  D1 rr        	cmp (z80_hl),y		; reached the last frame?
001E17  3  90 02        	bcc anims0		; no, not yet.
001E19  3  A9 00        	lda #0			; start at first frame.
001E1B  3               anims0:
001E1B  3  A0 07        	ldy #var_newFrame
001E1D  3  91 rr        	sta (z80_ix),y		; new frame.
001E1F  3  60           	rts
001E20  3               
001E20  3               ;--------------------------------------------------------------
001E20  3               ; Animate back
001E20  3               ;
001E20  3               ; Input:
001E20  3               ;  IX = sprite address
001E20  3               ;  HL = last sprite address
001E20  3               ;--------------------------------------------------------------
001E20  3               
001E20  3               animbk:
001E20  3  A0 06        	ldy #var_newImage
001E22  3  B1 rr        	lda (z80_ix),y		; sprite image.
001E24  3  20 59 20     	jsr gfrm		; get frame data.
001E27  3               
001E27  3  E6 rr        	inc z80_l 		; point to frames.
001E29  3  D0 02        	bne :+
001E2B  3  E6 rr        	inc z80_h
001E2D  3               :
001E2D  3  A0 07        	ldy #var_newFrame
001E2F  3  B1 rr        	lda (z80_ix),y 		; sprite frame.
001E31  3  F0 03        	beq :+
001E33  3  4C 3A 1E     	jmp rtanb0 		; yes, start at end.
001E36  3               :
001E36  3  A0 00        	ldy #0
001E38  3  B1 rr        	lda (z80_hl),y 		; last sprite.
001E3A  3               rtanb0:
001E3A  3  38           	sec
001E3B  3  E9 01        	sbc #1			; next one along.
001E3D  3  4C 1B 1E     	jmp anims0		; set new frame.
001E40  3               
001E40  3               ;--------------------------------------------------------------
001E40  3               ; Check for collision with other sprite, strict enforcement.
001E40  3               ;
001E40  3               ; Input:
001E40  3               ;  b		= sprite to test for
001E40  3               ;  ix		= current sprite pointer
001E40  3               ;
001E40  3               ; global:	b
001E40  3               ; local:	x,y,hl,de,skptr
001E40  3               ; calls:	-
001E40  3               ;--------------------------------------------------------------
001E40  3               
001E40  3               sktyp:
001E40  3  A9 42        	lda #<sprtab				; sprite table.
001E42  3  85 rr        	sta z80_l
001E44  3  A9 22        	lda #>sprtab
001E46  3  85 rr        	sta z80_h
001E48  3               numsp2:
001E48  3  A9 0C        	lda #NUMSPR				; number of sprites.
001E4A  3  8D 83 1E     	sta sktptr
001E4D  3               sktyp0:
001E4D  3  A5 rr        	lda z80_l 				; store pointer to sprite.
001E4F  3  8D 81 1E     	sta skptr
001E52  3  A5 rr        	lda z80_h
001E54  3  8D 82 1E     	sta skptr+1
001E57  3               
001E57  3  A0 00        	ldy #0
001E59  3  B1 rr        	lda (z80_hl),y 				; get sprite type.
001E5B  3  C5 rr        	cmp z80_b				; is it the type we seek?
001E5D  3  F0 25        	beq coltyp				; yes, we can use this one.
001E5F  3               :
001E5F  3               sktyp1:
001E5F  3  18           	clc
001E60  3  AD 81 1E     	lda skptr				; retrieve sprite pointer.
001E63  3  69 11        	adc #TABSIZ				; size of each entry.
001E65  3  85 rr        	sta z80_l
001E67  3  AD 82 1E     	lda skptr+1
001E6A  3  69 00        	adc #0
001E6C  3  85 rr        	sta z80_h
001E6E  3  CE 83 1E     	dec sktptr					; one less iteration.
001E71  3  D0 DA        	bne sktyp0				; keep going until we find a slot.
001E73  3               :
001E73  3  A9 00        	lda #0					; default to ROM address - no sprite.
001E75  3  85 rr        	sta z80_l
001E77  3  85 rr        	sta z80_h
001E79  3  8D 81 1E     	sta skptr				; store pointer to sprite.
001E7C  3  8D 82 1E     	sta skptr+1
001E7F  3               
001E7F  3  18           	clc					; don't return with zero flag set.
001E80  3  60           	rts 					; didn't find one.
001E81  3               
001E81  3  00 00        skptr:	.word 0					; search pointer.
001E83  3  00           sktptr:	.byte 0
001E84  3               
001E84  3               coltyp:
001E84  3  A0 00        	ldy #0
001E86  3  B1 rr        	lda (z80_ix),y				; current sprite type.
001E88  3  C5 rr        	cmp z80_b				; seeking sprite of same type?
001E8A  3  F0 3D        	beq colty1				; yes, need to check we're not detecting ourselves.
001E8C  3               colty0:
001E8C  3  A0 09        	ldy #9					; distance to x position in table.
001E8E  3  B1 rr        	lda (z80_hl),y				; fetch x coordinate.
001E90  3  85 rr        	sta z80_e
001E92  3  88           	dey
001E93  3  B1 rr        	lda (z80_hl),y				; fetch y coordinate.
001E95  3  85 rr        	sta z80_d
001E97  3               
001E97  3               ; Drop into collision detection.
001E97  3               
001E97  3               colc16:
001E97  3  A0 09        	ldy #9
001E99  3  B1 rr        	lda (z80_ix),y			 	; x coord.
001E9B  3  38           	sec					; subtract x.
001E9C  3  E5 rr        	sbc z80_e
001E9E  3  B0 05        	bcs  colc1a 				; result is positive.
001EA0  3  49 FF        	eor #$ff				; make negative positive.
001EA2  3  18           	clc
001EA3  3  69 01        	adc #1
001EA5  3               colc1a:
001EA5  3  C9 10        	cmp #16 				; within x range?
001EA7  3  B0 B6        	bcs sktyp1				; no - they"ve missed.
001EA9  3  85 rr        	sta z80_c				; store difference.
001EAB  3               
001EAB  3  A0 08        	ldy #8
001EAD  3  B1 rr        	lda (z80_ix),y				; y coord.
001EAF  3  38           	sec
001EB0  3  E5 rr        	sbc z80_d				; subtract y.
001EB2  3  B0 05        	bcs colc1b				; result is positive.
001EB4  3  49 FF        	eor #$ff				; make negative positive.
001EB6  3  18           	clc
001EB7  3  69 01        	adc #1
001EB9  3               colc1b:
001EB9  3  C9 10        	cmp #16					; within y range?
001EBB  3  B0 A2        	bcs sktyp1 				; no - they've missed.
001EBD  3  18           	clc					; add x difference.
001EBE  3  65 rr        	adc z80_c
001EC0  3  C9 1A        	cmp #26					; only 5 corner pixels touching?
001EC2  3  B0 02        	bcs :+
001EC4  3  38           	sec
001EC5  3  60           	rts 					; carry set if there's a collision.
001EC6  3               :
001EC6  3  4C 5F 1E     	jmp sktyp1				; try next sprite in table.
001EC9  3               colty1:
001EC9  3  A5 rr        	lda z80_x  				; compare the two.
001ECB  3  C5 rr        	cmp z80_l
001ECD  3  D0 09        	bne end_col
001ECF  3  A5 rr        	lda z80_i
001ED1  3  C5 rr        	cmp z80_h
001ED3  3  D0 03        	bne end_col
001ED5  3  4C 5F 1E     	jmp sktyp1 				; addresses are identical.
001ED8  3               end_col:
001ED8  3  4C 8C 1E     	jmp colty0
001EDB  3               
001EDB  3               ;-----------------------------------------------------------
001EDB  3               ; Display number, left aligned
001EDB  3               ; 
001EDB  3               ; Input:
001EDB  3               ;  a		= number
001EDB  3               ;
001EDB  3               ; global:	-
001EDB  3               ; local:	a,y,bc,hl,displ0
001EDB  3               ; calls:	num2ch,dmsg3
001EDB  3               ;-----------------------------------------------------------
001EDB  3               
001EDB  3               disply:
001EDB  3  85 rr        	sta z80_a
001EDD  3  A9 03        	lda #<displ0				; display workspace.
001EDF  3  85 rr        	sta z80_c
001EE1  3  A9 1F        	lda #>displ0
001EE3  3  85 rr        	sta z80_b
001EE5  3  A5 rr        	lda z80_a
001EE7  3  20 F7 10     	jsr num2ch				; convert accumulator to string.
001EEA  3               
001EEA  3  C6 rr        	dec z80_c				; back one character.
001EEC  3  D0 02        	bne :+
001EEE  3  C6 rr        	dec z80_b
001EF0  3               :
001EF0  3  A0 00        	ldy #0
001EF2  3  B1 rr        	lda (z80_bc),y				; fetch digit.
001EF4  3  09 80        	ora #128				; insert end marker.
001EF6  3  91 rr        	sta (z80_bc),y				; new value.
001EF8  3               
001EF8  3  A9 03        	lda #<displ0				; display space.
001EFA  3  85 rr        	sta z80_l
001EFC  3  A9 1F        	lda #>displ0
001EFE  3  85 rr        	sta z80_h
001F00  3  4C DF 19     	jmp dmsg3				; display the string.
001F03  3               
001F03  3  00 00 00 8D  displ0:	.byte 0,0,0,13+128
001F07  3               
001F07  3               ;----------------------------------------------------------------
001F07  3               ; Initialise screen.
001F07  3               ;
001F07  3               ; global:	roomtb,scno
001F07  3               ; local:	-
001F07  3               ; calls:	tstcs
001F07  3               ;----------------------------------------------------------------
001F07  3               
001F07  3               initsc:
001F07  3  AD 1F 23     	lda roomtb 			; whereabouts in the map are we?
001F0A  3  20 14 1F     	jsr tstsc 			; find displacement.
001F0D  3  C9 FF        	cmp #255 			; is it valid?
001F0F  3  F0 02        	beq init_end 			; no, it's rubbish.
001F11  3  85 rr        	sta scno			; store new room number.
001F13  3               init_end:
001F13  3  60           	rts
001F14  3               
001F14  3               ;----------------------------------------------------------------
001F14  3               ; Test screen.
001F14  3               ;
001F14  3               ; global:	-
001F14  3               ; local:	x
001F14  3               ; calls:	-
001F14  3               ;----------------------------------------------------------------
001F14  3               
001F14  3               tstsc:
001F14  3  8D 1F 1F     	sta tmproom
001F17  3  18           	clc
001F18  3  69 0B        	adc #MAPWID 			; add width in case we"re negative.
001F1A  3  AA           	tax 				; add displacement to map data.
001F1B  3  BD 21 23     	lda mapdat-MAPWID,x 		; find room number there.
001F1E  3  60           	rts
001F1F  3               
001F1F  3  00           tmproom:	.byte 0
001F20  3               
001F20  3               ;--------------------------
001F20  3               ; Screen left.
001F20  3               ;--------------------------
001F20  3               
001F20  3               scrl:
001F20  3  AD 1F 23     	lda roomtb 			; present room table pointer.
001F23  3  38           	sec
001F24  3  E9 01        	sbc #1				; room left.
001F26  3               scrl0:
001F26  3  20 14 1F     	jsr tstsc			; test screen.
001F29  3  C9 FF        	cmp #255			; is there a screen this way?
001F2B  3  D0 01        	bne :+
001F2D  3  60           	rts				; no, return to loop.
001F2E  3               :
001F2E  3  AD 1F 1F     	lda tmproom			; restore room displacement.
001F31  3  8D 1F 23     	sta roomtb			; new room table position.
001F34  3               scrl1:
001F34  3  20 07 1F     	jsr initsc 			; set new screen.
001F37  3  A9 02        	lda #2
001F39  3  85 rr        	sta restfl 			; set it.
001F3B  3  60           	rts
001F3C  3               scrr:
001F3C  3  AD 1F 23     	lda roomtb 			; room table pointer.
001F3F  3  18           	clc
001F40  3  69 01        	adc #1				; room right.
001F42  3  4C 26 1F     	jmp scrl0
001F45  3               scru:
001F45  3  AD 1F 23     	lda roomtb 			; room table pointer.
001F48  3  38           	sec
001F49  3  E9 0B        	sbc #MAPWID 			; room up.
001F4B  3  4C 26 1F     	jmp scrl0
001F4E  3               scrd:
001F4E  3  AD 1F 23     	lda roomtb 			; room table pointer.
001F51  3  18           	clc
001F52  3  69 0B        	adc #MAPWID 			; room down.
001F54  3  4C 26 1F     	jmp scrl0
001F57  3               
001F57  3               ;-----------------------------------------
001F57  3               ; Jump to new screen.
001F57  3               ;-----------------------------------------
001F57  3               
001F57  3               nwscr:
001F57  3  A2 00        	ldx #0				; start of map data.
001F59  3               nwscr0:
001F59  3  DD 2C 23     	cmp mapdat,x
001F5C  3  F0 06        	beq nwscr1			; have we found a match for screen?
001F5E  3  E8           	inx 				; next room.
001F5F  3  E0 50        	cpx #80				; zero room count, 80 to search.
001F61  3  D0 F6        	bne nwscr0			; keep looking.
001F63  3  60           	rts
001F64  3               nwscr1:
001F64  3  8E 1F 23     	stx roomtb			; set the map position.
001F67  3  4C 34 1F     	jmp scrl1			; draw new room.
001F6A  3               
001F6A  3               
001F6A  3               ;----------------------------------------------------------
001F6A  3               ; Gravity processing.
001F6A  3               ;----------------------------------------------------------
001F6A  3               
001F6A  3               grav:
001F6A  3  A0 0D        	ldy #13
001F6C  3  B1 rr        	lda (z80_ix),y			; jump pointer low.
001F6E  3  85 rr        	sta z80_l
001F70  3  A0 0E        	ldy #14
001F72  3  B1 rr        	lda (z80_ix),y			; jump pointer high.
001F74  3  85 rr        	sta z80_h
001F76  3  05 rr        	ora z80_l			; merge in low byte.
001F78  3  D0 01        	bne :+
001F7A  3  60           	rts				; if neither is set, we're not in the air.
001F7B  3               :
001F7B  3  A0 00        	ldy #0
001F7D  3  B1 rr        	lda (z80_hl),y			; pixels to move.
001F7F  3  85 rr        	sta z80_a
001F81  3  C9 63        	cmp #99				; reached the end?
001F83  3  D0 06        	bne grav0			; no, continue.
001F85  3               grav2:
001F85  3  C6 rr        	dec z80_l			; go back to previous value.
001F87  3  B1 rr        	lda (z80_hl),y			; fetch that from table.
001F89  3  85 rr        	sta z80_a
001F8B  3               grav0:
001F8B  3  E6 rr        	inc z80_l			; point to next table entry.
001F8D  3  A5 rr        	lda z80_l
001F8F  3  A0 0D        	ldy #13
001F91  3  91 rr        	sta (z80_ix),y			; store new pointer low.
001F93  3  A5 rr        	lda z80_h
001F95  3  A0 0E        	ldy #14
001F97  3  91 rr        	sta (z80_ix),y			; store new pointer high.
001F99  3               grav1:
001F99  3  A5 rr        	lda z80_a
001F9B  3  D0 01        	bne :+				; any movement required?
001F9D  3  60           	rts				; no, not this time.
001F9E  3               :
001F9E  3  A5 rr        	lda z80_a
001FA0  3  C9 80        	cmp #128			; is it up or down?
001FA2  3  B0 15        	bcs gravu			; it's up.
001FA4  3               gravd:
001FA4  3  85 rr        	sta z80_b			; set pixels to move.
001FA6  3               gravd0:
001FA6  3  20 5E 17     	jsr cangd			; can we go down?
001FA9  3  D0 28        	bne gravst			; can't move down, so stop.
001FAB  3  A0 08        	ldy #8
001FAD  3  B1 rr        	lda (z80_ix),y			; adjust new x coord.
001FAF  3  18           	clc
001FB0  3  69 01        	adc #1
001FB2  3  91 rr        	sta (z80_ix),y
001FB4  3  C6 rr        	dec z80_b
001FB6  3  D0 EE        	bne gravd0
001FB8  3  60           	rts
001FB9  3               gravu:
001FB9  3  49 FF        	eor #$ff			; flip the sign so it's positive.
001FBB  3  18           	clc
001FBC  3  69 01        	adc #1
001FBE  3  85 rr        	sta z80_b			; set pixels to move.
001FC0  3               gravu0:
001FC0  3  20 29 17     	jsr cangu			; can we go up?
001FC3  3  D0 6E        	bne ifalls			; can't move up, go down next.
001FC5  3  A0 08        	ldy #8
001FC7  3  B1 rr        	lda (z80_ix),y
001FC9  3  38           	sec
001FCA  3  E9 01        	sbc #1
001FCC  3  91 rr        	sta (z80_ix),y			; adjust new x coord.
001FCE  3  C6 rr        	dec z80_b
001FD0  3  D0 EE        	bne gravu0
001FD2  3  60           	rts
001FD3  3               gravst:
001FD3  3  A0 0D        	ldy #13
001FD5  3  B1 rr        	lda (z80_ix),y			; jump pointer low.
001FD7  3  85 rr        	sta z80_l
001FD9  3  A0 0E        	ldy #14
001FDB  3  B1 rr        	lda (z80_ix),y			; jump pointer high.
001FDD  3  85 rr        	sta z80_h
001FDF  3               
001FDF  3  A9 00        	lda #0				; null value in pointer.
001FE1  3  A0 0D        	ldy #13
001FE3  3  91 rr        	sta (z80_ix),y			; store new pointer low.
001FE5  3  C8           	iny
001FE6  3  91 rr        	sta (z80_ix),y			; store new pointer high.
001FE8  3               
001FE8  3  A0 00        	ldy #0
001FEA  3  B1 rr        	lda (z80_hl),y			; fetch byte from table.
001FEC  3  C9 63        	cmp #99				; is it the end marker?
001FEE  3               evftf:
001FEE  3  F0 01        	beq :+				; yes, fallen too far.
001FF0  3  60           	rts
001FF1  3               :
001FF1  3  4C EC 4D     	jmp evnt15			; EVENT FELLTOOFAR
001FF4  3               
001FF4  3               ;------------------------------------------------
001FF4  3               ; Initiate fall check.
001FF4  3               ;------------------------------------------------
001FF4  3               
001FF4  3               ifall:
001FF4  3  A0 0D        	ldy #13
001FF6  3  B1 rr        	lda (z80_ix),y 			; jump pointer low.
001FF8  3  85 rr        	sta z80_l
001FFA  3  A0 0E        	ldy #14
001FFC  3  B1 rr        	lda (z80_ix),y 			; jump pointer high.
001FFE  3  85 rr        	sta z80_h			; high byte in accumulator.
002000  3  05 rr        	ora z80_l			; merge in low byte.
002002  3  F0 01        	beq :+
002004  3  60           	rts				; if either is set, we're already in the air.
002005  3               :
002005  3  A0 09        	ldy #9
002007  3  B1 rr        	lda (z80_ix),y			; y coordinate.
002009  3  85 rr        	sta dispx
00200B  3               numsp7:
00200B  3  A0 08        	ldy #8
00200D  3  B1 rr        	lda (z80_ix),y			; look x coordinate.
00200F  3  18           	clc
002010  3  69 10        	adc #16				; add 16 pixels.
002012  3  85 rr        	sta dispy			; set up test coordinates.
002014  3  20 D9 18     	jsr tstbl			; get map address.
002017  3  20 F0 17     	jsr plchk			; block, platform check.
00201A  3  F0 01        	beq :+
00201C  3  60           	rts				; it's solid, don't fall.
00201D  3               :
00201D  3  E6 rr        	inc bufaddr			; look right one cell.
00201F  3  20 F0 17     	jsr plchk			; block, platform check.
002022  3  F0 01        	beq :+
002024  3  60           	rts				; it's solid, don't fall.
002025  3               :
002025  3  A5 rr        	lda dispx			; y coordinate.
002027  3  29 07        	and #7				; position straddling block cells.
002029  3  F0 08        	beq ifalls			; no more checks needed.
00202B  3  E6 rr        	inc bufaddr			; look to third cell.
00202D  3  20 F0 17     	jsr plchk			; block, platform check.
002030  3  F0 01        	beq :+
002032  3  60           	rts				; it's solid, don't fall.
002033  3               :
002033  3               ifalls:
002033  3  A9 27        	lda #<jtab			; jump table start.
002035  3  85 rr        	sta z80_l
002037  3  A9 19        	lda #>jtab
002039  3  85 rr        	sta z80_h
00203B  3               ifal0:
00203B  3  E6 rr        	inc z80_l			; point to next value.
00203D  3  A0 00        	ldy #0
00203F  3  B1 rr        	lda (z80_hl),y			; fetch value.
002041  3  F0 F8        	beq ifal0			; no, get next value.
002043  3  C9 63        	cmp #99				; reached end of table?
002045  3  D0 01        	bne :+
002047  3  60           	rts				; yes, don't fall.
002048  3               :
002048  3  C9 80        	cmp #128			; is it going up?
00204A  3  B0 EF        	bcs ifal0			; yes, looking for first movement down.
00204C  3               
00204C  3  A0 0D        	ldy #13
00204E  3  A5 rr        	lda z80_l
002050  3  91 rr        	sta (z80_ix),y 			; set jump low.
002052  3  A0 0E        	ldy #14
002054  3  A5 rr        	lda z80_h
002056  3  91 rr        	sta (z80_ix),y 			; set jump high.
002058  3  60           	rts
002059  3               
002059  3               
002059  3               ;----------------------------------------------------
002059  3               ; Get frame data for a particular sprite.
002059  3               ; Input:
002059  3               ;  a		= framenumer
002059  3               ; Output:
002059  3               ;  hl		= frame address
002059  3               ;
002059  3               ; global:	hl,frmptr
002059  3               ; local:	-
002059  3               ; calls:	-
002059  3               ;----------------------------------------------------
002059  3               
002059  3               gfrm:
002059  3  0A           	asl a	 		 	; multiple of 2.
00205A  3  18           	clc
00205B  3  6D 3C 0E     	adc frmptr 			; frames used by game.
00205E  3  85 rr        	sta z80_l
002060  3  AD 3D 0E     	lda frmptr+1
002063  3  69 00        	adc #0
002065  3  85 rr        	sta z80_h 			; point to frame start.
002067  3  60           	rts
002068  3               
002068  3               ;----------------------------------------------------
002068  3               ; Find sprite list for current room.
002068  3               ;
002068  3               ; global:	hl
002068  3               ; local:	x,y
002068  3               ; calls:	-
002068  3               ;----------------------------------------------------
002068  3               
002068  3               sprlst:
002068  3  A9 74        	lda #<nmedat 			; list of enemy sprites.
00206A  3  85 rr        	sta z80_l
00206C  3  A9 72        	lda #>nmedat
00206E  3  85 rr        	sta z80_h
002070  3  A6 rr        	ldx scno 			; screen number.
002072  3  D0 01        	bne sprls2 			; is it the first screen?
002074  3  60           	rts 				; yes, don't need to search data.
002075  3               sprls2:
002075  3  A0 00        	ldy #0
002077  3               sprls1:
002077  3  B1 rr        	lda (z80_hl),y 			; fetch type of sprite.
002079  3  C9 FF        	cmp #255			; is it an end marker?
00207B  3  F0 0E        	beq sprls0 			; yes, end of this room.
00207D  3               
00207D  3  18           	clc 				; point to next sprite in list.
00207E  3  A5 rr        	lda z80_l
002080  3  69 04        	adc #NMESIZ
002082  3  85 rr        	sta z80_l
002084  3  90 02        	bcc :+
002086  3  E6 rr        	inc z80_h
002088  3               :
002088  3  4C 77 20     	jmp sprls1 			; continue until end of room.
00208B  3               sprls0:
00208B  3  E6 rr        	inc z80_l 			; point to start of next screen.s
00208D  3  D0 02        	bne :+
00208F  3  E6 rr        	inc z80_h
002091  3               :
002091  3  CA           	dex
002092  3  D0 E3        	bne sprls1 			; continue until room found.
002094  3  60           	rts
002095  3               
002095  3               
002095  3               ;----------------------------------------------------
002095  3               ; Clear all but a single player sprite.
002095  3               ;
002095  3               ; global:	-
002095  3               ; local:	x,y,ix
002095  3               ; calls:	-
002095  3               ;----------------------------------------------------
002095  3               
002095  3               nspr:
002095  3  A9 0C        	lda #NUMSPR			; sprite slots in table.
002097  3  8D D9 1C     	sta sprcnt
00209A  3  A9 42        	lda #<sprtab 			; sprite table.
00209C  3  85 rr        	sta z80_x
00209E  3  A9 22        	lda #>sprtab
0020A0  3  85 rr        	sta z80_i
0020A2  3               nspr0:
0020A2  3  A0 00        	ldy #0 				; fetch sprite type.
0020A4  3  B1 rr        	lda (z80_ix),y 			; is it a player?
0020A6  3  F0 1B        	beq nspr1 			; yes, keep this one.
0020A8  3               
0020A8  3  A9 FF        	lda #255
0020AA  3  A0 00        	ldy #0 				; fetch sprite type.
0020AC  3  91 rr        	sta (z80_ix),y 			; delete sprite.
0020AE  3  A0 05        	ldy #5
0020B0  3  91 rr        	sta (z80_ix),y 			; remove next type.
0020B2  3               
0020B2  3  18           	clc	 			; next sprite.
0020B3  3  A5 rr        	lda z80_x
0020B5  3  69 11        	adc #TABSIZ 			; distance to next odd/even entry.
0020B7  3  85 rr        	sta z80_x
0020B9  3  90 02        	bcc :+
0020BB  3  E6 rr        	inc z80_i
0020BD  3               :
0020BD  3  CE D9 1C     	dec sprcnt	 			; one less space in the table.
0020C0  3  D0 E0        	bne nspr0
0020C2  3  60           	rts
0020C3  3               nspr1:
0020C3  3  A9 FF        	lda #255
0020C5  3  A0 00        	ldy #0
0020C7  3  91 rr        	sta (z80_ix),y 			; delete sprite.
0020C9  3               
0020C9  3  18           	clc	 			; point to next sprite.
0020CA  3  A5 rr        	lda z80_x
0020CC  3  69 11        	adc #TABSIZ 			; distance to next odd/even entry.
0020CE  3  85 rr        	sta z80_x
0020D0  3  90 02        	bcc :+
0020D2  3  E6 rr        	inc z80_i
0020D4  3               :
0020D4  3  CE D9 1C     	dec sprcnt	 			; one less to do.
0020D7  3  D0 01        	bne nspr2
0020D9  3  60           	rts
0020DA  3               nspr2:
0020DA  3  A9 FF        	lda #255
0020DC  3  A0 00        	ldy #0
0020DE  3  91 rr        	sta (z80_ix),y 			; delete sprite.
0020E0  3  A0 05        	ldy #5
0020E2  3  91 rr        	sta (z80_ix),y 			; remove next type.
0020E4  3               
0020E4  3  18           	clc	 			; next sprite.
0020E5  3  A5 rr        	lda z80_x
0020E7  3  69 11        	adc #TABSIZ 			; distance to next odd/even entry.
0020E9  3  85 rr        	sta z80_x
0020EB  3  90 02        	bcc :+
0020ED  3  E6 rr        	inc z80_i
0020EF  3               :
0020EF  3  CE D9 1C     	dec sprcnt	 			; one less space in table.
0020F2  3  D0 E6        	bne nspr2
0020F4  3  60           	rts
0020F5  3               
0020F5  3               ;----------------------------------------------------------
0020F5  3               ; Two initialisation routines.
0020F5  3               ; Initialise sprites - copy everything from list to table.
0020F5  3               ;
0020F5  3               ; global:	-
0020F5  3               ; local:	x,y,ix
0020F5  3               ; calls:	cpsp
0020F5  3               ;----------------------------------------------------------
0020F5  3               
0020F5  3               ispr:
0020F5  3  A9 0C        	lda #NUMSPR			; sprite slots in table.
0020F7  3  8D D9 1C     	sta sprcnt
0020FA  3  A9 42        	lda #<sprtab			; sprite table.
0020FC  3  85 rr        	sta z80_x
0020FE  3  A9 22        	lda #>sprtab
002100  3  85 rr        	sta z80_i
002102  3               ispr2:
002102  3  A0 00        	ldy #0
002104  3  B1 rr        	lda (z80_hl),y 			; fetch byte.
002106  3  C9 FF        	cmp #255 			; is it an end marker?
002108  3  D0 01        	bne :+
00210A  3  60           	rts 				; yes, no more to do.
00210B  3               :
00210B  3               ispr1:
00210B  3  A0 00        	ldy #0
00210D  3  B1 rr        	lda (z80_ix),y 			; fetch sprite type.
00210F  3  C9 FF        	cmp #255 			; is it enabled yet?
002111  3  D0 08        	bne ispr4			; yes, try another slot.
002113  3               
002113  3  A0 05        	ldy #5
002115  3  B1 rr        	lda (z80_ix),y		 	; next type.
002117  3  C9 FF        	cmp #255 			; is it enabled yet?
002119  3  F0 11        	beq ispr3 			; no, process this one.
00211B  3               ispr4:
00211B  3  18           	clc 				; next sprite.
00211C  3  A5 rr        	lda z80_x
00211E  3  69 11        	adc #TABSIZ		 	; distance to next odd/even entry.
002120  3  85 rr        	sta z80_x
002122  3  90 02        	bcc :+
002124  3  E6 rr        	inc z80_i
002126  3               :
002126  3  CE D9 1C     	dec sprcnt
002129  3  D0 E0        	bne ispr1 			; repeat for remaining sprites.
00212B  3  60           	rts  				; no more room in table.
00212C  3               ispr3:
00212C  3  20 80 21     	jsr cpsp			; initialise a sprite.
00212F  3  CE D9 1C     	dec sprcnt			; one less space in the table.
002132  3  D0 CE        	bne ispr2
002134  3  60           	rts
002135  3               
002135  3               
002135  3               ;-----------------------------------------------------------------------
002135  3               ; Initialise sprites - but not player, we're keeping the old one.
002135  3               ;
002135  3               ; global:	-
002135  3               ; local:	x,y,ix
002135  3               ; calls:	cpsp
002135  3               ;-----------------------------------------------------------------------
002135  3               
002135  3               kspr:
002135  3  A2 0C        	ldx #NUMSPR			; sprite slots in table.
002137  3  A9 42        	lda #<sprtab 			; sprite table.
002139  3  85 rr        	sta z80_x
00213B  3  A9 22        	lda #>sprtab
00213D  3  85 rr        	sta z80_i
00213F  3               kspr2:
00213F  3  A0 00        	ldy #0
002141  3  B1 rr        	lda (z80_hl),y 			; fetch byte.
002143  3  C9 FF        	cmp #255 			; is it an end marker?
002145  3  D0 01        	bne :+
002147  3  60           	rts 				; yes, no more to do.
002148  3               :
002148  3  C9 00        	cmp #0
00214A  3  D0 0E        	bne kspr1 			; no, add to table as normal.
00214C  3               
00214C  3  18           	clc 				; next sprite.
00214D  3  A5 rr        	lda z80_l
00214F  3  69 04        	adc #NMESIZ		 	; distance to next odd/even entry.
002151  3  85 rr        	sta z80_l
002153  3  90 02        	bcc :+
002155  3  E6 rr        	inc z80_h
002157  3               :
002157  3  4C 3F 21     	jmp kspr2
00215A  3               kspr1:
00215A  3  A0 00        	ldy #0 				; fetch sprite type.
00215C  3  B1 rr        	lda (z80_ix),y
00215E  3  C9 FF        	cmp #255 			; is it enabled yet?
002160  3  D0 08        	bne kspr4 			; yes, try another slot.
002162  3               
002162  3  A0 05        	ldy #5 				; next type.
002164  3  B1 rr        	lda (z80_ix),y
002166  3  C9 FF        	cmp #255 			; is it enabled yet?
002168  3  F0 0F        	beq kspr3 			; no, process this one.
00216A  3               kspr4:
00216A  3  18           	clc 				; next sprite.
00216B  3  A5 rr        	lda z80_x
00216D  3  69 11        	adc #TABSIZ		 	; distance to next odd/even entry.
00216F  3  85 rr        	sta z80_x
002171  3  90 02        	bcc :+
002173  3  E6 rr        	inc z80_i
002175  3               :
002175  3  CA           	dex	 			; repeat for remaining sprites.
002176  3  D0 E2        	bne kspr1
002178  3  60           	rts  				; no more room in table.
002179  3               kspr3:
002179  3  20 80 21     	jsr cpsp 			; copy sprite to table.
00217C  3  CA           	dex	 			; one less space in the table.
00217D  3  D0 C0        	bne kspr2
00217F  3  60           	rts
002180  3               
002180  3               ;----------------------------------------------
002180  3               ; Copy sprite from list to table.
002180  3               ;
002180  3               ; global:	hl,ix
002180  3               ; local:	y
002180  3               ; calls:	evnt09
002180  3               ;----------------------------------------------
002180  3               
002180  3               cpsp:
002180  3  A0 00        	ldy #0					; fetch byte from table.
002182  3  B1 rr        	lda (z80_hl),y
002184  3               	; y=var_Type
002184  3  91 rr        	sta (z80_ix),y			; set up type.
002186  3  A0 05        	ldy #var_newType
002188  3  91 rr        	sta (z80_ix),y 			; set up type.
00218A  3               
00218A  3  E6 rr        	inc z80_l 				; move to next byte.
00218C  3  D0 02        	bne :+
00218E  3  E6 rr        	inc z80_h
002190  3               :
002190  3  A0 00        	ldy #0 					; fetch byte from table.
002192  3  B1 rr        	lda (z80_hl),y
002194  3  A0 06        	ldy #var_newImage
002196  3  91 rr        	sta (z80_ix),y			; set up image.
002198  3               
002198  3  E6 rr        	inc z80_l 				; move to next byte.
00219A  3  D0 02        	bne :+
00219C  3  E6 rr        	inc z80_h
00219E  3               :
00219E  3  A0 00        	ldy #0
0021A0  3  B1 rr        	lda (z80_hl),y 			; fetch byte from table.
0021A2  3  A0 08        	ldy #var_newY
0021A4  3  91 rr        	sta (z80_ix),y 			; set up coordinate.
0021A6  3               
0021A6  3  A9 C8        	lda #200 				; set initial coordinate off screen.
0021A8  3  A0 03        	ldy #var_Y
0021AA  3  91 rr        	sta (z80_ix),y
0021AC  3               
0021AC  3  E6 rr        	inc z80_l 				; move to next byte.
0021AE  3  D0 02        	bne :+
0021B0  3  E6 rr        	inc z80_h
0021B2  3               :
0021B2  3  A0 00        	ldy #0 					; fetch byte from table.
0021B4  3  B1 rr        	lda (z80_hl),y
0021B6  3  A0 09        	ldy #var_newX
0021B8  3  91 rr        	sta (z80_ix),y 			; set up coordinate.
0021BA  3               
0021BA  3  E6 rr        	inc z80_l 				; move to next byte.
0021BC  3  D0 02        	bne :+
0021BE  3  E6 rr        	inc z80_h
0021C0  3               :
0021C0  3  A9 00        	lda #0					; zeroes in accumulator.
0021C2  3  A0 07        	ldy #var_newFrame 		; reset frame number.
0021C4  3  91 rr        	sta (z80_ix),y
0021C6  3  A0 0A        	ldy #var_Direction 		; reset direction.
0021C8  3  91 rr        	sta (z80_ix),y
0021CA  3  A0 0D        	ldy #var_jumpLo			; reset jump pointer low.
0021CC  3  91 rr        	sta (z80_ix),y
0021CE  3  A0 0E        	ldy #var_jumpHi	 		; reset jump pointer high.
0021D0  3  91 rr        	sta (z80_ix),y
0021D2  3               
0021D2  3  A9 FF        	lda #255 				; reset data pointer to auto-restore.
0021D4  3  A0 10        	ldy #var_dataHi
0021D6  3  91 rr        	sta (z80_ix),y
0021D8  3               evis0:
0021D8  3  A5 rr        	lda z80_i
0021DA  3  48           	pha
0021DB  3  A5 rr        	lda z80_x
0021DD  3  48           	pha
0021DE  3  A5 rr        	lda z80_h
0021E0  3  48           	pha
0021E1  3  A5 rr        	lda z80_l
0021E3  3  48           	pha
0021E4  3               
0021E4  3  20 A9 47     	jsr evnt09 				; perform event.
0021E7  3               
0021E7  3  68           	pla
0021E8  3  85 rr        	sta z80_l
0021EA  3  68           	pla
0021EB  3  85 rr        	sta z80_h
0021ED  3  68           	pla
0021EE  3  85 rr        	sta z80_x
0021F0  3  68           	pla
0021F1  3  85 rr        	sta z80_i
0021F3  3               
0021F3  3  18           	clc
0021F4  3  A5 rr        	lda z80_x 			; distance to next odd/even entry.
0021F6  3  69 11        	adc #TABSIZ		 	; next sprite.
0021F8  3  85 rr        	sta z80_x
0021FA  3  90 02        	bcc :+
0021FC  3  E6 rr        	inc z80_i
0021FE  3               :
0021FE  3  60           	rts
0021FF  3               
0021FF  3               
0021FF  3               ;-------------------------------------
0021FF  3               ; Clear the play area window.
0021FF  3               ;-------------------------------------
0021FF  3               
0021FF  3               clw:
0021FF  3  AD 33 0E     	lda wintop			; get coordinates of window.
002202  3  85 rr        	sta dispy			; put into dispx for calculation.
002204  3  AD 34 0E     	lda winlft
002207  3  85 rr        	sta dispx
002209  3               
002209  3  AD 35 0E     	lda winhgt			; height of window.
00220C  3  8D A6 16     	sta rrow			; copy to b register.
00220F  3               clw3:
00220F  3  AD 36 0E     	lda winwid 			; width of window.
002212  3  8D A5 16     	sta rcol
002215  3               clw2:
002215  3  20 BA 14     	jsr gprad 			; get print address.
002218  3  A9 00        	lda #0				; zero byte to write.
00221A  3  A2 07        	ldx #7				; pixel height of each cell.
00221C  3               clw1:
00221C  3  BC 4D 15     	ldy scrtab,x
00221F  3  91 rr        	sta (scraddr),y 			; copy to screen.
002221  3  CA           	dex				; next screen row down.
002222  3  10 F8        	bpl clw1
002224  3               
002224  3  E6 rr        	inc dispx			; next column.
002226  3  CE A5 16     	dec rcol			; one less to do.
002229  3  D0 EA        	bne clw2			; repeat for remaining columns.
00222B  3               
00222B  3  AD 34 0E     	lda winlft			; get left edge.
00222E  3  85 rr        	sta dispx 			; reset x.
002230  3  E6 rr        	inc dispy 			; next line down.
002232  3               
002232  3  CE A6 16     	dec rrow
002235  3  D0 D8        	bne clw3			; repeat down the screen.
002237  3               
002237  3  AD 33 0E     	lda wintop			; get coordinates of window.
00223A  3  85 rr        	sta chary			; put into display position.
00223C  3  AD 34 0E     	lda winlft
00223F  3  85 rr        	sta charx
002241  3  60           	rts
002242  3               
002242  3               
002242  3               ;----------------------------------------------------------
002242  3               ; Effects code.
002242  3               ; Ticker routine is called 25 times per second.
002242  3               ;
002242  3               ; HL = txtscr = left text screen address
002242  3               ; DE = txtscr+txtwid-1 = right text screen address
002242  3               ; BC = txtpos = text scroller position
002242  3               ;
002242  3               ;----------------------------------------------------------
002242  3               
002242  3               .if sflag
002242  3               scrly:
002242  3               	rts
002242  3               	.word txtscr         	; get left screen address.
002242  3               	sta scr_l
002242  3               	lda txtscr+1
002242  3               	sta scr_l+1
002242  3               	sta scr_r+1
002242  3               	
002242  3               	stx xtmp
002242  3               
002242  3               	clc         		; get right screen address.
002242  3               	lda scr_l
002242  3               	adc txtwid
002242  3               	sta scr_r
002242  3               	dec scr_r
002242  3               scrly1:
002242  3               	ldy txtwid		; set txtwide
002242  3               	dey
002242  3               	clc
002242  3               scrly0:
002242  3               	lda (scr_l),y		; scroll 1 line
002242  3               	rol a
002242  3               	sta (scr_l),y
002242  3               	dey
002242  3               	bpl scrly0
002242  3               
002242  3               	clc			; point to next line
002242  3               	lda scr_l
002242  3               	adc #32
002242  3               	sta scr_l
002242  3               	bcc scrly1		; repeat 8 times
002242  3               
002242  3               	lda txtpos 		; get text pointer.
002242  3               	sta scr_txt
002242  3               	lda txtpos+1
002242  3               	sta scr_txt+1
002242  3               
002242  3               	ldy #0
002242  3               	lda (scr_txt),y 		; find character we're displaying.
002242  3               	and #127 		; remove end marker bit if applicable.
002242  3               	cmp #13			; is it newline?
002242  3               	bne scrly5 		; no, it's okay.
002242  3               	lda #32			; convert to a space instead.
002242  3               scrly5:
002242  3               	sta fntaddr		; calculate char address
002242  3               	lda #0
002242  3               	sta fntaddr+1
002242  3               	asl fntaddr  		; multiply char by 8.
002242  3               	rol fntaddr+1
002242  3               	asl fntaddr
002242  3               	rol fntaddr+1
002242  3               	asl fntaddr
002242  3               	rol fntaddr+1
002242  3               	lda fntaddr
002242  3               	clc
002242  3               	adc FontPtr
002242  3               	sta scrly3+1		; that's the low byte.
002242  3               	lda fntaddr+1
002242  3               	adc FontPtr+1
002242  3               	sta scrly3+2		; add displacement.
002242  3               
002242  3               	ldx #0
002242  3               scrly3:
002242  3               	lda $3333,x		; get image of char line.
002242  3               	and txtbit
002242  3               	beq scrly2		; don't plot pixel
002242  3               	ldy scrline,x
002242  3               	lda (scr_r),y
002242  3               	clc
002242  3               	ora #1
002242  3               	sta (scr_r),y		; plot pixel
002242  3               scrly2:
002242  3               	inx			; next line of char.
002242  3               	cpx #8
002242  3               	bne scrly3
002242  3               
002242  3               	lsr txtbit		; bit of text to display.
002242  3               	bcs :+
002242  3               	rts
002242  3               :
002242  3               	ldy #0
002242  3               	lda (scr_txt),y 	; what was the character?
002242  3               	asl a	  		; end of message?
002242  3               	bcs scrly4
002242  3               	inc txtpos
002242  3               	bne :+
002242  3               	inc txtpos+1
002242  3               :
002242  3               	jmp scrly6 		; not yet - continue.
002242  3               scrly4:
002242  3               	lda txtini 		; start of scrolling message.
002242  3               	sta txtpos
002242  3               	lda txtini+1
002242  3               	sta txtpos+1
002242  3               scrly6:
002242  3               	lda #128
002242  3               	sta txtbit
002242  3               	ldx xtmp
002242  3               	rts
002242  3               
002242  3               scrline:	.byte $00,$20,$40,$60,$80,$a0,$c0,$e0
002242  3               
002242  3               ;-------------------------------------------------------
002242  3               ; Entry TICKER command
002242  3               ;
002242  3               ; Entry:
002242  3               ;  z80_b = message nr
002242  3               ;  z80_c = width
002242  3               ;-------------------------------------------------------
002242  3               
002242  3               iscrly:
002242  3               	jsr prescr 		; set up display position.
002242  3               
002242  3               	lda #<msgdat 		; text messages.
002242  3               	sta z80_l
002242  3               	lda #>msgdat
002242  3               	sta z80_h
002242  3               
002242  3               	lda z80_c 		; width.
002242  3               	sec
002242  3               	sbc #1			; subtract one.
002242  3               	cmp #32 		; is it between 1 and 32?
002242  3               	bcc :+
002242  3               	lda #$60
002242  3               	jmp iscrl0		; no, disable messages.
002242  3               :
002242  3               	ldx z80_b		; message number.
002242  3               	jsr getwrd 		; find message start.
002242  3               
002242  3               	lda z80_l		; set initial text position.
002242  3               	sta txtini
002242  3               	lda z80_h
002242  3               	sta txtini+1
002242  3               
002242  3               	lda #$ad		; code for lda adrr
002242  3               iscrl0:
002242  3               	sta scrly		; enable/disable scrolling routine.
002242  3               
002242  3               	jsr prescr 		; set up display position.
002242  3               	jsr gprad 		; get print address.
002242  3               
002242  3               	lda scraddr 		; set text screen address.
002242  3               	sta txtscr
002242  3               	lda scraddr+1
002242  3               	sta txtscr+1
002242  3               
002242  3               	lda z80_c		; width.
002242  3               	sta txtwid		; set width in working storage.
002242  3               
002242  3               	lda #128 		; start with leftmost bit.
002242  3               	sta txtbit
002242  3               
002242  3               	jmp scrly4
002242  3               .endif
002242  3               
002242  3               ;------------------------------------------------------------------
002242  3               ; Sprite table 
002242  3               ;------------------------------------------------------------------
002242  3               
002242  3               
002242  3               ; ix+0  = type.
002242  3               ; ix+1  = sprite image number.
002242  3               ; ix+2  = frame.
002242  3               ; ix+3  = y coord.
002242  3               ; ix+4  = x coord.
002242  3               
002242  3               ; ix+5  = new type.
002242  3               ; ix+6  = new image number.
002242  3               ; ix+7  = new frame.
002242  3               ; ix+8  = new y coord.
002242  3               ; ix+9  = new x coord.
002242  3               
002242  3               ; ix+10 = direction.
002242  3               ; ix+11 = parameter 1.
002242  3               ; ix+12 = parameter 2.
002242  3               ; ix+13 = jump pointer low.
002242  3               ; ix+14 = jump pointer high.
002242  3               ; ix+15 = data pointer low.
002242  3               ; ix+16 = data pointer high.
002242  3               
002242  3               ; block NUMSPR * TABSIZ,255
002242  3               
002242  3  FF FF FF FF  sprtab:	.res NUMSPR*TABSIZ,255
002246  3  FF FF FF FF  
00224A  3  FF FF FF FF  
00230E  3  FF FF FF FF  ssprit:	.byte 255,255,255,255,255,255,255,0,192,120,0,0,0,255,255,255,255
002312  3  FF FF FF 00  
002316  3  C0 78 00 00  
00231F  3  07           roomtb:	.byte 7                      ; start room map offset.
002320  3               
002320  3               ; User routine.  Put your own code in here to be called with USER instruction.
002320  3               ; if USER has an argument it will be passed in the accumulator.
002320  3               
002320  3               user:
002320  3  60           	rts
002321  3               
002321  3               ; Everything below here will be generated by the editors.
002321  3               
002321  3               WINDOWTOP = 0
002321  3               WINDOWLFT = 0
002321  3               WINDOWHGT = 23
002321  3               WINDOWWID = 26 ;a
002321  3               MAPWID = 11
002321  3  FF FF FF FF          .byte 255,255,255,255,255,255,255,255,255,255,255
002325  3  FF FF FF FF  
002329  3  FF FF FF     
00232C  3               mapdat:
00232C  3  FF FF FF FF          .byte 255,255,255,255,0,255,255,255,255,255,255
002330  3  00 FF FF FF  
002334  3  FF FF FF     
002337  3  FF FF FF FF          .byte 255,255,255,255,255,255,255,255,255,255,255
00233B  3  FF FF FF FF  
00233F  3  FF FF FF     
002342  3  04           stmap:  .byte 4
002343  3               
002343  3               evnt00:
002343  3  A9 04                lda #4
002345  3  C5 rr                cmp varg
002347  3  F0 03                beq *+5
002349  3  4C 68 23             jmp a00080
00234C  3  A9 00                lda #0
00234E  3  A0 06                ldy #6
002350  3  91 rr                sta (z80_ix),y
002352  3  A9 00                lda #0
002354  3  A0 07                ldy #7
002356  3  91 rr                sta (z80_ix),y
002358  3  A9 B0                lda #176
00235A  3  A0 08                ldy #8
00235C  3  91 rr                sta (z80_ix),y
00235E  3  A9 00                lda #0
002360  3  A0 09                ldy #9
002362  3  91 rr                sta (z80_ix),y
002364  3  A9 00                lda #0
002366  3  85 rr                sta varg
002368  3  A9 03        a00080: lda #3
00236A  3  C5 rr                cmp varg
00236C  3  F0 03                beq *+5
00236E  3  4C 7D 23             jmp a00123
002371  3  A9 13                lda #19
002373  3  A0 06                ldy #6
002375  3  91 rr                sta (z80_ix),y
002377  3  A9 01                lda #1
002379  3  A0 07                ldy #7
00237B  3  91 rr                sta (z80_ix),y
00237D  3  A0 08        a00123: ldy #8
00237F  3  B1 rr                lda (z80_ix),y
002381  3  85 rr                sta vara
002383  3  A0 09                ldy #9
002385  3  B1 rr                lda (z80_ix),y
002387  3  85 rr                sta varb
002389  3  A9 01                lda #1
00238B  3  C5 rr                cmp varl
00238D  3  F0 03                beq *+5
00238F  3  4C C1 23             jmp a00261
002392  3  A9 08                lda #8
002394  3  85 rr                sta z80_c
002396  3  A9 09                lda #9
002398  3  85 rr                sta z80_b
00239A  3  20 B8 12             jsr spawn
00239D  3  AD 64 13             lda spptr
0023A0  3  85 rr                sta z80_x
0023A2  3  AD 65 13             lda spptr+1
0023A5  3  85 rr                sta z80_i
0023A7  3  A9 28                lda #40
0023A9  3  A0 08                ldy #8
0023AB  3  91 rr                sta (z80_ix),y
0023AD  3  A9 60                lda #96
0023AF  3  A0 09                ldy #9
0023B1  3  91 rr                sta (z80_ix),y
0023B3  3  A9 63                lda #99
0023B5  3  85 rr                sta varl
0023B7  3  AD 12 1C             lda ogptr
0023BA  3  85 rr                sta z80_x
0023BC  3  AD 13 1C             lda ogptr+1
0023BF  3  85 rr                sta z80_i
0023C1  3  A5 rr        a00261: lda varg
0023C3  3  C9 02                cmp #2
0023C5  3  90 03                bcc *+5
0023C7  3  4C 49 25             jmp a01082
0023CA  3  20 5F 12             jsr skobj
0023CD  3  85 rr                sta varobj
0023CF  3  A9 08                lda #8
0023D1  3  C5 rr                cmp varobj
0023D3  3  F0 03                beq *+5
0023D5  3  4C 18 24             jmp a00437
0023D8  3  A5 rr                lda varobj
0023DA  3  20 DE 11             jsr getob
0023DD  3  A9 03                lda #3
0023DF  3  85 rr                sta z80_c
0023E1  3  A5 rr                lda vark
0023E3  3  18                   clc
0023E4  3  65 rr                adc z80_c
0023E6  3  85 rr                sta vark
0023E8  3  A9 07                lda #7
0023EA  3  85 rr                sta chary
0023EC  3  A9 1D                lda #29
0023EE  3  85 rr                sta charx
0023F0  3  A9 18                lda #24
0023F2  3  20 D3 19             jsr dmsg
0023F5  3  A9 07                lda #7
0023F7  3  85 rr                sta chary
0023F9  3  A9 1D                lda #29
0023FB  3  85 rr                sta charx
0023FD  3                       ; COLOUR command
0023FD  3  A5 rr                lda vark
0023FF  3  20 DB 1E             jsr disply
002402  3  A9 32                lda #50
002404  3  0A                   asl a
002405  3  8D CA 0E             sta sndtyp
002408  3  A9 0F                lda #15
00240A  3  C5 rr                cmp vark
00240C  3  90 03                bcc *+5
00240E  3  4C 15 24             jmp a00432
002411  3  A9 0F                lda #15
002413  3  85 rr                sta vark
002415  3  4C 3E 24     a00432: jmp a00525
002418  3  A9 58        a00437: lda #88
00241A  3  A0 08                ldy #8
00241C  3  91 rr                sta (z80_ix),y
00241E  3  A9 60                lda #96
002420  3  A0 09                ldy #9
002422  3  91 rr                sta (z80_ix),y
002424  3  20 5F 12             jsr skobj
002427  3  85 rr                sta varobj
002429  3  A9 08                lda #8
00242B  3  C5 rr                cmp varobj
00242D  3  F0 03                beq *+5
00242F  3  4C 32 24             jmp a00497
002432  3                       ; SPRITEINK command
002432  3  A5 rr        a00497: lda vara
002434  3  A0 08                ldy #8
002436  3  91 rr                sta (z80_ix),y
002438  3  A5 rr                lda varb
00243A  3  A0 09                ldy #9
00243C  3  91 rr                sta (z80_ix),y
00243E  3  A9 01        a00525: lda #1
002440  3  85 rr                sta z80_b
002442  3  20 40 1E             jsr sktyp
002445  3  B0 03                bcs :+
002447  3  4C 49 25             jmp a01082
00244A  3               :
00244A  3  AD 81 1E             lda skptr
00244D  3  85 rr                sta z80_x
00244F  3  AD 82 1E             lda skptr+1
002452  3  85 rr                sta z80_i
002454  3  A0 08                ldy #8
002456  3  B1 rr                lda (z80_ix),y
002458  3  85 rr                sta varo
00245A  3  A0 09                ldy #9
00245C  3  B1 rr                lda (z80_ix),y
00245E  3  85 rr                sta varp
002460  3  AD 12 1C             lda ogptr
002463  3  85 rr                sta z80_x
002465  3  AD 13 1C             lda ogptr+1
002468  3  85 rr                sta z80_i
00246A  3  A5 rr                lda varo
00246C  3  85 rr                sta varq
00246E  3  A0 08                ldy #8
002470  3  B1 rr                lda (z80_ix),y
002472  3  C5 rr                cmp varq
002474  3  90 03                bcc *+5
002476  3  4C 89 24             jmp a00677
002479  3  A0 08                ldy #8
00247B  3  B1 rr                lda (z80_ix),y
00247D  3  85 rr                sta z80_c
00247F  3  A5 rr                lda varq
002481  3  38                   sec
002482  3  E5 rr                sbc z80_c
002484  3  85 rr                sta varq
002486  3  4C 9A 24             jmp a00715
002489  3  A0 08        a00677: ldy #8
00248B  3  B1 rr                lda (z80_ix),y
00248D  3  85 rr                sta varq
00248F  3  A5 rr                lda varo
002491  3  85 rr                sta z80_c
002493  3  A5 rr                lda varq
002495  3  38                   sec
002496  3  E5 rr                sbc z80_c
002498  3  85 rr                sta varq
00249A  3  A5 rr        a00715: lda varq
00249C  3  C9 0C                cmp #12
00249E  3  90 03                bcc *+5
0024A0  3  4C D3 24             jmp a00837
0024A3  3  A5 rr                lda varp
0024A5  3  85 rr                sta varq
0024A7  3  A0 09                ldy #9
0024A9  3  B1 rr                lda (z80_ix),y
0024AB  3  C5 rr                cmp varq
0024AD  3  90 03                bcc *+5
0024AF  3  4C C2 24             jmp a00798
0024B2  3  A0 09                ldy #9
0024B4  3  B1 rr                lda (z80_ix),y
0024B6  3  85 rr                sta z80_c
0024B8  3  A5 rr                lda varq
0024BA  3  38                   sec
0024BB  3  E5 rr                sbc z80_c
0024BD  3  85 rr                sta varq
0024BF  3  4C D3 24             jmp a00837
0024C2  3  A0 09        a00798: ldy #9
0024C4  3  B1 rr                lda (z80_ix),y
0024C6  3  85 rr                sta varq
0024C8  3  A5 rr                lda varp
0024CA  3  85 rr                sta z80_c
0024CC  3  A5 rr                lda varq
0024CE  3  38                   sec
0024CF  3  E5 rr                sbc z80_c
0024D1  3  85 rr                sta varq
0024D3  3  A5 rr        a00837: lda varq
0024D5  3  C9 0C                cmp #12
0024D7  3  90 03                bcc *+5
0024D9  3  4C 49 25             jmp a01082
0024DC  3  A9 13                lda #19
0024DE  3  A0 06                ldy #6
0024E0  3  91 rr                sta (z80_ix),y
0024E2  3  A9 00                lda #0
0024E4  3  C5 rr                cmp varg
0024E6  3  F0 03                beq *+5
0024E8  3  4C EF 24             jmp a00892
0024EB  3  A9 03                lda #3
0024ED  3  85 rr                sta varg
0024EF  3  A9 01        a00892: lda #1
0024F1  3  C5 rr                cmp varg
0024F3  3  F0 03                beq *+5
0024F5  3  4C FC 24             jmp a00917
0024F8  3  A9 06                lda #6
0024FA  3  85 rr                sta varg
0024FC  3  A9 06        a00917: lda #6
0024FE  3  85 rr                sta z80_c
002500  3  A9 00                lda #0
002502  3  85 rr                sta z80_b
002504  3  20 B8 12             jsr spawn
002507  3  AD 64 13             lda spptr
00250A  3  85 rr                sta z80_x
00250C  3  AD 65 13             lda spptr+1
00250F  3  85 rr                sta z80_i
002511  3  A9 C8                lda #200
002513  3  A0 0C                ldy #12
002515  3  91 rr                sta (z80_ix),y
002517  3  A9 00                lda #0
002519  3  A0 06                ldy #6
00251B  3  91 rr                sta (z80_ix),y
00251D  3  AD 12 1C             lda ogptr
002520  3  85 rr                sta z80_x
002522  3  AD 13 1C             lda ogptr+1
002525  3  85 rr                sta z80_i
002527  3  A9 13                lda #19
002529  3  A0 06                ldy #6
00252B  3  91 rr                sta (z80_ix),y
00252D  3  A9 01                lda #1
00252F  3  A0 07                ldy #7
002531  3  91 rr                sta (z80_ix),y
002533  3                       ; SPRITEINK command
002533  3  A9 00                lda #0
002535  3  A0 08                ldy #8
002537  3  91 rr                sta (z80_ix),y
002539  3  A9 F0                lda #240
00253B  3  A0 09                ldy #9
00253D  3  91 rr                sta (z80_ix),y
00253F  3  A9 03                lda #3
002541  3  C5 rr                cmp varg
002543  3  F0 03                beq *+5
002545  3  4C 49 25             jmp a01082
002548  3  60                   rts
002549  3  A5 rr        a01082: lda varh
00254B  3  85 rr                sta vars
00254D  3  A5 rr                lda varh
00254F  3  85 rr                sta vart
002551  3  A5 rr                lda vars
002553  3  4A                   lsr a
002554  3  4A                   lsr a
002555  3  4A                   lsr a
002556  3  4A                   lsr a
002557  3  85 rr                sta vars
002559  3  A5 rr                lda vars
00255B  3  85 rr                sta varq
00255D  3  A5 rr                lda varq
00255F  3  0A                   asl a
002560  3  0A                   asl a
002561  3  0A                   asl a
002562  3  0A                   asl a
002563  3  85 rr                sta varq
002565  3  A5 rr                lda varq
002567  3  85 rr                sta z80_c
002569  3  A5 rr                lda vart
00256B  3  38                   sec
00256C  3  E5 rr                sbc z80_c
00256E  3  85 rr                sta vart
002570  3  A9 03                lda #3
002572  3  C5 rr                cmp scno
002574  3  F0 03                beq *+5
002576  3  4C 7D 25             jmp a01203
002579  3  A9 63                lda #99
00257B  3  85 rr                sta vart
00257D  3  A9 01        a01203: lda #1
00257F  3  C5 rr                cmp varg
002581  3  90 03                bcc *+5
002583  3  4C 90 25             jmp a01239
002586  3  A5 rr                lda varg
002588  3  C9 05                cmp #5
00258A  3  90 03                bcc *+5
00258C  3  4C 90 25             jmp a01239
00258F  3  60                   rts
002590  3  A9 FF        a01239: lda #255
002592  3  85 rr                sta varobj
002594  3  A9 00                lda #0
002596  3  C5 rr                cmp varg
002598  3  F0 03                beq *+5
00259A  3  4C A8 25             jmp a01288
00259D  3  20 5F 12             jsr skobj
0025A0  3  85 rr                sta varobj
0025A2  3  A9 FF                lda #255
0025A4  3  A0 0A                ldy #10
0025A6  3  91 rr                sta (z80_ix),y
0025A8  3  A9 18        a01288: lda #24
0025AA  3  A0 09                ldy #9
0025AC  3  91 rr                sta (z80_ix),y
0025AE  3  A9 18                lda #24
0025B0  3  A0 08                ldy #8
0025B2  3  91 rr                sta (z80_ix),y
0025B4  3  A9 01                lda #1
0025B6  3  C5 rr                cmp scno
0025B8  3  90 03                bcc *+5
0025BA  3  4C C3 25             jmp a01345
0025BD  3  A9 30                lda #48
0025BF  3  A0 08                ldy #8
0025C1  3  91 rr                sta (z80_ix),y
0025C3  3               a01345: ; SPRITEINK command
0025C3  3  A9 05                lda #5
0025C5  3  C5 rr                cmp varg
0025C7  3  F0 03                beq *+5
0025C9  3  4C E2 25             jmp a01414
0025CC  3  A9 00                lda #0
0025CE  3  20 DE 11             jsr getob
0025D1  3  A0 09                ldy #9
0025D3  3  B1 rr                lda (z80_ix),y
0025D5  3  85 rr                sta dispx
0025D7  3  A0 08                ldy #8
0025D9  3  B1 rr                lda (z80_ix),y
0025DB  3  85 rr                sta dispy
0025DD  3  A9 00                lda #0
0025DF  3  20 3E 12             jsr drpob
0025E2  3  A9 06        a01414: lda #6
0025E4  3  C5 rr                cmp varg
0025E6  3  F0 03                beq *+5
0025E8  3  4C 07 26             jmp a01489
0025EB  3  A9 00                lda #0
0025ED  3  A0 0A                ldy #10
0025EF  3  D1 rr                cmp (z80_ix),y
0025F1  3  F0 03                beq *+5
0025F3  3  4C 07 26             jmp a01489
0025F6  3  A0 09                ldy #9
0025F8  3  B1 rr                lda (z80_ix),y
0025FA  3  85 rr                sta dispx
0025FC  3  A0 08                ldy #8
0025FE  3  B1 rr                lda (z80_ix),y
002600  3  85 rr                sta dispy
002602  3  A9 00                lda #0
002604  3  20 3E 12             jsr drpob
002607  3  A9 00        a01489: lda #0
002609  3  85 rr                sta vard
00260B  3  A9 00                lda #0
00260D  3  C5 rr                cmp varobj
00260F  3  F0 03                beq *+5
002611  3  4C 28 26             jmp a01558
002614  3  A0 08                ldy #8
002616  3  B1 rr                lda (z80_ix),y
002618  3  85 rr                sta varo
00261A  3  A0 09                ldy #9
00261C  3  B1 rr                lda (z80_ix),y
00261E  3  85 rr                sta varp
002620  3  A9 02                lda #2
002622  3  85 rr                sta varg
002624  3  A9 01                lda #1
002626  3  85 rr                sta vard
002628  3  A9 A8        a01558: lda #168
00262A  3  A0 09                ldy #9
00262C  3  91 rr                sta (z80_ix),y
00262E  3  A9 01                lda #1
002630  3  C5 rr                cmp varobj
002632  3  F0 03                beq *+5
002634  3  4C 4B 26             jmp a01632
002637  3  A0 08                ldy #8
002639  3  B1 rr                lda (z80_ix),y
00263B  3  85 rr                sta varo
00263D  3  A0 09                ldy #9
00263F  3  B1 rr                lda (z80_ix),y
002641  3  85 rr                sta varp
002643  3  A9 02                lda #2
002645  3  85 rr                sta varg
002647  3  A9 01                lda #1
002649  3  85 rr                sta vard
00264B  3               a01632: ; SPRITEINK command
00264B  3  A9 05                lda #5
00264D  3  C5 rr                cmp varg
00264F  3  F0 03                beq *+5
002651  3  4C 6A 26             jmp a01700
002654  3  A9 01                lda #1
002656  3  20 DE 11             jsr getob
002659  3  A0 09                ldy #9
00265B  3  B1 rr                lda (z80_ix),y
00265D  3  85 rr                sta dispx
00265F  3  A0 08                ldy #8
002661  3  B1 rr                lda (z80_ix),y
002663  3  85 rr                sta dispy
002665  3  A9 01                lda #1
002667  3  20 3E 12             jsr drpob
00266A  3  A9 06        a01700: lda #6
00266C  3  C5 rr                cmp varg
00266E  3  F0 03                beq *+5
002670  3  4C 8F 26             jmp a01776
002673  3  A9 01                lda #1
002675  3  A0 0A                ldy #10
002677  3  D1 rr                cmp (z80_ix),y
002679  3  F0 03                beq *+5
00267B  3  4C 8F 26             jmp a01776
00267E  3  A0 09                ldy #9
002680  3  B1 rr                lda (z80_ix),y
002682  3  85 rr                sta dispx
002684  3  A0 08                ldy #8
002686  3  B1 rr                lda (z80_ix),y
002688  3  85 rr                sta dispy
00268A  3  A9 01                lda #1
00268C  3  20 3E 12             jsr drpob
00268F  3  A9 98        a01776: lda #152
002691  3  A0 08                ldy #8
002693  3  91 rr                sta (z80_ix),y
002695  3  A9 01                lda #1
002697  3  C5 rr                cmp scno
002699  3  90 03                bcc *+5
00269B  3  4C A4 26             jmp a01820
00269E  3  A9 80                lda #128
0026A0  3  A0 08                ldy #8
0026A2  3  91 rr                sta (z80_ix),y
0026A4  3  A9 02        a01820: lda #2
0026A6  3  C5 rr                cmp varobj
0026A8  3  F0 03                beq *+5
0026AA  3  4C BD 26             jmp a01873
0026AD  3  A0 08                ldy #8
0026AF  3  B1 rr                lda (z80_ix),y
0026B1  3  85 rr                sta varo
0026B3  3  A0 09                ldy #9
0026B5  3  B1 rr                lda (z80_ix),y
0026B7  3  85 rr                sta varp
0026B9  3  A9 02                lda #2
0026BB  3  85 rr                sta varg
0026BD  3               a01873: ; SPRITEINK command
0026BD  3  A9 05                lda #5
0026BF  3  C5 rr                cmp varg
0026C1  3  F0 03                beq *+5
0026C3  3  4C DC 26             jmp a01941
0026C6  3  A9 02                lda #2
0026C8  3  20 DE 11             jsr getob
0026CB  3  A0 09                ldy #9
0026CD  3  B1 rr                lda (z80_ix),y
0026CF  3  85 rr                sta dispx
0026D1  3  A0 08                ldy #8
0026D3  3  B1 rr                lda (z80_ix),y
0026D5  3  85 rr                sta dispy
0026D7  3  A9 02                lda #2
0026D9  3  20 3E 12             jsr drpob
0026DC  3  A9 06        a01941: lda #6
0026DE  3  C5 rr                cmp varg
0026E0  3  F0 03                beq *+5
0026E2  3  4C 01 27             jmp a02016
0026E5  3  A9 02                lda #2
0026E7  3  A0 0A                ldy #10
0026E9  3  D1 rr                cmp (z80_ix),y
0026EB  3  F0 03                beq *+5
0026ED  3  4C 01 27             jmp a02016
0026F0  3  A0 09                ldy #9
0026F2  3  B1 rr                lda (z80_ix),y
0026F4  3  85 rr                sta dispx
0026F6  3  A0 08                ldy #8
0026F8  3  B1 rr                lda (z80_ix),y
0026FA  3  85 rr                sta dispy
0026FC  3  A9 02                lda #2
0026FE  3  20 3E 12             jsr drpob
002701  3  A9 18        a02016: lda #24
002703  3  A0 09                ldy #9
002705  3  91 rr                sta (z80_ix),y
002707  3  A9 03                lda #3
002709  3  C5 rr                cmp varobj
00270B  3  F0 03                beq *+5
00270D  3  4C 20 27             jmp a02082
002710  3  A0 08                ldy #8
002712  3  B1 rr                lda (z80_ix),y
002714  3  85 rr                sta varo
002716  3  A0 09                ldy #9
002718  3  B1 rr                lda (z80_ix),y
00271A  3  85 rr                sta varp
00271C  3  A9 02                lda #2
00271E  3  85 rr                sta varg
002720  3               a02082: ; SPRITEINK command
002720  3  A9 05                lda #5
002722  3  C5 rr                cmp varg
002724  3  F0 03                beq *+5
002726  3  4C 3F 27             jmp a02151
002729  3  A9 03                lda #3
00272B  3  20 DE 11             jsr getob
00272E  3  A0 09                ldy #9
002730  3  B1 rr                lda (z80_ix),y
002732  3  85 rr                sta dispx
002734  3  A0 08                ldy #8
002736  3  B1 rr                lda (z80_ix),y
002738  3  85 rr                sta dispy
00273A  3  A9 03                lda #3
00273C  3  20 3E 12             jsr drpob
00273F  3  A9 06        a02151: lda #6
002741  3  C5 rr                cmp varg
002743  3  F0 03                beq *+5
002745  3  4C 64 27             jmp a02226
002748  3  A9 03                lda #3
00274A  3  A0 0A                ldy #10
00274C  3  D1 rr                cmp (z80_ix),y
00274E  3  F0 03                beq *+5
002750  3  4C 64 27             jmp a02226
002753  3  A0 09                ldy #9
002755  3  B1 rr                lda (z80_ix),y
002757  3  85 rr                sta dispx
002759  3  A0 08                ldy #8
00275B  3  B1 rr                lda (z80_ix),y
00275D  3  85 rr                sta dispy
00275F  3  A9 03                lda #3
002761  3  20 3E 12             jsr drpob
002764  3  A9 60        a02226: lda #96
002766  3  A0 09                ldy #9
002768  3  91 rr                sta (z80_ix),y
00276A  3  A9 10                lda #16
00276C  3  A0 08                ldy #8
00276E  3  91 rr                sta (z80_ix),y
002770  3  A9 04                lda #4
002772  3  C5 rr                cmp varobj
002774  3  F0 03                beq *+5
002776  3  4C 89 27             jmp a02306
002779  3  A0 08                ldy #8
00277B  3  B1 rr                lda (z80_ix),y
00277D  3  85 rr                sta varo
00277F  3  A0 09                ldy #9
002781  3  B1 rr                lda (z80_ix),y
002783  3  85 rr                sta varp
002785  3  A9 02                lda #2
002787  3  85 rr                sta varg
002789  3               a02306: ; SPRITEINK command
002789  3  A9 05                lda #5
00278B  3  C5 rr                cmp varg
00278D  3  F0 03                beq *+5
00278F  3  4C A8 27             jmp a02374
002792  3  A9 04                lda #4
002794  3  20 DE 11             jsr getob
002797  3  A0 09                ldy #9
002799  3  B1 rr                lda (z80_ix),y
00279B  3  85 rr                sta dispx
00279D  3  A0 08                ldy #8
00279F  3  B1 rr                lda (z80_ix),y
0027A1  3  85 rr                sta dispy
0027A3  3  A9 04                lda #4
0027A5  3  20 3E 12             jsr drpob
0027A8  3  A9 06        a02374: lda #6
0027AA  3  C5 rr                cmp varg
0027AC  3  F0 03                beq *+5
0027AE  3  4C CD 27             jmp a02449
0027B1  3  A9 04                lda #4
0027B3  3  A0 0A                ldy #10
0027B5  3  D1 rr                cmp (z80_ix),y
0027B7  3  F0 03                beq *+5
0027B9  3  4C CD 27             jmp a02449
0027BC  3  A0 09                ldy #9
0027BE  3  B1 rr                lda (z80_ix),y
0027C0  3  85 rr                sta dispx
0027C2  3  A0 08                ldy #8
0027C4  3  B1 rr                lda (z80_ix),y
0027C6  3  85 rr                sta dispy
0027C8  3  A9 04                lda #4
0027CA  3  20 3E 12             jsr drpob
0027CD  3  A9 A0        a02449: lda #160
0027CF  3  A0 08                ldy #8
0027D1  3  91 rr                sta (z80_ix),y
0027D3  3  A9 05                lda #5
0027D5  3  C5 rr                cmp varobj
0027D7  3  F0 03                beq *+5
0027D9  3  4C F0 27             jmp a02524
0027DC  3  A0 08                ldy #8
0027DE  3  B1 rr                lda (z80_ix),y
0027E0  3  85 rr                sta varo
0027E2  3  A0 09                ldy #9
0027E4  3  B1 rr                lda (z80_ix),y
0027E6  3  85 rr                sta varp
0027E8  3  A9 02                lda #2
0027EA  3  85 rr                sta varg
0027EC  3  A9 01                lda #1
0027EE  3  85 rr                sta vard
0027F0  3               a02524: ; SPRITEINK command
0027F0  3  A9 05                lda #5
0027F2  3  C5 rr                cmp varg
0027F4  3  F0 03                beq *+5
0027F6  3  4C 0F 28             jmp a02592
0027F9  3  A9 05                lda #5
0027FB  3  20 DE 11             jsr getob
0027FE  3  A0 09                ldy #9
002800  3  B1 rr                lda (z80_ix),y
002802  3  85 rr                sta dispx
002804  3  A0 08                ldy #8
002806  3  B1 rr                lda (z80_ix),y
002808  3  85 rr                sta dispy
00280A  3  A9 05                lda #5
00280C  3  20 3E 12             jsr drpob
00280F  3  A9 06        a02592: lda #6
002811  3  C5 rr                cmp varg
002813  3  F0 03                beq *+5
002815  3  4C 34 28             jmp a02667
002818  3  A9 05                lda #5
00281A  3  A0 0A                ldy #10
00281C  3  D1 rr                cmp (z80_ix),y
00281E  3  F0 03                beq *+5
002820  3  4C 34 28             jmp a02667
002823  3  A0 09                ldy #9
002825  3  B1 rr                lda (z80_ix),y
002827  3  85 rr                sta dispx
002829  3  A0 08                ldy #8
00282B  3  B1 rr                lda (z80_ix),y
00282D  3  85 rr                sta dispy
00282F  3  A9 05                lda #5
002831  3  20 3E 12             jsr drpob
002834  3  A9 58        a02667: lda #88
002836  3  A0 08                ldy #8
002838  3  91 rr                sta (z80_ix),y
00283A  3  A9 30                lda #48
00283C  3  A0 09                ldy #9
00283E  3  91 rr                sta (z80_ix),y
002840  3  A9 01                lda #1
002842  3  C5 rr                cmp scno
002844  3  90 03                bcc *+5
002846  3  4C 4F 28             jmp a02724
002849  3  A9 18                lda #24
00284B  3  A0 09                ldy #9
00284D  3  91 rr                sta (z80_ix),y
00284F  3  A9 06        a02724: lda #6
002851  3  C5 rr                cmp varobj
002853  3  F0 03                beq *+5
002855  3  4C 6C 28             jmp a02785
002858  3  A0 08                ldy #8
00285A  3  B1 rr                lda (z80_ix),y
00285C  3  85 rr                sta varo
00285E  3  A0 09                ldy #9
002860  3  B1 rr                lda (z80_ix),y
002862  3  85 rr                sta varp
002864  3  A9 02                lda #2
002866  3  85 rr                sta varg
002868  3  A9 03                lda #3
00286A  3  85 rr                sta vard
00286C  3  A9 05        a02785: lda #5
00286E  3  C5 rr                cmp varg
002870  3  F0 03                beq *+5
002872  3  4C 8B 28             jmp a02846
002875  3  A9 06                lda #6
002877  3  20 DE 11             jsr getob
00287A  3  A0 09                ldy #9
00287C  3  B1 rr                lda (z80_ix),y
00287E  3  85 rr                sta dispx
002880  3  A0 08                ldy #8
002882  3  B1 rr                lda (z80_ix),y
002884  3  85 rr                sta dispy
002886  3  A9 06                lda #6
002888  3  20 3E 12             jsr drpob
00288B  3  A9 06        a02846: lda #6
00288D  3  C5 rr                cmp varg
00288F  3  F0 03                beq *+5
002891  3  4C B0 28             jmp a02922
002894  3  A9 06                lda #6
002896  3  A0 0A                ldy #10
002898  3  D1 rr                cmp (z80_ix),y
00289A  3  F0 03                beq *+5
00289C  3  4C B0 28             jmp a02922
00289F  3  A0 09                ldy #9
0028A1  3  B1 rr                lda (z80_ix),y
0028A3  3  85 rr                sta dispx
0028A5  3  A0 08                ldy #8
0028A7  3  B1 rr                lda (z80_ix),y
0028A9  3  85 rr                sta dispy
0028AB  3  A9 06                lda #6
0028AD  3  20 3E 12             jsr drpob
0028B0  3               a02922: ; SPRITEINK command
0028B0  3  A9 90                lda #144
0028B2  3  A0 09                ldy #9
0028B4  3  91 rr                sta (z80_ix),y
0028B6  3  A9 01                lda #1
0028B8  3  C5 rr                cmp scno
0028BA  3  90 03                bcc *+5
0028BC  3  4C C5 28             jmp a02973
0028BF  3  A9 A8                lda #168
0028C1  3  A0 09                ldy #9
0028C3  3  91 rr                sta (z80_ix),y
0028C5  3  A9 07        a02973: lda #7
0028C7  3  C5 rr                cmp varobj
0028C9  3  F0 03                beq *+5
0028CB  3  4C E2 28             jmp a03034
0028CE  3  A0 08                ldy #8
0028D0  3  B1 rr                lda (z80_ix),y
0028D2  3  85 rr                sta varo
0028D4  3  A0 09                ldy #9
0028D6  3  B1 rr                lda (z80_ix),y
0028D8  3  85 rr                sta varp
0028DA  3  A9 02                lda #2
0028DC  3  85 rr                sta varg
0028DE  3  A9 02                lda #2
0028E0  3  85 rr                sta vard
0028E2  3  A9 05        a03034: lda #5
0028E4  3  C5 rr                cmp varg
0028E6  3  F0 03                beq *+5
0028E8  3  4C 01 29             jmp a03095
0028EB  3  A9 07                lda #7
0028ED  3  20 DE 11             jsr getob
0028F0  3  A0 09                ldy #9
0028F2  3  B1 rr                lda (z80_ix),y
0028F4  3  85 rr                sta dispx
0028F6  3  A0 08                ldy #8
0028F8  3  B1 rr                lda (z80_ix),y
0028FA  3  85 rr                sta dispy
0028FC  3  A9 07                lda #7
0028FE  3  20 3E 12             jsr drpob
002901  3  A9 06        a03095: lda #6
002903  3  C5 rr                cmp varg
002905  3  F0 03                beq *+5
002907  3  4C 3D 29             jmp a03223
00290A  3  A9 07                lda #7
00290C  3  A0 0A                ldy #10
00290E  3  D1 rr                cmp (z80_ix),y
002910  3  F0 03                beq *+5
002912  3  4C 26 29             jmp a03170
002915  3  A0 09                ldy #9
002917  3  B1 rr                lda (z80_ix),y
002919  3  85 rr                sta dispx
00291B  3  A0 08                ldy #8
00291D  3  B1 rr                lda (z80_ix),y
00291F  3  85 rr                sta dispy
002921  3  A9 07                lda #7
002923  3  20 3E 12             jsr drpob
002926  3  A5 rr        a03170: lda vara
002928  3  A0 08                ldy #8
00292A  3  91 rr                sta (z80_ix),y
00292C  3  A5 rr                lda varb
00292E  3  A0 09                ldy #9
002930  3  91 rr                sta (z80_ix),y
002932  3  A9 FF                lda #255
002934  3  A0 0A                ldy #10
002936  3  91 rr                sta (z80_ix),y
002938  3  A9 03                lda #3
00293A  3  85 rr                sta varg
00293C  3  60                   rts
00293D  3               a03223: ; SPRITEINK command
00293D  3  A9 02                lda #2
00293F  3  C5 rr                cmp varg
002941  3  F0 03                beq *+5
002943  3  4C E3 2A             jmp a04121
002946  3  A5 rr                lda varobj
002948  3  A0 0A                ldy #10
00294A  3  91 rr                sta (z80_ix),y
00294C  3  A5 rr                lda varobj
00294E  3  20 DE 11             jsr getob
002951  3  A5 rr                lda varo
002953  3  A0 08                ldy #8
002955  3  91 rr                sta (z80_ix),y
002957  3  A5 rr                lda varp
002959  3  A0 09                ldy #9
00295B  3  91 rr                sta (z80_ix),y
00295D  3  A5 rr                lda vars
00295F  3  C5 rr                cmp varobj
002961  3  F0 03                beq *+5
002963  3  4C F6 29             jmp a03614
002966  3  A9 50                lda #<80
002968  3  85 rr                sta z80_l
00296A  3  A9 00                lda #>80
00296C  3  85 rr                sta z80_h
00296E  3  20 E1 13             jsr addsc
002971  3  A9 01                lda #1
002973  3  85 rr                sta chary
002975  3  A9 1B                lda #27
002977  3  85 rr                sta charx
002979  3  20 94 13             jsr dscor
00297C  3  A9 04                lda #4
00297E  3  85 rr                sta chary
002980  3  A9 1B                lda #27
002982  3  85 rr                sta charx
002984  3  A9 08                lda #8
002986  3  85 rr                sta z80_c
002988  3  A9 09                lda #9
00298A  3  85 rr                sta z80_b
00298C  3  20 B8 12             jsr spawn
00298F  3  AD 64 13             lda spptr
002992  3  85 rr                sta z80_x
002994  3  AD 65 13             lda spptr+1
002997  3  85 rr                sta z80_i
002999  3  A5 rr                lda vard
00299B  3  A0 0A                ldy #10
00299D  3  91 rr                sta (z80_ix),y
00299F  3  A5 rr                lda vard
0029A1  3  85 rr                sta z80_c
0029A3  3  A0 06                ldy #6
0029A5  3  B1 rr                lda (z80_ix),y
0029A7  3  18                   clc
0029A8  3  65 rr                adc z80_c
0029AA  3  A0 06                ldy #6
0029AC  3  91 rr                sta (z80_ix),y
0029AE  3  A9 32                lda #50
0029B0  3  A0 0C                ldy #12
0029B2  3  91 rr                sta (z80_ix),y
0029B4  3  A9 00                lda #0
0029B6  3  A0 0B                ldy #11
0029B8  3  91 rr                sta (z80_ix),y
0029BA  3  A9 00                lda #0
0029BC  3  C5 rr                cmp scno
0029BE  3  90 03                bcc *+5
0029C0  3  4C C9 29             jmp a03522
0029C3  3  A9 01                lda #1
0029C5  3  A0 0B                ldy #11
0029C7  3  91 rr                sta (z80_ix),y
0029C9  3  A9 02        a03522: lda #2
0029CB  3  C5 rr                cmp scno
0029CD  3  90 03                bcc *+5
0029CF  3  4C D8 29             jmp a03552
0029D2  3  A9 02                lda #2
0029D4  3  A0 0B                ldy #11
0029D6  3  91 rr                sta (z80_ix),y
0029D8  3  A9 00        a03552: lda #0
0029DA  3  85 rr                sta varg
0029DC  3  AD 12 1C             lda ogptr
0029DF  3  85 rr                sta z80_x
0029E1  3  AD 13 1C             lda ogptr+1
0029E4  3  85 rr                sta z80_i
0029E6  3  A5 rr                lda vara
0029E8  3  A0 08                ldy #8
0029EA  3  91 rr                sta (z80_ix),y
0029EC  3  A5 rr                lda varb
0029EE  3  A0 09                ldy #9
0029F0  3  91 rr                sta (z80_ix),y
0029F2  3  60                   rts
0029F3  3  4C E3 2A             jmp a04121
0029F6  3  A5 rr        a03614: lda vart
0029F8  3  C5 rr                cmp varobj
0029FA  3  F0 03                beq *+5
0029FC  3  4C 87 2A             jmp a03916
0029FF  3  A9 01                lda #1
002A01  3  85 rr                sta varq
002A03  3  A9 50                lda #<80
002A05  3  85 rr                sta z80_l
002A07  3  A9 00                lda #>80
002A09  3  85 rr                sta z80_h
002A0B  3  20 E1 13             jsr addsc
002A0E  3                       ; COLOUR command
002A0E  3  A9 01                lda #1
002A10  3  85 rr                sta chary
002A12  3  A9 1B                lda #27
002A14  3  85 rr                sta charx
002A16  3  20 94 13             jsr dscor
002A19  3  A9 04                lda #4
002A1B  3  85 rr                sta chary
002A1D  3  A9 1B                lda #27
002A1F  3  85 rr                sta charx
002A21  3  A9 08                lda #8
002A23  3  85 rr                sta z80_c
002A25  3  A9 09                lda #9
002A27  3  85 rr                sta z80_b
002A29  3  20 B8 12             jsr spawn
002A2C  3  AD 64 13             lda spptr
002A2F  3  85 rr                sta z80_x
002A31  3  AD 65 13             lda spptr+1
002A34  3  85 rr                sta z80_i
002A36  3  A5 rr                lda vard
002A38  3  85 rr                sta z80_c
002A3A  3  A0 06                ldy #6
002A3C  3  B1 rr                lda (z80_ix),y
002A3E  3  18                   clc
002A3F  3  65 rr                adc z80_c
002A41  3  A0 06                ldy #6
002A43  3  91 rr                sta (z80_ix),y
002A45  3  A9 32                lda #50
002A47  3  A0 0C                ldy #12
002A49  3  91 rr                sta (z80_ix),y
002A4B  3  A9 00                lda #0
002A4D  3  C5 rr                cmp scno
002A4F  3  90 03                bcc *+5
002A51  3  4C 5A 2A             jmp a03824
002A54  3  A9 01                lda #1
002A56  3  A0 0B                ldy #11
002A58  3  91 rr                sta (z80_ix),y
002A5A  3  A9 02        a03824: lda #2
002A5C  3  C5 rr                cmp scno
002A5E  3  90 03                bcc *+5
002A60  3  4C 69 2A             jmp a03855
002A63  3  A9 02                lda #2
002A65  3  A0 0B                ldy #11
002A67  3  91 rr                sta (z80_ix),y
002A69  3  A9 00        a03855: lda #0
002A6B  3  85 rr                sta varg
002A6D  3  AD 12 1C             lda ogptr
002A70  3  85 rr                sta z80_x
002A72  3  AD 13 1C             lda ogptr+1
002A75  3  85 rr                sta z80_i
002A77  3  A5 rr                lda vara
002A79  3  A0 08                ldy #8
002A7B  3  91 rr                sta (z80_ix),y
002A7D  3  A5 rr                lda varb
002A7F  3  A0 09                ldy #9
002A81  3  91 rr                sta (z80_ix),y
002A83  3  60                   rts
002A84  3  4C E3 2A             jmp a04121
002A87  3  A9 64        a03916: lda #<100
002A89  3  85 rr                sta z80_l
002A8B  3  A9 00                lda #>100
002A8D  3  85 rr                sta z80_h
002A8F  3  20 E1 13             jsr addsc
002A92  3                       ; COLOUR command
002A92  3  A9 01                lda #1
002A94  3  85 rr                sta chary
002A96  3  A9 1B                lda #27
002A98  3  85 rr                sta charx
002A9A  3  20 94 13             jsr dscor
002A9D  3  A9 04                lda #4
002A9F  3  85 rr                sta chary
002AA1  3  A9 1B                lda #27
002AA3  3  85 rr                sta charx
002AA5  3  A9 04                lda #4
002AA7  3  85 rr                sta z80_c
002AA9  3  A9 0E                lda #14
002AAB  3  85 rr                sta z80_b
002AAD  3  20 B8 12             jsr spawn
002AB0  3  AD 64 13             lda spptr
002AB3  3  85 rr                sta z80_x
002AB5  3  AD 65 13             lda spptr+1
002AB8  3  85 rr                sta z80_i
002ABA  3  A5 rr                lda vard
002ABC  3  A0 0A                ldy #10
002ABE  3  91 rr                sta (z80_ix),y
002AC0  3  A5 rr                lda varobj
002AC2  3  A0 0B                ldy #11
002AC4  3  91 rr                sta (z80_ix),y
002AC6  3  AD 12 1C             lda ogptr
002AC9  3  85 rr                sta z80_x
002ACB  3  AD 13 1C             lda ogptr+1
002ACE  3  85 rr                sta z80_i
002AD0  3  A5 rr                lda vara
002AD2  3  A0 08                ldy #8
002AD4  3  91 rr                sta (z80_ix),y
002AD6  3  A5 rr                lda varb
002AD8  3  A0 09                ldy #9
002ADA  3  91 rr                sta (z80_ix),y
002ADC  3                       ; SPRITEINK command
002ADC  3  A9 04                lda #4
002ADE  3  A0 09                ldy #9
002AE0  3  91 rr                sta (z80_ix),y
002AE2  3  60                   rts
002AE3  3  A5 rr        a04121: lda vara
002AE5  3  A0 08                ldy #8
002AE7  3  91 rr                sta (z80_ix),y
002AE9  3  A5 rr                lda varb
002AEB  3  A0 09                ldy #9
002AED  3  91 rr                sta (z80_ix),y
002AEF  3  A9 05                lda #5
002AF1  3  C5 rr                cmp varg
002AF3  3  F0 03                beq *+5
002AF5  3  4C FC 2A             jmp a04173
002AF8  3  A9 00                lda #0
002AFA  3  85 rr                sta varg
002AFC  3  A9 00        a04173: lda #0
002AFE  3  85 rr                sta varq
002B00  3  A5 rr                lda joyval
002B02  3  29 20                and #32
002B04  3  F0 03                beq :+
002B06  3  4C 0D 2B             jmp a04207
002B09  3               :
002B09  3  A9 01                lda #1
002B0B  3  85 rr                sta varq
002B0D  3  A5 rr        a04207: lda joyval
002B0F  3  29 10                and #16
002B11  3  F0 03                beq :+
002B13  3  4C 1A 2B             jmp a04232
002B16  3               :
002B16  3  A9 01                lda #1
002B18  3  85 rr                sta varq
002B1A  3  A9 01        a04232: lda #1
002B1C  3  C5 rr                cmp varq
002B1E  3  F0 03                beq *+5
002B20  3  4C 96 2B             jmp a04485
002B23  3  A9 00                lda #0
002B25  3  A0 0B                ldy #11
002B27  3  D1 rr                cmp (z80_ix),y
002B29  3  F0 03                beq *+5
002B2B  3  4C 96 2B             jmp a04485
002B2E  3  A9 00                lda #0
002B30  3  C5 rr                cmp vark
002B32  3  90 03                bcc *+5
002B34  3  4C 96 2B             jmp a04485
002B37  3  A9 02                lda #2
002B39  3  85 rr                sta z80_c
002B3B  3  A9 08                lda #8
002B3D  3  85 rr                sta z80_b
002B3F  3  20 B8 12             jsr spawn
002B42  3  A9 01                lda #1
002B44  3  A0 0B                ldy #11
002B46  3  91 rr                sta (z80_ix),y
002B48  3  AD 64 13             lda spptr
002B4B  3  85 rr                sta z80_x
002B4D  3  AD 65 13             lda spptr+1
002B50  3  85 rr                sta z80_i
002B52  3  A5 rr                lda clock
002B54  3  A0 0C                ldy #12
002B56  3  91 rr                sta (z80_ix),y
002B58  3  A9 FF                lda #255
002B5A  3  85 rr                sta z80_c
002B5C  3  A0 0C                ldy #12
002B5E  3  B1 rr                lda (z80_ix),y
002B60  3  18                   clc
002B61  3  65 rr                adc z80_c
002B63  3  A0 0C                ldy #12
002B65  3  91 rr                sta (z80_ix),y
002B67  3  A9 FF                lda #255
002B69  3  85 rr                sta z80_c
002B6B  3  A5 rr                lda vark
002B6D  3  18                   clc
002B6E  3  65 rr                adc z80_c
002B70  3  85 rr                sta vark
002B72  3  A9 07                lda #7
002B74  3  85 rr                sta chary
002B76  3  A9 1D                lda #29
002B78  3  85 rr                sta charx
002B7A  3  A9 18                lda #24
002B7C  3  20 D3 19             jsr dmsg
002B7F  3  A9 07                lda #7
002B81  3  85 rr                sta chary
002B83  3  A9 1D                lda #29
002B85  3  85 rr                sta charx
002B87  3  A5 rr                lda vark
002B89  3  20 DB 1E             jsr disply
002B8C  3  AD 12 1C             lda ogptr
002B8F  3  85 rr                sta z80_x
002B91  3  AD 13 1C             lda ogptr+1
002B94  3  85 rr                sta z80_i
002B96  3  A5 rr        a04485: lda joyval
002B98  3  29 08                and #8
002B9A  3  F0 03                beq :+
002B9C  3  4C 16 2C             jmp a04746
002B9F  3               :
002B9F  3  20 29 17             jsr cangu
002BA2  3  F0 03                beq :+
002BA4  3  4C B9 2B             jmp a04556
002BA7  3               :
002BA7  3  A0 08                ldy #8
002BA9  3  B1 rr                lda (z80_ix),y
002BAB  3  38                   sec
002BAC  3  E9 02                sbc #2
002BAE  3  91 rr                sta (z80_ix),y
002BB0  3  A9 00                lda #0
002BB2  3  A0 06                ldy #6
002BB4  3  91 rr                sta (z80_ix),y
002BB6  3  4C F3 2B             jmp a04681
002BB9  3  A0 09        a04556: ldy #9
002BBB  3  B1 rr                lda (z80_ix),y
002BBD  3  18                   clc
002BBE  3  69 02                adc #2
002BC0  3  91 rr                sta (z80_ix),y
002BC2  3  20 29 17             jsr cangu
002BC5  3  F0 03                beq :+
002BC7  3  4C CD 2B             jmp a04596
002BCA  3               :
002BCA  3  4C F3 2B             jmp a04681
002BCD  3  A0 09        a04596: ldy #9
002BCF  3  B1 rr                lda (z80_ix),y
002BD1  3  38                   sec
002BD2  3  E9 02                sbc #2
002BD4  3  91 rr                sta (z80_ix),y
002BD6  3  A0 09                ldy #9
002BD8  3  B1 rr                lda (z80_ix),y
002BDA  3  38                   sec
002BDB  3  E9 02                sbc #2
002BDD  3  91 rr                sta (z80_ix),y
002BDF  3  20 29 17             jsr cangu
002BE2  3  F0 03                beq :+
002BE4  3  4C EA 2B             jmp a04659
002BE7  3               :
002BE7  3  4C F3 2B             jmp a04681
002BEA  3  A0 09        a04659: ldy #9
002BEC  3  B1 rr                lda (z80_ix),y
002BEE  3  18                   clc
002BEF  3  69 02                adc #2
002BF1  3  91 rr                sta (z80_ix),y
002BF3  3  A0 08        a04681: ldy #8
002BF5  3  B1 rr                lda (z80_ix),y
002BF7  3  C5 rr                cmp vara
002BF9  3  90 03                bcc *+5
002BFB  3  4C 16 2C             jmp a04746
002BFE  3  A9 00                lda #0
002C00  3  C5 rr                cmp varc
002C02  3  F0 03                beq *+5
002C04  3  4C 0A 2C             jmp a04725
002C07  3  20 FF 1D             jsr animsp
002C0A  3  A9 02        a04725: lda #2
002C0C  3  C5 rr                cmp varc
002C0E  3  F0 03                beq *+5
002C10  3  4C 16 2C             jmp a04746
002C13  3  20 FF 1D             jsr animsp
002C16  3  A5 rr        a04746: lda joyval
002C18  3  29 04                and #4
002C1A  3  F0 03                beq :+
002C1C  3  4C 96 2C             jmp a05007
002C1F  3               :
002C1F  3  20 5E 17             jsr cangd
002C22  3  F0 03                beq :+
002C24  3  4C 39 2C             jmp a04817
002C27  3               :
002C27  3  A0 08                ldy #8
002C29  3  B1 rr                lda (z80_ix),y
002C2B  3  18                   clc
002C2C  3  69 02                adc #2
002C2E  3  91 rr                sta (z80_ix),y
002C30  3  A9 01                lda #1
002C32  3  A0 06                ldy #6
002C34  3  91 rr                sta (z80_ix),y
002C36  3  4C 73 2C             jmp a04942
002C39  3  A0 09        a04817: ldy #9
002C3B  3  B1 rr                lda (z80_ix),y
002C3D  3  18                   clc
002C3E  3  69 02                adc #2
002C40  3  91 rr                sta (z80_ix),y
002C42  3  20 5E 17             jsr cangd
002C45  3  F0 03                beq :+
002C47  3  4C 4D 2C             jmp a04857
002C4A  3               :
002C4A  3  4C 73 2C             jmp a04942
002C4D  3  A0 09        a04857: ldy #9
002C4F  3  B1 rr                lda (z80_ix),y
002C51  3  38                   sec
002C52  3  E9 02                sbc #2
002C54  3  91 rr                sta (z80_ix),y
002C56  3  A0 09                ldy #9
002C58  3  B1 rr                lda (z80_ix),y
002C5A  3  38                   sec
002C5B  3  E9 02                sbc #2
002C5D  3  91 rr                sta (z80_ix),y
002C5F  3  20 5E 17             jsr cangd
002C62  3  F0 03                beq :+
002C64  3  4C 6A 2C             jmp a04920
002C67  3               :
002C67  3  4C 73 2C             jmp a04942
002C6A  3  A0 09        a04920: ldy #9
002C6C  3  B1 rr                lda (z80_ix),y
002C6E  3  18                   clc
002C6F  3  69 02                adc #2
002C71  3  91 rr                sta (z80_ix),y
002C73  3  A5 rr        a04942: lda vara
002C75  3  A0 08                ldy #8
002C77  3  D1 rr                cmp (z80_ix),y
002C79  3  90 03                bcc *+5
002C7B  3  4C 96 2C             jmp a05007
002C7E  3  A9 00                lda #0
002C80  3  C5 rr                cmp varc
002C82  3  F0 03                beq *+5
002C84  3  4C 8A 2C             jmp a04986
002C87  3  20 FF 1D             jsr animsp
002C8A  3  A9 02        a04986: lda #2
002C8C  3  C5 rr                cmp varc
002C8E  3  F0 03                beq *+5
002C90  3  4C 96 2C             jmp a05007
002C93  3  20 FF 1D             jsr animsp
002C96  3  A5 rr        a05007: lda joyval
002C98  3  29 01                and #1
002C9A  3  F0 03                beq :+
002C9C  3  4C 21 2D             jmp a05291
002C9F  3               :
002C9F  3  A0 09                ldy #9
002CA1  3  B1 rr                lda (z80_ix),y
002CA3  3  C9 BF                cmp #191
002CA5  3  90 03                bcc *+5
002CA7  3  4C 21 2D             jmp a05291
002CAA  3  20 A5 17             jsr cangr
002CAD  3  F0 03                beq :+
002CAF  3  4C C4 2C             jmp a05101
002CB2  3               :
002CB2  3  A9 02                lda #2
002CB4  3  A0 06                ldy #6
002CB6  3  91 rr                sta (z80_ix),y
002CB8  3  A0 09                ldy #9
002CBA  3  B1 rr                lda (z80_ix),y
002CBC  3  18                   clc
002CBD  3  69 02                adc #2
002CBF  3  91 rr                sta (z80_ix),y
002CC1  3  4C FE 2C             jmp a05225
002CC4  3  A0 08        a05101: ldy #8
002CC6  3  B1 rr                lda (z80_ix),y
002CC8  3  38                   sec
002CC9  3  E9 02                sbc #2
002CCB  3  91 rr                sta (z80_ix),y
002CCD  3  20 A5 17             jsr cangr
002CD0  3  F0 03                beq :+
002CD2  3  4C D8 2C             jmp a05141
002CD5  3               :
002CD5  3  4C FE 2C             jmp a05225
002CD8  3  A0 08        a05141: ldy #8
002CDA  3  B1 rr                lda (z80_ix),y
002CDC  3  18                   clc
002CDD  3  69 02                adc #2
002CDF  3  91 rr                sta (z80_ix),y
002CE1  3  A0 08                ldy #8
002CE3  3  B1 rr                lda (z80_ix),y
002CE5  3  18                   clc
002CE6  3  69 02                adc #2
002CE8  3  91 rr                sta (z80_ix),y
002CEA  3  20 A5 17             jsr cangr
002CED  3  F0 03                beq :+
002CEF  3  4C F5 2C             jmp a05203
002CF2  3               :
002CF2  3  4C FE 2C             jmp a05225
002CF5  3  A0 08        a05203: ldy #8
002CF7  3  B1 rr                lda (z80_ix),y
002CF9  3  38                   sec
002CFA  3  E9 02                sbc #2
002CFC  3  91 rr                sta (z80_ix),y
002CFE  3  A5 rr        a05225: lda varb
002D00  3  A0 09                ldy #9
002D02  3  D1 rr                cmp (z80_ix),y
002D04  3  90 03                bcc *+5
002D06  3  4C 21 2D             jmp a05291
002D09  3  A9 00                lda #0
002D0B  3  C5 rr                cmp varc
002D0D  3  F0 03                beq *+5
002D0F  3  4C 15 2D             jmp a05269
002D12  3  20 FF 1D             jsr animsp
002D15  3  A9 02        a05269: lda #2
002D17  3  C5 rr                cmp varc
002D19  3  F0 03                beq *+5
002D1B  3  4C 21 2D             jmp a05291
002D1E  3  20 FF 1D             jsr animsp
002D21  3  A5 rr        a05291: lda joyval
002D23  3  29 02                and #2
002D25  3  F0 03                beq :+
002D27  3  4C AC 2D             jmp a05574
002D2A  3               :
002D2A  3  A9 01                lda #1
002D2C  3  A0 09                ldy #9
002D2E  3  D1 rr                cmp (z80_ix),y
002D30  3  90 03                bcc *+5
002D32  3  4C AC 2D             jmp a05574
002D35  3  20 93 17             jsr cangl
002D38  3  F0 03                beq :+
002D3A  3  4C 4F 2D             jmp a05384
002D3D  3               :
002D3D  3  A0 09                ldy #9
002D3F  3  B1 rr                lda (z80_ix),y
002D41  3  38                   sec
002D42  3  E9 02                sbc #2
002D44  3  91 rr                sta (z80_ix),y
002D46  3  A9 03                lda #3
002D48  3  A0 06                ldy #6
002D4A  3  91 rr                sta (z80_ix),y
002D4C  3  4C 89 2D             jmp a05508
002D4F  3  A0 08        a05384: ldy #8
002D51  3  B1 rr                lda (z80_ix),y
002D53  3  38                   sec
002D54  3  E9 02                sbc #2
002D56  3  91 rr                sta (z80_ix),y
002D58  3  20 93 17             jsr cangl
002D5B  3  F0 03                beq :+
002D5D  3  4C 63 2D             jmp a05424
002D60  3               :
002D60  3  4C 89 2D             jmp a05508
002D63  3  A0 08        a05424: ldy #8
002D65  3  B1 rr                lda (z80_ix),y
002D67  3  18                   clc
002D68  3  69 02                adc #2
002D6A  3  91 rr                sta (z80_ix),y
002D6C  3  A0 08                ldy #8
002D6E  3  B1 rr                lda (z80_ix),y
002D70  3  18                   clc
002D71  3  69 02                adc #2
002D73  3  91 rr                sta (z80_ix),y
002D75  3  20 93 17             jsr cangl
002D78  3  F0 03                beq :+
002D7A  3  4C 80 2D             jmp a05486
002D7D  3               :
002D7D  3  4C 89 2D             jmp a05508
002D80  3  A0 08        a05486: ldy #8
002D82  3  B1 rr                lda (z80_ix),y
002D84  3  38                   sec
002D85  3  E9 02                sbc #2
002D87  3  91 rr                sta (z80_ix),y
002D89  3  A0 09        a05508: ldy #9
002D8B  3  B1 rr                lda (z80_ix),y
002D8D  3  C5 rr                cmp varb
002D8F  3  90 03                bcc *+5
002D91  3  4C AC 2D             jmp a05574
002D94  3  A9 00                lda #0
002D96  3  C5 rr                cmp varc
002D98  3  F0 03                beq *+5
002D9A  3  4C A0 2D             jmp a05552
002D9D  3  20 FF 1D             jsr animsp
002DA0  3  A9 02        a05552: lda #2
002DA2  3  C5 rr                cmp varc
002DA4  3  F0 03                beq *+5
002DA6  3  4C AC 2D             jmp a05574
002DA9  3  20 FF 1D             jsr animsp
002DAC  3  A9 FA        a05574: lda #250
002DAE  3  A0 08                ldy #8
002DB0  3  D1 rr                cmp (z80_ix),y
002DB2  3  90 03                bcc *+5
002DB4  3  4C BD 2D             jmp a05609
002DB7  3  A9 00                lda #0
002DB9  3  A0 08                ldy #8
002DBB  3  91 rr                sta (z80_ix),y
002DBD  3  A9 B0        a05609: lda #176
002DBF  3  A0 08                ldy #8
002DC1  3  D1 rr                cmp (z80_ix),y
002DC3  3  90 03                bcc *+5
002DC5  3  4C CE 2D             jmp a05646
002DC8  3  A9 B0                lda #176
002DCA  3  A0 08                ldy #8
002DCC  3  91 rr                sta (z80_ix),y
002DCE  3  A9 01        a05646: lda #1
002DD0  3  C5 rr                cmp varg
002DD2  3  F0 03                beq *+5
002DD4  3  4C F1 2D             jmp a05719
002DD7  3  A0 06                ldy #6
002DD9  3  B1 rr                lda (z80_ix),y
002DDB  3  C9 04                cmp #4
002DDD  3  90 03                bcc *+5
002DDF  3  4C F1 2D             jmp a05719
002DE2  3  A9 04                lda #4
002DE4  3  85 rr                sta z80_c
002DE6  3  A0 06                ldy #6
002DE8  3  B1 rr                lda (z80_ix),y
002DEA  3  18                   clc
002DEB  3  65 rr                adc z80_c
002DED  3  A0 06                ldy #6
002DEF  3  91 rr                sta (z80_ix),y
002DF1  3               a05719: ; SPRITEINK command
002DF1  3  60                   rts
002DF2  3               evnt01:
002DF2  3  A9 00                lda #0
002DF4  3  C5 rr                cmp scno
002DF6  3  F0 03                beq *+5
002DF8  3  4C FF 2D             jmp b00027
002DFB  3  A9 0A                lda #10
002DFD  3  85 rr                sta varq
002DFF  3  A9 01        b00027: lda #1
002E01  3  C5 rr                cmp scno
002E03  3  F0 03                beq *+5
002E05  3  4C 0C 2E             jmp b00051
002E08  3  A9 09                lda #9
002E0A  3  85 rr                sta varq
002E0C  3  A9 02        b00051: lda #2
002E0E  3  C5 rr                cmp scno
002E10  3  F0 03                beq *+5
002E12  3  4C 19 2E             jmp b00076
002E15  3  A9 08                lda #8
002E17  3  85 rr                sta varq
002E19  3  A9 03        b00076: lda #3
002E1B  3  C5 rr                cmp scno
002E1D  3  F0 03                beq *+5
002E1F  3  4C 26 2E             jmp b00101
002E22  3  A9 07                lda #7
002E24  3  85 rr                sta varq
002E26  3  A0 0B        b00101: ldy #11
002E28  3  B1 rr                lda (z80_ix),y
002E2A  3  C9 02                cmp #2
002E2C  3  90 03                bcc *+5
002E2E  3  4C 61 2E             jmp b00229
002E31  3  A9 00                lda #0
002E33  3  C5 rr                cmp clock
002E35  3  F0 03                beq *+5
002E37  3  4C 61 2E             jmp b00229
002E3A  3  A0 0C                ldy #12
002E3C  3  B1 rr                lda (z80_ix),y
002E3E  3  18                   clc
002E3F  3  69 01                adc #1
002E41  3  A0 0C                ldy #12
002E43  3  91 rr                sta (z80_ix),y
002E45  3  A5 rr                lda varq
002E47  3  A0 0C                ldy #12
002E49  3  D1 rr                cmp (z80_ix),y
002E4B  3  F0 03                beq *+5
002E4D  3  4C 61 2E             jmp b00229
002E50  3  A9 00                lda #0
002E52  3  A0 0C                ldy #12
002E54  3  91 rr                sta (z80_ix),y
002E56  3  A0 0B                ldy #11
002E58  3  B1 rr                lda (z80_ix),y
002E5A  3  18                   clc
002E5B  3  69 01                adc #1
002E5D  3  A0 0B                ldy #11
002E5F  3  91 rr                sta (z80_ix),y
002E61  3  A9 02        b00229: lda #2
002E63  3  C5 rr                cmp varg
002E65  3  F0 03                beq *+5
002E67  3  4C 6B 2E             jmp b00249
002E6A  3  60                   rts
002E6B  3  A0 0B        b00249: ldy #11
002E6D  3  B1 rr                lda (z80_ix),y
002E6F  3  C9 02                cmp #2
002E71  3  90 03                bcc *+5
002E73  3  4C 91 2E             jmp b00319
002E76  3  A9 00                lda #0
002E78  3  C5 rr                cmp varc
002E7A  3  F0 03                beq *+5
002E7C  3  4C 82 2E             jmp b00292
002E7F  3  20 FF 1D             jsr animsp
002E82  3  A9 02        b00292: lda #2
002E84  3  C5 rr                cmp varc
002E86  3  F0 03                beq *+5
002E88  3  4C 8E 2E             jmp b00314
002E8B  3  20 FF 1D             jsr animsp
002E8E  3  4C 94 2E     b00314: jmp b00323
002E91  3  20 FF 1D     b00319: jsr animsp
002E94  3  A0 0A        b00323: ldy #10
002E96  3  B1 rr                lda (z80_ix),y
002E98  3  85 rr                sta vard
002E9A  3  A9 00                lda #0
002E9C  3  85 rr                sta varo
002E9E  3  A9 00                lda #0
002EA0  3  A0 08                ldy #8
002EA2  3  D1 rr                cmp (z80_ix),y
002EA4  3  90 03                bcc *+5
002EA6  3  4C 29 2F             jmp b00632
002EA9  3  20 29 17             jsr cangu
002EAC  3  F0 03                beq :+
002EAE  3  4C B5 2E             jmp b00389
002EB1  3               :
002EB1  3  A9 01                lda #1
002EB3  3  85 rr                sta varo
002EB5  3  A9 00        b00389: lda #0
002EB7  3  C5 rr                cmp varo
002EB9  3  F0 03                beq *+5
002EBB  3  4C EF 2E             jmp b00510
002EBE  3  A9 00                lda #0
002EC0  3  A0 09                ldy #9
002EC2  3  D1 rr                cmp (z80_ix),y
002EC4  3  90 03                bcc *+5
002EC6  3  4C EF 2E             jmp b00510
002EC9  3  A9 FF                lda #255
002ECB  3  85 rr                sta z80_c
002ECD  3  A0 09                ldy #9
002ECF  3  B1 rr                lda (z80_ix),y
002ED1  3  18                   clc
002ED2  3  65 rr                adc z80_c
002ED4  3  A0 09                ldy #9
002ED6  3  91 rr                sta (z80_ix),y
002ED8  3  20 29 17             jsr cangu
002EDB  3  F0 03                beq :+
002EDD  3  4C E4 2E             jmp b00484
002EE0  3               :
002EE0  3  A9 02                lda #2
002EE2  3  85 rr                sta varo
002EE4  3  A0 09        b00484: ldy #9
002EE6  3  B1 rr                lda (z80_ix),y
002EE8  3  18                   clc
002EE9  3  69 01                adc #1
002EEB  3  A0 09                ldy #9
002EED  3  91 rr                sta (z80_ix),y
002EEF  3  A9 00        b00510: lda #0
002EF1  3  C5 rr                cmp varo
002EF3  3  F0 03                beq *+5
002EF5  3  4C 29 2F             jmp b00632
002EF8  3  A0 09                ldy #9
002EFA  3  B1 rr                lda (z80_ix),y
002EFC  3  C9 C0                cmp #192
002EFE  3  90 03                bcc *+5
002F00  3  4C 29 2F             jmp b00632
002F03  3  A0 09                ldy #9
002F05  3  B1 rr                lda (z80_ix),y
002F07  3  18                   clc
002F08  3  69 01                adc #1
002F0A  3  A0 09                ldy #9
002F0C  3  91 rr                sta (z80_ix),y
002F0E  3  20 29 17             jsr cangu
002F11  3  F0 03                beq :+
002F13  3  4C 1A 2F             jmp b00597
002F16  3               :
002F16  3  A9 03                lda #3
002F18  3  85 rr                sta varo
002F1A  3  A9 FF        b00597: lda #255
002F1C  3  85 rr                sta z80_c
002F1E  3  A0 09                ldy #9
002F20  3  B1 rr                lda (z80_ix),y
002F22  3  18                   clc
002F23  3  65 rr                adc z80_c
002F25  3  A0 09                ldy #9
002F27  3  91 rr                sta (z80_ix),y
002F29  3  A9 00        b00632: lda #0
002F2B  3  A0 08                ldy #8
002F2D  3  D1 rr                cmp (z80_ix),y
002F2F  3  F0 03                beq *+5
002F31  3  4C 38 2F             jmp b00662
002F34  3  A9 00                lda #0
002F36  3  85 rr                sta varo
002F38  3  A9 00        b00662: lda #0
002F3A  3  C5 rr                cmp varo
002F3C  3  90 03                bcc *+5
002F3E  3  4C 88 2F             jmp b00825
002F41  3  A9 00                lda #0
002F43  3  C5 rr                cmp vard
002F45  3  F0 03                beq *+5
002F47  3  4C 88 2F             jmp b00825
002F4A  3  A9 F8                lda #248
002F4C  3  85 rr                sta z80_c
002F4E  3  A0 08                ldy #8
002F50  3  B1 rr                lda (z80_ix),y
002F52  3  18                   clc
002F53  3  65 rr                adc z80_c
002F55  3  A0 08                ldy #8
002F57  3  91 rr                sta (z80_ix),y
002F59  3  A9 01                lda #1
002F5B  3  85 rr                sta z80_b
002F5D  3  20 40 1E             jsr sktyp
002F60  3  B0 03                bcs :+
002F62  3  4C 69 2F             jmp b00760
002F65  3               :
002F65  3  A9 00                lda #0
002F67  3  85 rr                sta varo
002F69  3  A9 08        b00760: lda #8
002F6B  3  85 rr                sta z80_b
002F6D  3  20 40 1E             jsr sktyp
002F70  3  B0 03                bcs :+
002F72  3  4C 79 2F             jmp b00790
002F75  3               :
002F75  3  A9 00                lda #0
002F77  3  85 rr                sta varo
002F79  3  A9 08        b00790: lda #8
002F7B  3  85 rr                sta z80_c
002F7D  3  A0 08                ldy #8
002F7F  3  B1 rr                lda (z80_ix),y
002F81  3  18                   clc
002F82  3  65 rr                adc z80_c
002F84  3  A0 08                ldy #8
002F86  3  91 rr                sta (z80_ix),y
002F88  3  A9 00        b00825: lda #0
002F8A  3  85 rr                sta varp
002F8C  3  A0 08                ldy #8
002F8E  3  B1 rr                lda (z80_ix),y
002F90  3  C9 B0                cmp #176
002F92  3  90 03                bcc *+5
002F94  3  4C 17 30             jmp b01120
002F97  3  20 5E 17             jsr cangd
002F9A  3  F0 03                beq :+
002F9C  3  4C A3 2F             jmp b00877
002F9F  3               :
002F9F  3  A9 01                lda #1
002FA1  3  85 rr                sta varp
002FA3  3  A9 00        b00877: lda #0
002FA5  3  C5 rr                cmp varp
002FA7  3  F0 03                beq *+5
002FA9  3  4C DD 2F             jmp b00998
002FAC  3  A9 00                lda #0
002FAE  3  A0 09                ldy #9
002FB0  3  D1 rr                cmp (z80_ix),y
002FB2  3  90 03                bcc *+5
002FB4  3  4C DD 2F             jmp b00998
002FB7  3  A9 FF                lda #255
002FB9  3  85 rr                sta z80_c
002FBB  3  A0 09                ldy #9
002FBD  3  B1 rr                lda (z80_ix),y
002FBF  3  18                   clc
002FC0  3  65 rr                adc z80_c
002FC2  3  A0 09                ldy #9
002FC4  3  91 rr                sta (z80_ix),y
002FC6  3  20 5E 17             jsr cangd
002FC9  3  F0 03                beq :+
002FCB  3  4C D2 2F             jmp b00972
002FCE  3               :
002FCE  3  A9 02                lda #2
002FD0  3  85 rr                sta varp
002FD2  3  A0 09        b00972: ldy #9
002FD4  3  B1 rr                lda (z80_ix),y
002FD6  3  18                   clc
002FD7  3  69 01                adc #1
002FD9  3  A0 09                ldy #9
002FDB  3  91 rr                sta (z80_ix),y
002FDD  3  A9 00        b00998: lda #0
002FDF  3  C5 rr                cmp varp
002FE1  3  F0 03                beq *+5
002FE3  3  4C 17 30             jmp b01120
002FE6  3  A0 09                ldy #9
002FE8  3  B1 rr                lda (z80_ix),y
002FEA  3  C9 C0                cmp #192
002FEC  3  90 03                bcc *+5
002FEE  3  4C 17 30             jmp b01120
002FF1  3  A0 09                ldy #9
002FF3  3  B1 rr                lda (z80_ix),y
002FF5  3  18                   clc
002FF6  3  69 01                adc #1
002FF8  3  A0 09                ldy #9
002FFA  3  91 rr                sta (z80_ix),y
002FFC  3  20 5E 17             jsr cangd
002FFF  3  F0 03                beq :+
003001  3  4C 08 30             jmp b01085
003004  3               :
003004  3  A9 03                lda #3
003006  3  85 rr                sta varp
003008  3  A9 FF        b01085: lda #255
00300A  3  85 rr                sta z80_c
00300C  3  A0 09                ldy #9
00300E  3  B1 rr                lda (z80_ix),y
003010  3  18                   clc
003011  3  65 rr                adc z80_c
003013  3  A0 09                ldy #9
003015  3  91 rr                sta (z80_ix),y
003017  3  A9 AF        b01120: lda #175
003019  3  A0 08                ldy #8
00301B  3  D1 rr                cmp (z80_ix),y
00301D  3  90 03                bcc *+5
00301F  3  4C 2C 30             jmp b01164
003022  3  A9 B0                lda #176
003024  3  A0 08                ldy #8
003026  3  91 rr                sta (z80_ix),y
003028  3  A9 00                lda #0
00302A  3  85 rr                sta varp
00302C  3  A9 00        b01164: lda #0
00302E  3  C5 rr                cmp varp
003030  3  90 03                bcc *+5
003032  3  4C 7C 30             jmp b01327
003035  3  A9 01                lda #1
003037  3  C5 rr                cmp vard
003039  3  F0 03                beq *+5
00303B  3  4C 7C 30             jmp b01327
00303E  3  A9 08                lda #8
003040  3  85 rr                sta z80_c
003042  3  A0 08                ldy #8
003044  3  B1 rr                lda (z80_ix),y
003046  3  18                   clc
003047  3  65 rr                adc z80_c
003049  3  A0 08                ldy #8
00304B  3  91 rr                sta (z80_ix),y
00304D  3  A9 01                lda #1
00304F  3  85 rr                sta z80_b
003051  3  20 40 1E             jsr sktyp
003054  3  B0 03                bcs :+
003056  3  4C 5D 30             jmp b01262
003059  3               :
003059  3  A9 00                lda #0
00305B  3  85 rr                sta varp
00305D  3  A9 08        b01262: lda #8
00305F  3  85 rr                sta z80_b
003061  3  20 40 1E             jsr sktyp
003064  3  B0 03                bcs :+
003066  3  4C 6D 30             jmp b01292
003069  3               :
003069  3  A9 00                lda #0
00306B  3  85 rr                sta varp
00306D  3  A9 F8        b01292: lda #248
00306F  3  85 rr                sta z80_c
003071  3  A0 08                ldy #8
003073  3  B1 rr                lda (z80_ix),y
003075  3  18                   clc
003076  3  65 rr                adc z80_c
003078  3  A0 08                ldy #8
00307A  3  91 rr                sta (z80_ix),y
00307C  3  A9 00        b01327: lda #0
00307E  3  85 rr                sta vars
003080  3  A0 09                ldy #9
003082  3  B1 rr                lda (z80_ix),y
003084  3  C9 C0                cmp #192
003086  3  90 03                bcc *+5
003088  3  4C 0B 31             jmp b01622
00308B  3  20 A5 17             jsr cangr
00308E  3  F0 03                beq :+
003090  3  4C 97 30             jmp b01379
003093  3               :
003093  3  A9 01                lda #1
003095  3  85 rr                sta vars
003097  3  A9 00        b01379: lda #0
003099  3  C5 rr                cmp vars
00309B  3  F0 03                beq *+5
00309D  3  4C D1 30             jmp b01500
0030A0  3  A9 00                lda #0
0030A2  3  A0 08                ldy #8
0030A4  3  D1 rr                cmp (z80_ix),y
0030A6  3  90 03                bcc *+5
0030A8  3  4C D1 30             jmp b01500
0030AB  3  A9 FF                lda #255
0030AD  3  85 rr                sta z80_c
0030AF  3  A0 08                ldy #8
0030B1  3  B1 rr                lda (z80_ix),y
0030B3  3  18                   clc
0030B4  3  65 rr                adc z80_c
0030B6  3  A0 08                ldy #8
0030B8  3  91 rr                sta (z80_ix),y
0030BA  3  20 A5 17             jsr cangr
0030BD  3  F0 03                beq :+
0030BF  3  4C C6 30             jmp b01475
0030C2  3               :
0030C2  3  A9 02                lda #2
0030C4  3  85 rr                sta vars
0030C6  3  A0 08        b01475: ldy #8
0030C8  3  B1 rr                lda (z80_ix),y
0030CA  3  18                   clc
0030CB  3  69 01                adc #1
0030CD  3  A0 08                ldy #8
0030CF  3  91 rr                sta (z80_ix),y
0030D1  3  A9 00        b01500: lda #0
0030D3  3  C5 rr                cmp vars
0030D5  3  F0 03                beq *+5
0030D7  3  4C 0B 31             jmp b01622
0030DA  3  A0 08                ldy #8
0030DC  3  B1 rr                lda (z80_ix),y
0030DE  3  C9 B0                cmp #176
0030E0  3  90 03                bcc *+5
0030E2  3  4C 0B 31             jmp b01622
0030E5  3  A0 08                ldy #8
0030E7  3  B1 rr                lda (z80_ix),y
0030E9  3  18                   clc
0030EA  3  69 01                adc #1
0030EC  3  A0 08                ldy #8
0030EE  3  91 rr                sta (z80_ix),y
0030F0  3  20 A5 17             jsr cangr
0030F3  3  F0 03                beq :+
0030F5  3  4C FC 30             jmp b01587
0030F8  3               :
0030F8  3  A9 03                lda #3
0030FA  3  85 rr                sta vars
0030FC  3  A9 FF        b01587: lda #255
0030FE  3  85 rr                sta z80_c
003100  3  A0 08                ldy #8
003102  3  B1 rr                lda (z80_ix),y
003104  3  18                   clc
003105  3  65 rr                adc z80_c
003107  3  A0 08                ldy #8
003109  3  91 rr                sta (z80_ix),y
00310B  3  A9 00        b01622: lda #0
00310D  3  C5 rr                cmp vars
00310F  3  90 03                bcc *+5
003111  3  4C 5B 31             jmp b01785
003114  3  A9 02                lda #2
003116  3  C5 rr                cmp vard
003118  3  F0 03                beq *+5
00311A  3  4C 5B 31             jmp b01785
00311D  3  A9 08                lda #8
00311F  3  85 rr                sta z80_c
003121  3  A0 09                ldy #9
003123  3  B1 rr                lda (z80_ix),y
003125  3  18                   clc
003126  3  65 rr                adc z80_c
003128  3  A0 09                ldy #9
00312A  3  91 rr                sta (z80_ix),y
00312C  3  A9 01                lda #1
00312E  3  85 rr                sta z80_b
003130  3  20 40 1E             jsr sktyp
003133  3  B0 03                bcs :+
003135  3  4C 3C 31             jmp b01720
003138  3               :
003138  3  A9 00                lda #0
00313A  3  85 rr                sta vars
00313C  3  A9 08        b01720: lda #8
00313E  3  85 rr                sta z80_b
003140  3  20 40 1E             jsr sktyp
003143  3  B0 03                bcs :+
003145  3  4C 4C 31             jmp b01750
003148  3               :
003148  3  A9 00                lda #0
00314A  3  85 rr                sta vars
00314C  3  A9 F8        b01750: lda #248
00314E  3  85 rr                sta z80_c
003150  3  A0 09                ldy #9
003152  3  B1 rr                lda (z80_ix),y
003154  3  18                   clc
003155  3  65 rr                adc z80_c
003157  3  A0 09                ldy #9
003159  3  91 rr                sta (z80_ix),y
00315B  3  A9 00        b01785: lda #0
00315D  3  85 rr                sta vart
00315F  3  A9 00                lda #0
003161  3  A0 09                ldy #9
003163  3  D1 rr                cmp (z80_ix),y
003165  3  90 03                bcc *+5
003167  3  4C EA 31             jmp b02080
00316A  3  20 93 17             jsr cangl
00316D  3  F0 03                beq :+
00316F  3  4C 76 31             jmp b01837
003172  3               :
003172  3  A9 01                lda #1
003174  3  85 rr                sta vart
003176  3  A9 00        b01837: lda #0
003178  3  C5 rr                cmp vart
00317A  3  F0 03                beq *+5
00317C  3  4C B0 31             jmp b01958
00317F  3  A9 00                lda #0
003181  3  A0 08                ldy #8
003183  3  D1 rr                cmp (z80_ix),y
003185  3  90 03                bcc *+5
003187  3  4C B0 31             jmp b01958
00318A  3  A9 FF                lda #255
00318C  3  85 rr                sta z80_c
00318E  3  A0 08                ldy #8
003190  3  B1 rr                lda (z80_ix),y
003192  3  18                   clc
003193  3  65 rr                adc z80_c
003195  3  A0 08                ldy #8
003197  3  91 rr                sta (z80_ix),y
003199  3  20 93 17             jsr cangl
00319C  3  F0 03                beq :+
00319E  3  4C A5 31             jmp b01932
0031A1  3               :
0031A1  3  A9 02                lda #2
0031A3  3  85 rr                sta vart
0031A5  3  A0 08        b01932: ldy #8
0031A7  3  B1 rr                lda (z80_ix),y
0031A9  3  18                   clc
0031AA  3  69 01                adc #1
0031AC  3  A0 08                ldy #8
0031AE  3  91 rr                sta (z80_ix),y
0031B0  3  A9 00        b01958: lda #0
0031B2  3  C5 rr                cmp vart
0031B4  3  F0 03                beq *+5
0031B6  3  4C EA 31             jmp b02080
0031B9  3  A0 08                ldy #8
0031BB  3  B1 rr                lda (z80_ix),y
0031BD  3  C9 B0                cmp #176
0031BF  3  90 03                bcc *+5
0031C1  3  4C EA 31             jmp b02080
0031C4  3  A0 08                ldy #8
0031C6  3  B1 rr                lda (z80_ix),y
0031C8  3  18                   clc
0031C9  3  69 01                adc #1
0031CB  3  A0 08                ldy #8
0031CD  3  91 rr                sta (z80_ix),y
0031CF  3  20 93 17             jsr cangl
0031D2  3  F0 03                beq :+
0031D4  3  4C DB 31             jmp b02044
0031D7  3               :
0031D7  3  A9 03                lda #3
0031D9  3  85 rr                sta vart
0031DB  3  A9 FF        b02044: lda #255
0031DD  3  85 rr                sta z80_c
0031DF  3  A0 08                ldy #8
0031E1  3  B1 rr                lda (z80_ix),y
0031E3  3  18                   clc
0031E4  3  65 rr                adc z80_c
0031E6  3  A0 08                ldy #8
0031E8  3  91 rr                sta (z80_ix),y
0031EA  3  A9 00        b02080: lda #0
0031EC  3  C5 rr                cmp vart
0031EE  3  90 03                bcc *+5
0031F0  3  4C 3A 32             jmp b02243
0031F3  3  A9 03                lda #3
0031F5  3  C5 rr                cmp vard
0031F7  3  F0 03                beq *+5
0031F9  3  4C 3A 32             jmp b02243
0031FC  3  A9 F8                lda #248
0031FE  3  85 rr                sta z80_c
003200  3  A0 09                ldy #9
003202  3  B1 rr                lda (z80_ix),y
003204  3  18                   clc
003205  3  65 rr                adc z80_c
003207  3  A0 09                ldy #9
003209  3  91 rr                sta (z80_ix),y
00320B  3  A9 01                lda #1
00320D  3  85 rr                sta z80_b
00320F  3  20 40 1E             jsr sktyp
003212  3  B0 03                bcs :+
003214  3  4C 1B 32             jmp b02178
003217  3               :
003217  3  A9 00                lda #0
003219  3  85 rr                sta vart
00321B  3  A9 08        b02178: lda #8
00321D  3  85 rr                sta z80_b
00321F  3  20 40 1E             jsr sktyp
003222  3  B0 03                bcs :+
003224  3  4C 2B 32             jmp b02208
003227  3               :
003227  3  A9 00                lda #0
003229  3  85 rr                sta vart
00322B  3  A9 08        b02208: lda #8
00322D  3  85 rr                sta z80_c
00322F  3  A0 09                ldy #9
003231  3  B1 rr                lda (z80_ix),y
003233  3  18                   clc
003234  3  65 rr                adc z80_c
003236  3  A0 09                ldy #9
003238  3  91 rr                sta (z80_ix),y
00323A  3  A9 00        b02243: lda #0
00323C  3  85 rr                sta varq
00323E  3  A9 02                lda #2
003240  3  A0 0B                ldy #11
003242  3  D1 rr                cmp (z80_ix),y
003244  3  F0 03                beq *+5
003246  3  4C 6C 32             jmp b02339
003249  3  A9 00                lda #0
00324B  3  C5 rr                cmp varc
00324D  3  F0 03                beq *+5
00324F  3  4C 56 32             jmp b02298
003252  3  A9 01                lda #1
003254  3  85 rr                sta varq
003256  3  A9 03        b02298: lda #3
003258  3  C5 rr                cmp scno
00325A  3  F0 03                beq *+5
00325C  3  4C 6C 32             jmp b02339
00325F  3  A9 02                lda #2
003261  3  C5 rr                cmp varc
003263  3  F0 03                beq *+5
003265  3  4C 6C 32             jmp b02339
003268  3  A9 01                lda #1
00326A  3  85 rr                sta varq
00326C  3  A9 01        b02339: lda #1
00326E  3  A0 0B                ldy #11
003270  3  D1 rr                cmp (z80_ix),y
003272  3  F0 03                beq *+5
003274  3  4C 8D 32             jmp b02403
003277  3  A9 01                lda #1
003279  3  C5 rr                cmp scno
00327B  3  90 03                bcc *+5
00327D  3  4C 8D 32             jmp b02403
003280  3  A9 00                lda #0
003282  3  C5 rr                cmp varc
003284  3  F0 03                beq *+5
003286  3  4C 8D 32             jmp b02403
003289  3  A9 01                lda #1
00328B  3  85 rr                sta varq
00328D  3  A5 rr        b02403: lda vard
00328F  3  C9 02                cmp #2
003291  3  90 03                bcc *+5
003293  3  4C 53 33             jmp b02770
003296  3  A5 rr                lda varb
003298  3  A0 09                ldy #9
00329A  3  D1 rr                cmp (z80_ix),y
00329C  3  90 03                bcc *+5
00329E  3  4C E0 32             jmp b02557
0032A1  3  A9 00                lda #0
0032A3  3  C5 rr                cmp vart
0032A5  3  90 03                bcc *+5
0032A7  3  4C B1 32             jmp b02472
0032AA  3  A9 03                lda #3
0032AC  3  85 rr                sta vard
0032AE  3  4C DD 32             jmp b02552
0032B1  3  A9 00        b02472: lda #0
0032B3  3  C5 rr                cmp vard
0032B5  3  F0 03                beq *+5
0032B7  3  4C CD 32             jmp b02523
0032BA  3  A9 00                lda #0
0032BC  3  C5 rr                cmp varo
0032BE  3  90 03                bcc *+5
0032C0  3  4C C6 32             jmp b02510
0032C3  3  4C CA 32             jmp b02518
0032C6  3  A9 01        b02510: lda #1
0032C8  3  85 rr                sta vard
0032CA  3  4C DD 32     b02518: jmp b02552
0032CD  3  A9 00        b02523: lda #0
0032CF  3  C5 rr                cmp varp
0032D1  3  90 03                bcc *+5
0032D3  3  4C D9 32             jmp b02544
0032D6  3  4C DD 32             jmp b02552
0032D9  3  A9 00        b02544: lda #0
0032DB  3  85 rr                sta vard
0032DD  3  4C 50 33     b02552: jmp b02765
0032E0  3  A5 rr        b02557: lda varb
0032E2  3  A0 09                ldy #9
0032E4  3  D1 rr                cmp (z80_ix),y
0032E6  3  F0 03                beq *+5
0032E8  3  4C 14 33             jmp b02655
0032EB  3  A9 00                lda #0
0032ED  3  C5 rr                cmp vard
0032EF  3  F0 03                beq *+5
0032F1  3  4C 04 33             jmp b02626
0032F4  3  A9 00                lda #0
0032F6  3  C5 rr                cmp varo
0032F8  3  F0 03                beq *+5
0032FA  3  4C 01 33             jmp b02621
0032FD  3  A9 01                lda #1
0032FF  3  85 rr                sta vard
003301  3  4C 11 33     b02621: jmp b02650
003304  3  A9 00        b02626: lda #0
003306  3  C5 rr                cmp varp
003308  3  F0 03                beq *+5
00330A  3  4C 11 33             jmp b02650
00330D  3  A9 00                lda #0
00330F  3  85 rr                sta vard
003311  3  4C 50 33     b02650: jmp b02765
003314  3  A9 00        b02655: lda #0
003316  3  C5 rr                cmp vars
003318  3  90 03                bcc *+5
00331A  3  4C 24 33             jmp b02685
00331D  3  A9 02                lda #2
00331F  3  85 rr                sta vard
003321  3  4C 50 33             jmp b02765
003324  3  A9 00        b02685: lda #0
003326  3  C5 rr                cmp vard
003328  3  F0 03                beq *+5
00332A  3  4C 40 33             jmp b02736
00332D  3  A9 00                lda #0
00332F  3  C5 rr                cmp varo
003331  3  90 03                bcc *+5
003333  3  4C 39 33             jmp b02723
003336  3  4C 3D 33             jmp b02731
003339  3  A9 01        b02723: lda #1
00333B  3  85 rr                sta vard
00333D  3  4C 50 33     b02731: jmp b02765
003340  3  A9 00        b02736: lda #0
003342  3  C5 rr                cmp varp
003344  3  90 03                bcc *+5
003346  3  4C 4C 33             jmp b02757
003349  3  4C 50 33             jmp b02765
00334C  3  A9 00        b02757: lda #0
00334E  3  85 rr                sta vard
003350  3  4C 13 34     b02765: jmp b03125
003353  3  A0 08        b02770: ldy #8
003355  3  B1 rr                lda (z80_ix),y
003357  3  C5 rr                cmp vara
003359  3  90 03                bcc *+5
00335B  3  4C 9D 33             jmp b02907
00335E  3  A9 00                lda #0
003360  3  C5 rr                cmp varp
003362  3  90 03                bcc *+5
003364  3  4C 6E 33             jmp b02822
003367  3  A9 01                lda #1
003369  3  85 rr                sta vard
00336B  3  4C 9A 33             jmp b02902
00336E  3  A9 03        b02822: lda #3
003370  3  C5 rr                cmp vard
003372  3  F0 03                beq *+5
003374  3  4C 8A 33             jmp b02873
003377  3  A9 00                lda #0
003379  3  C5 rr                cmp vart
00337B  3  90 03                bcc *+5
00337D  3  4C 83 33             jmp b02860
003380  3  4C 87 33             jmp b02868
003383  3  A9 02        b02860: lda #2
003385  3  85 rr                sta vard
003387  3  4C 9A 33     b02868: jmp b02902
00338A  3  A9 00        b02873: lda #0
00338C  3  C5 rr                cmp vars
00338E  3  90 03                bcc *+5
003390  3  4C 96 33             jmp b02894
003393  3  4C 9A 33             jmp b02902
003396  3  A9 03        b02894: lda #3
003398  3  85 rr                sta vard
00339A  3  4C 13 34     b02902: jmp b03125
00339D  3  A5 rr        b02907: lda vara
00339F  3  A0 08                ldy #8
0033A1  3  D1 rr                cmp (z80_ix),y
0033A3  3  F0 03                beq *+5
0033A5  3  4C D7 33             jmp b03015
0033A8  3  A9 02                lda #2
0033AA  3  C5 rr                cmp vard
0033AC  3  F0 03                beq *+5
0033AE  3  4C C4 33             jmp b02981
0033B1  3  A9 00                lda #0
0033B3  3  C5 rr                cmp vars
0033B5  3  90 03                bcc *+5
0033B7  3  4C BD 33             jmp b02968
0033BA  3  4C C1 33             jmp b02976
0033BD  3  A9 03        b02968: lda #3
0033BF  3  85 rr                sta vard
0033C1  3  4C D4 33     b02976: jmp b03010
0033C4  3  A9 00        b02981: lda #0
0033C6  3  C5 rr                cmp vart
0033C8  3  90 03                bcc *+5
0033CA  3  4C D0 33             jmp b03002
0033CD  3  4C D4 33             jmp b03010
0033D0  3  A9 02        b03002: lda #2
0033D2  3  85 rr                sta vard
0033D4  3  4C 13 34     b03010: jmp b03125
0033D7  3  A9 00        b03015: lda #0
0033D9  3  C5 rr                cmp varo
0033DB  3  90 03                bcc *+5
0033DD  3  4C E7 33             jmp b03044
0033E0  3  A9 00                lda #0
0033E2  3  85 rr                sta vard
0033E4  3  4C 13 34             jmp b03125
0033E7  3  A9 02        b03044: lda #2
0033E9  3  C5 rr                cmp vard
0033EB  3  F0 03                beq *+5
0033ED  3  4C 03 34             jmp b03095
0033F0  3  A9 00                lda #0
0033F2  3  C5 rr                cmp vars
0033F4  3  90 03                bcc *+5
0033F6  3  4C FC 33             jmp b03083
0033F9  3  4C 00 34             jmp b03091
0033FC  3  A9 03        b03083: lda #3
0033FE  3  85 rr                sta vard
003400  3  4C 13 34     b03091: jmp b03125
003403  3  A9 00        b03095: lda #0
003405  3  C5 rr                cmp vart
003407  3  90 03                bcc *+5
003409  3  4C 0F 34             jmp b03117
00340C  3  4C 13 34             jmp b03125
00340F  3  A9 02        b03117: lda #2
003411  3  85 rr                sta vard
003413  3  A5 rr        b03125: lda vard
003415  3  A0 06                ldy #6
003417  3  91 rr                sta (z80_ix),y
003419  3  A9 09                lda #9
00341B  3  85 rr                sta z80_c
00341D  3  A0 06                ldy #6
00341F  3  B1 rr                lda (z80_ix),y
003421  3  18                   clc
003422  3  65 rr                adc z80_c
003424  3  A0 06                ldy #6
003426  3  91 rr                sta (z80_ix),y
003428  3  A9 00                lda #0
00342A  3  A0 0B                ldy #11
00342C  3  D1 rr                cmp (z80_ix),y
00342E  3  F0 03                beq *+5
003430  3  4C 6E 34             jmp b03310
003433  3  A9 00                lda #0
003435  3  C5 rr                cmp varc
003437  3  F0 03                beq *+5
003439  3  4C 4C 34             jmp b03244
00343C  3  A9 00                lda #0
00343E  3  85 rr                sta varo
003440  3  A9 00                lda #0
003442  3  85 rr                sta varp
003444  3  A9 00                lda #0
003446  3  85 rr                sta vars
003448  3  A9 00                lda #0
00344A  3  85 rr                sta vart
00344C  3  A9 00        b03244: lda #0
00344E  3  C5 rr                cmp scno
003450  3  F0 03                beq *+5
003452  3  4C 6E 34             jmp b03310
003455  3  A9 02                lda #2
003457  3  C5 rr                cmp varc
003459  3  F0 03                beq *+5
00345B  3  4C 6E 34             jmp b03310
00345E  3  A9 00                lda #0
003460  3  85 rr                sta varo
003462  3  A9 00                lda #0
003464  3  85 rr                sta varp
003466  3  A9 00                lda #0
003468  3  85 rr                sta vars
00346A  3  A9 00                lda #0
00346C  3  85 rr                sta vart
00346E  3  A9 00        b03310: lda #0
003470  3  C5 rr                cmp vard
003472  3  F0 03                beq *+5
003474  3  4C 0B 35             jmp b03640
003477  3  A9 00                lda #0
003479  3  C5 rr                cmp varo
00347B  3  90 03                bcc *+5
00347D  3  4C 0B 35             jmp b03640
003480  3  A9 02                lda #2
003482  3  C5 rr                cmp varo
003484  3  F0 03                beq *+5
003486  3  4C 98 34             jmp b03395
003489  3  A9 FF                lda #255
00348B  3  85 rr                sta z80_c
00348D  3  A0 09                ldy #9
00348F  3  B1 rr                lda (z80_ix),y
003491  3  18                   clc
003492  3  65 rr                adc z80_c
003494  3  A0 09                ldy #9
003496  3  91 rr                sta (z80_ix),y
003498  3  A9 03        b03395: lda #3
00349A  3  C5 rr                cmp varo
00349C  3  F0 03                beq *+5
00349E  3  4C AC 34             jmp b03438
0034A1  3  A0 09                ldy #9
0034A3  3  B1 rr                lda (z80_ix),y
0034A5  3  18                   clc
0034A6  3  69 01                adc #1
0034A8  3  A0 09                ldy #9
0034AA  3  91 rr                sta (z80_ix),y
0034AC  3  A9 00        b03438: lda #0
0034AE  3  A0 08                ldy #8
0034B0  3  D1 rr                cmp (z80_ix),y
0034B2  3  90 03                bcc *+5
0034B4  3  4C C6 34             jmp b03495
0034B7  3  A9 FF                lda #255
0034B9  3  85 rr                sta z80_c
0034BB  3  A0 08                ldy #8
0034BD  3  B1 rr                lda (z80_ix),y
0034BF  3  18                   clc
0034C0  3  65 rr                adc z80_c
0034C2  3  A0 08                ldy #8
0034C4  3  91 rr                sta (z80_ix),y
0034C6  3  A9 00        b03495: lda #0
0034C8  3  A0 08                ldy #8
0034CA  3  D1 rr                cmp (z80_ix),y
0034CC  3  90 03                bcc *+5
0034CE  3  4C E0 34             jmp b03552
0034D1  3  A9 FF                lda #255
0034D3  3  85 rr                sta z80_c
0034D5  3  A0 08                ldy #8
0034D7  3  B1 rr                lda (z80_ix),y
0034D9  3  18                   clc
0034DA  3  65 rr                adc z80_c
0034DC  3  A0 08                ldy #8
0034DE  3  91 rr                sta (z80_ix),y
0034E0  3  A9 01        b03552: lda #1
0034E2  3  C5 rr                cmp varq
0034E4  3  F0 03                beq *+5
0034E6  3  4C 0B 35             jmp b03640
0034E9  3  A9 00                lda #0
0034EB  3  A0 08                ldy #8
0034ED  3  D1 rr                cmp (z80_ix),y
0034EF  3  90 03                bcc *+5
0034F1  3  4C 0B 35             jmp b03640
0034F4  3  20 29 17             jsr cangu
0034F7  3  F0 03                beq :+
0034F9  3  4C 0B 35             jmp b03640
0034FC  3               :
0034FC  3  A9 FF                lda #255
0034FE  3  85 rr                sta z80_c
003500  3  A0 08                ldy #8
003502  3  B1 rr                lda (z80_ix),y
003504  3  18                   clc
003505  3  65 rr                adc z80_c
003507  3  A0 08                ldy #8
003509  3  91 rr                sta (z80_ix),y
00350B  3  A9 01        b03640: lda #1
00350D  3  C5 rr                cmp vard
00350F  3  F0 03                beq *+5
003511  3  4C 79 35             jmp b03868
003514  3  A9 00                lda #0
003516  3  C5 rr                cmp varp
003518  3  90 03                bcc *+5
00351A  3  4C 79 35             jmp b03868
00351D  3  A9 02                lda #2
00351F  3  C5 rr                cmp varp
003521  3  F0 03                beq *+5
003523  3  4C 35 35             jmp b03725
003526  3  A9 FF                lda #255
003528  3  85 rr                sta z80_c
00352A  3  A0 09                ldy #9
00352C  3  B1 rr                lda (z80_ix),y
00352E  3  18                   clc
00352F  3  65 rr                adc z80_c
003531  3  A0 09                ldy #9
003533  3  91 rr                sta (z80_ix),y
003535  3  A9 03        b03725: lda #3
003537  3  C5 rr                cmp varp
003539  3  F0 03                beq *+5
00353B  3  4C 49 35             jmp b03768
00353E  3  A0 09                ldy #9
003540  3  B1 rr                lda (z80_ix),y
003542  3  18                   clc
003543  3  69 01                adc #1
003545  3  A0 09                ldy #9
003547  3  91 rr                sta (z80_ix),y
003549  3  A0 08        b03768: ldy #8
00354B  3  B1 rr                lda (z80_ix),y
00354D  3  18                   clc
00354E  3  69 02                adc #2
003550  3  91 rr                sta (z80_ix),y
003552  3  A9 01                lda #1
003554  3  C5 rr                cmp varq
003556  3  F0 03                beq *+5
003558  3  4C 79 35             jmp b03868
00355B  3  A0 08                ldy #8
00355D  3  B1 rr                lda (z80_ix),y
00355F  3  C9 B0                cmp #176
003561  3  90 03                bcc *+5
003563  3  4C 79 35             jmp b03868
003566  3  20 5E 17             jsr cangd
003569  3  F0 03                beq :+
00356B  3  4C 79 35             jmp b03868
00356E  3               :
00356E  3  A0 08                ldy #8
003570  3  B1 rr                lda (z80_ix),y
003572  3  18                   clc
003573  3  69 01                adc #1
003575  3  A0 08                ldy #8
003577  3  91 rr                sta (z80_ix),y
003579  3  A9 02        b03868: lda #2
00357B  3  C5 rr                cmp vard
00357D  3  F0 03                beq *+5
00357F  3  4C E7 35             jmp b04097
003582  3  A9 00                lda #0
003584  3  C5 rr                cmp vars
003586  3  90 03                bcc *+5
003588  3  4C E7 35             jmp b04097
00358B  3  A9 02                lda #2
00358D  3  C5 rr                cmp vars
00358F  3  F0 03                beq *+5
003591  3  4C A3 35             jmp b03954
003594  3  A9 FF                lda #255
003596  3  85 rr                sta z80_c
003598  3  A0 08                ldy #8
00359A  3  B1 rr                lda (z80_ix),y
00359C  3  18                   clc
00359D  3  65 rr                adc z80_c
00359F  3  A0 08                ldy #8
0035A1  3  91 rr                sta (z80_ix),y
0035A3  3  A9 03        b03954: lda #3
0035A5  3  C5 rr                cmp vars
0035A7  3  F0 03                beq *+5
0035A9  3  4C B7 35             jmp b03996
0035AC  3  A0 08                ldy #8
0035AE  3  B1 rr                lda (z80_ix),y
0035B0  3  18                   clc
0035B1  3  69 01                adc #1
0035B3  3  A0 08                ldy #8
0035B5  3  91 rr                sta (z80_ix),y
0035B7  3  A0 09        b03996: ldy #9
0035B9  3  B1 rr                lda (z80_ix),y
0035BB  3  18                   clc
0035BC  3  69 02                adc #2
0035BE  3  91 rr                sta (z80_ix),y
0035C0  3  A9 01                lda #1
0035C2  3  C5 rr                cmp varq
0035C4  3  F0 03                beq *+5
0035C6  3  4C E7 35             jmp b04097
0035C9  3  A0 09                ldy #9
0035CB  3  B1 rr                lda (z80_ix),y
0035CD  3  C9 C0                cmp #192
0035CF  3  90 03                bcc *+5
0035D1  3  4C E7 35             jmp b04097
0035D4  3  20 A5 17             jsr cangr
0035D7  3  F0 03                beq :+
0035D9  3  4C E7 35             jmp b04097
0035DC  3               :
0035DC  3  A0 09                ldy #9
0035DE  3  B1 rr                lda (z80_ix),y
0035E0  3  18                   clc
0035E1  3  69 01                adc #1
0035E3  3  A0 09                ldy #9
0035E5  3  91 rr                sta (z80_ix),y
0035E7  3  A9 03        b04097: lda #3
0035E9  3  C5 rr                cmp vard
0035EB  3  F0 03                beq *+5
0035ED  3  4C 59 36             jmp b04334
0035F0  3  A9 00                lda #0
0035F2  3  C5 rr                cmp vart
0035F4  3  90 03                bcc *+5
0035F6  3  4C 59 36             jmp b04334
0035F9  3  A9 02                lda #2
0035FB  3  C5 rr                cmp vart
0035FD  3  F0 03                beq *+5
0035FF  3  4C 11 36             jmp b04182
003602  3  A9 FF                lda #255
003604  3  85 rr                sta z80_c
003606  3  A0 08                ldy #8
003608  3  B1 rr                lda (z80_ix),y
00360A  3  18                   clc
00360B  3  65 rr                adc z80_c
00360D  3  A0 08                ldy #8
00360F  3  91 rr                sta (z80_ix),y
003611  3  A9 03        b04182: lda #3
003613  3  C5 rr                cmp vart
003615  3  F0 03                beq *+5
003617  3  4C 25 36             jmp b04225
00361A  3  A0 08                ldy #8
00361C  3  B1 rr                lda (z80_ix),y
00361E  3  18                   clc
00361F  3  69 01                adc #1
003621  3  A0 08                ldy #8
003623  3  91 rr                sta (z80_ix),y
003625  3  A0 09        b04225: ldy #9
003627  3  B1 rr                lda (z80_ix),y
003629  3  38                   sec
00362A  3  E9 02                sbc #2
00362C  3  91 rr                sta (z80_ix),y
00362E  3  A9 01                lda #1
003630  3  C5 rr                cmp varq
003632  3  F0 03                beq *+5
003634  3  4C 59 36             jmp b04334
003637  3  A9 00                lda #0
003639  3  A0 09                ldy #9
00363B  3  D1 rr                cmp (z80_ix),y
00363D  3  90 03                bcc *+5
00363F  3  4C 59 36             jmp b04334
003642  3  20 93 17             jsr cangl
003645  3  F0 03                beq :+
003647  3  4C 59 36             jmp b04334
00364A  3               :
00364A  3  A9 FF                lda #255
00364C  3  85 rr                sta z80_c
00364E  3  A0 09                ldy #9
003650  3  B1 rr                lda (z80_ix),y
003652  3  18                   clc
003653  3  65 rr                adc z80_c
003655  3  A0 09                ldy #9
003657  3  91 rr                sta (z80_ix),y
003659  3  A0 08        b04334: ldy #8
00365B  3  B1 rr                lda (z80_ix),y
00365D  3  85 rr                sta varo
00365F  3  A5 rr                lda varo
003661  3  4A                   lsr a
003662  3  85 rr                sta varo
003664  3  A5 rr                lda varo
003666  3  0A                   asl a
003667  3  85 rr                sta varo
003669  3  A5 rr                lda varo
00366B  3  A0 08                ldy #8
00366D  3  D1 rr                cmp (z80_ix),y
00366F  3  90 03                bcc *+5
003671  3  4C 9A 36             jmp b04477
003674  3  A9 00                lda #0
003676  3  C5 rr                cmp vard
003678  3  F0 03                beq *+5
00367A  3  4C 8F 36             jmp b04451
00367D  3  A9 FF                lda #255
00367F  3  85 rr                sta z80_c
003681  3  A0 08                ldy #8
003683  3  B1 rr                lda (z80_ix),y
003685  3  18                   clc
003686  3  65 rr                adc z80_c
003688  3  A0 08                ldy #8
00368A  3  91 rr                sta (z80_ix),y
00368C  3  4C 9A 36             jmp b04477
00368F  3  A0 08        b04451: ldy #8
003691  3  B1 rr                lda (z80_ix),y
003693  3  18                   clc
003694  3  69 01                adc #1
003696  3  A0 08                ldy #8
003698  3  91 rr                sta (z80_ix),y
00369A  3  A0 09        b04477: ldy #9
00369C  3  B1 rr                lda (z80_ix),y
00369E  3  85 rr                sta varp
0036A0  3  A5 rr                lda varp
0036A2  3  4A                   lsr a
0036A3  3  85 rr                sta varp
0036A5  3  A5 rr                lda varp
0036A7  3  0A                   asl a
0036A8  3  85 rr                sta varp
0036AA  3  A5 rr                lda varp
0036AC  3  A0 09                ldy #9
0036AE  3  D1 rr                cmp (z80_ix),y
0036B0  3  90 03                bcc *+5
0036B2  3  4C DB 36             jmp b04620
0036B5  3  A9 02                lda #2
0036B7  3  C5 rr                cmp vard
0036B9  3  F0 03                beq *+5
0036BB  3  4C CC 36             jmp b04585
0036BE  3  A0 09                ldy #9
0036C0  3  B1 rr                lda (z80_ix),y
0036C2  3  18                   clc
0036C3  3  69 01                adc #1
0036C5  3  A0 09                ldy #9
0036C7  3  91 rr                sta (z80_ix),y
0036C9  3  4C DB 36             jmp b04620
0036CC  3  A9 FF        b04585: lda #255
0036CE  3  85 rr                sta z80_c
0036D0  3  A0 09                ldy #9
0036D2  3  B1 rr                lda (z80_ix),y
0036D4  3  18                   clc
0036D5  3  65 rr                adc z80_c
0036D7  3  A0 09                ldy #9
0036D9  3  91 rr                sta (z80_ix),y
0036DB  3  A5 rr        b04620: lda vard
0036DD  3  A0 0A                ldy #10
0036DF  3  91 rr                sta (z80_ix),y
0036E1  3                       ; SPRITEINK command
0036E1  3  A9 06                lda #6
0036E3  3  A0 0A                ldy #10
0036E5  3  91 rr                sta (z80_ix),y
0036E7  3  A9 02                lda #2
0036E9  3  A0 0B                ldy #11
0036EB  3  D1 rr                cmp (z80_ix),y
0036ED  3  F0 03                beq *+5
0036EF  3  4C F2 36             jmp b04684
0036F2  3                       ; SPRITEINK command
0036F2  3  A9 01        b04684: lda #1
0036F4  3  A0 0B                ldy #11
0036F6  3  D1 rr                cmp (z80_ix),y
0036F8  3  F0 03                beq *+5
0036FA  3  4C FD 36             jmp b04713
0036FD  3                       ; SPRITEINK command
0036FD  3  60           b04713: rts
0036FE  3               evnt02:
0036FE  3  A9 00                lda #0
003700  3  C5 rr                cmp clock
003702  3  F0 03                beq *+5
003704  3  4C 55 37             jmp c00181
003707  3  A0 0A                ldy #10
003709  3  B1 rr                lda (z80_ix),y
00370B  3  38                   sec
00370C  3  E9 01                sbc #1
00370E  3  A0 0A                ldy #10
003710  3  91 rr                sta (z80_ix),y
003712  3  A9 FA                lda #250
003714  3  A0 0A                ldy #10
003716  3  D1 rr                cmp (z80_ix),y
003718  3  F0 03                beq *+5
00371A  3  4C 55 37             jmp c00181
00371D  3  A5 rr                lda vara
00371F  3  A0 08                ldy #8
003721  3  91 rr                sta (z80_ix),y
003723  3  A5 rr                lda varb
003725  3  A0 09                ldy #9
003727  3  91 rr                sta (z80_ix),y
003729  3  A9 00                lda #0
00372B  3  85 rr                sta z80_b
00372D  3  20 40 1E             jsr sktyp
003730  3  B0 03                bcs :+
003732  3  4C 55 37             jmp c00181
003735  3               :
003735  3  AD 81 1E             lda skptr
003738  3  85 rr                sta z80_x
00373A  3  AD 82 1E             lda skptr+1
00373D  3  85 rr                sta z80_i
00373F  3  A9 00                lda #0
003741  3  A0 0B                ldy #11
003743  3  91 rr                sta (z80_ix),y
003745  3  AD 12 1C             lda ogptr
003748  3  85 rr                sta z80_x
00374A  3  AD 13 1C             lda ogptr+1
00374D  3  85 rr                sta z80_i
00374F  3  A9 FF                lda #255
003751  3  A0 05                ldy #5
003753  3  91 rr                sta (z80_ix),y
003755  3  A9 03        c00181: lda #3
003757  3  C5 rr                cmp varg
003759  3  F0 03                beq *+5
00375B  3  4C 96 37             jmp c00311
00375E  3  A5 rr                lda vara
003760  3  A0 08                ldy #8
003762  3  91 rr                sta (z80_ix),y
003764  3  A5 rr                lda varb
003766  3  A0 09                ldy #9
003768  3  91 rr                sta (z80_ix),y
00376A  3  A9 00                lda #0
00376C  3  85 rr                sta z80_b
00376E  3  20 40 1E             jsr sktyp
003771  3  B0 03                bcs :+
003773  3  4C 96 37             jmp c00311
003776  3               :
003776  3  AD 81 1E             lda skptr
003779  3  85 rr                sta z80_x
00377B  3  AD 82 1E             lda skptr+1
00377E  3  85 rr                sta z80_i
003780  3  A9 00                lda #0
003782  3  A0 0B                ldy #11
003784  3  91 rr                sta (z80_ix),y
003786  3  AD 12 1C             lda ogptr
003789  3  85 rr                sta z80_x
00378B  3  AD 13 1C             lda ogptr+1
00378E  3  85 rr                sta z80_i
003790  3  A9 FF                lda #255
003792  3  A0 05                ldy #5
003794  3  91 rr                sta (z80_ix),y
003796  3  A9 00        c00311: lda #0
003798  3  C5 rr                cmp varc
00379A  3  F0 03                beq *+5
00379C  3  4C A2 37             jmp c00333
00379F  3  20 FF 1D             jsr animsp
0037A2  3  A9 01        c00333: lda #1
0037A4  3  85 rr                sta z80_b
0037A6  3  20 40 1E             jsr sktyp
0037A9  3  B0 03                bcs :+
0037AB  3  4C AC 38             jmp c00887
0037AE  3               :
0037AE  3  AD 12 1C             lda ogptr
0037B1  3  85 rr                sta z80_x
0037B3  3  AD 13 1C             lda ogptr+1
0037B6  3  85 rr                sta z80_i
0037B8  3  A0 08                ldy #8
0037BA  3  B1 rr                lda (z80_ix),y
0037BC  3  85 rr                sta varo
0037BE  3  A0 09                ldy #9
0037C0  3  B1 rr                lda (z80_ix),y
0037C2  3  85 rr                sta varp
0037C4  3  AD 81 1E             lda skptr
0037C7  3  85 rr                sta z80_x
0037C9  3  AD 82 1E             lda skptr+1
0037CC  3  85 rr                sta z80_i
0037CE  3  A5 rr                lda varo
0037D0  3  85 rr                sta varq
0037D2  3  A0 08                ldy #8
0037D4  3  B1 rr                lda (z80_ix),y
0037D6  3  C5 rr                cmp varo
0037D8  3  90 03                bcc *+5
0037DA  3  4C ED 37             jmp c00485
0037DD  3  A0 08                ldy #8
0037DF  3  B1 rr                lda (z80_ix),y
0037E1  3  85 rr                sta z80_c
0037E3  3  A5 rr                lda varq
0037E5  3  38                   sec
0037E6  3  E5 rr                sbc z80_c
0037E8  3  85 rr                sta varq
0037EA  3  4C FE 37             jmp c00523
0037ED  3  A0 08        c00485: ldy #8
0037EF  3  B1 rr                lda (z80_ix),y
0037F1  3  85 rr                sta varq
0037F3  3  A5 rr                lda varo
0037F5  3  85 rr                sta z80_c
0037F7  3  A5 rr                lda varq
0037F9  3  38                   sec
0037FA  3  E5 rr                sbc z80_c
0037FC  3  85 rr                sta varq
0037FE  3  A5 rr        c00523: lda varq
003800  3  C9 05                cmp #5
003802  3  90 03                bcc *+5
003804  3  4C AC 38             jmp c00887
003807  3  A5 rr                lda varp
003809  3  85 rr                sta varq
00380B  3  A0 09                ldy #9
00380D  3  B1 rr                lda (z80_ix),y
00380F  3  C5 rr                cmp varp
003811  3  90 03                bcc *+5
003813  3  4C 26 38             jmp c00606
003816  3  A0 09                ldy #9
003818  3  B1 rr                lda (z80_ix),y
00381A  3  85 rr                sta z80_c
00381C  3  A5 rr                lda varq
00381E  3  38                   sec
00381F  3  E5 rr                sbc z80_c
003821  3  85 rr                sta varq
003823  3  4C 37 38             jmp c00644
003826  3  A0 09        c00606: ldy #9
003828  3  B1 rr                lda (z80_ix),y
00382A  3  85 rr                sta varq
00382C  3  A5 rr                lda varp
00382E  3  85 rr                sta z80_c
003830  3  A5 rr                lda varq
003832  3  38                   sec
003833  3  E5 rr                sbc z80_c
003835  3  85 rr                sta varq
003837  3  A5 rr        c00644: lda varq
003839  3  C9 05                cmp #5
00383B  3  90 03                bcc *+5
00383D  3  4C AC 38             jmp c00887
003840  3  A9 32                lda #<50
003842  3  85 rr                sta z80_l
003844  3  A9 00                lda #>50
003846  3  85 rr                sta z80_h
003848  3  20 E1 13             jsr addsc
00384B  3                       ; COLOUR command
00384B  3  A9 01                lda #1
00384D  3  85 rr                sta chary
00384F  3  A9 1B                lda #27
003851  3  85 rr                sta charx
003853  3  20 94 13             jsr dscor
003856  3  A9 04                lda #4
003858  3  85 rr                sta chary
00385A  3  A9 1B                lda #27
00385C  3  85 rr                sta charx
00385E  3  A9 64                lda #100
003860  3  A0 0C                ldy #12
003862  3  91 rr                sta (z80_ix),y
003864  3  A9 08                lda #8
003866  3  A0 05                ldy #5
003868  3  91 rr                sta (z80_ix),y
00386A  3  AD 12 1C             lda ogptr
00386D  3  85 rr                sta z80_x
00386F  3  AD 13 1C             lda ogptr+1
003872  3  85 rr                sta z80_i
003874  3  A5 rr                lda vara
003876  3  A0 08                ldy #8
003878  3  91 rr                sta (z80_ix),y
00387A  3  A5 rr                lda varb
00387C  3  A0 09                ldy #9
00387E  3  91 rr                sta (z80_ix),y
003880  3  A9 00                lda #0
003882  3  85 rr                sta z80_b
003884  3  20 40 1E             jsr sktyp
003887  3  B0 03                bcs :+
003889  3  4C AC 38             jmp c00887
00388C  3               :
00388C  3  AD 81 1E             lda skptr
00388F  3  85 rr                sta z80_x
003891  3  AD 82 1E             lda skptr+1
003894  3  85 rr                sta z80_i
003896  3  A9 00                lda #0
003898  3  A0 0B                ldy #11
00389A  3  91 rr                sta (z80_ix),y
00389C  3  AD 12 1C             lda ogptr
00389F  3  85 rr                sta z80_x
0038A1  3  AD 13 1C             lda ogptr+1
0038A4  3  85 rr                sta z80_i
0038A6  3  A9 FF                lda #255
0038A8  3  A0 05                ldy #5
0038AA  3  91 rr                sta (z80_ix),y
0038AC  3               c00887: ; SPRITEINK command
0038AC  3  60                   rts
0038AD  3               evnt03:
0038AD  3                       ; SPRITEINK command
0038AD  3  A0 08                ldy #8
0038AF  3  B1 rr                lda (z80_ix),y
0038B1  3  C9 C8                cmp #200
0038B3  3  90 03                bcc *+5
0038B5  3  4C F8 39             jmp d00666
0038B8  3  A9 00                lda #0
0038BA  3  85 rr                sta z80_b
0038BC  3  20 40 1E             jsr sktyp
0038BF  3  B0 03                bcs :+
0038C1  3  4C F8 39             jmp d00666
0038C4  3               :
0038C4  3  A9 96                lda #<150
0038C6  3  85 rr                sta z80_l
0038C8  3  A9 00                lda #>150
0038CA  3  85 rr                sta z80_h
0038CC  3  20 E1 13             jsr addsc
0038CF  3  A9 01                lda #1
0038D1  3  85 rr                sta chary
0038D3  3  A9 1B                lda #27
0038D5  3  85 rr                sta charx
0038D7  3  20 94 13             jsr dscor
0038DA  3  A9 04                lda #4
0038DC  3  85 rr                sta chary
0038DE  3  A9 1B                lda #27
0038E0  3  85 rr                sta charx
0038E2  3  AD 81 1E             lda skptr
0038E5  3  85 rr                sta z80_x
0038E7  3  AD 82 1E             lda skptr+1
0038EA  3  85 rr                sta z80_i
0038EC  3  A9 00                lda #0
0038EE  3  85 rr                sta varg
0038F0  3  A5 rr                lda vari
0038F2  3  18                   clc
0038F3  3  69 01                adc #1
0038F5  3  85 rr                sta vari
0038F7  3  A5 rr                lda vari
0038F9  3  85 rr                sta varo
0038FB  3  A9 19                lda #25
0038FD  3  C5 rr                cmp vari
0038FF  3  F0 03                beq *+5
003901  3  4C 0B 39             jmp d00197
003904  3  A5 rr                lda numlif
003906  3  18                   clc
003907  3  69 01                adc #1
003909  3  85 rr                sta numlif
00390B  3  A9 32        d00197: lda #50
00390D  3  C5 rr                cmp vari
00390F  3  F0 03                beq *+5
003911  3  4C 1B 39             jmp d00230
003914  3  A5 rr                lda numlif
003916  3  18                   clc
003917  3  69 01                adc #1
003919  3  85 rr                sta numlif
00391B  3  A5 rr        d00230: lda vari
00391D  3  C5 rr                cmp varo
00391F  3  90 03                bcc *+5
003921  3  4C 5E 39             jmp d00363
003924  3  A9 02                lda #2
003926  3  85 rr                sta chary
003928  3  A9 1A                lda #26
00392A  3  85 rr                sta charx
00392C  3  A9 18                lda #24
00392E  3  20 D3 19             jsr dmsg
003931  3  A9 02                lda #2
003933  3  85 rr                sta chary
003935  3  A9 1D                lda #29
003937  3  85 rr                sta charx
003939  3  A9 18                lda #24
00393B  3  20 D3 19             jsr dmsg
00393E  3  A9 02                lda #2
003940  3  85 rr                sta chary
003942  3  A9 1B                lda #27
003944  3  85 rr                sta charx
003946  3  A5 rr                lda numlif
003948  3  85 rr                sta loopa
00394A  3  A5 rr        d00323: lda charx
00394C  3  85 rr                sta dispx
00394E  3  A5 rr                lda chary
003950  3  85 rr                sta dispy
003952  3  A9 57                lda #87
003954  3  20 55 15             jsr pattr
003957  3  C6 rr                dec loopa
003959  3  F0 03                beq :+
00395B  3  4C 4A 39             jmp d00323
00395E  3               :
00395E  3  A5 rr        d00363: lda varj
003960  3  18                   clc
003961  3  69 01                adc #1
003963  3  85 rr                sta varj
003965  3  A9 0D                lda #13
003967  3  85 rr                sta chary
003969  3  A9 1D                lda #29
00396B  3  85 rr                sta charx
00396D  3  A9 18                lda #24
00396F  3  20 D3 19             jsr dmsg
003972  3  A9 0D                lda #13
003974  3  85 rr                sta chary
003976  3  A9 1D                lda #29
003978  3  85 rr                sta charx
00397A  3  A5 rr                lda vari
00397C  3  20 DB 1E             jsr disply
00397F  3  A5 rr                lda scno
003981  3  C9 02                cmp #2
003983  3  90 03                bcc *+5
003985  3  4C A3 39             jmp d00497
003988  3  A9 06                lda #6
00398A  3  C5 rr                cmp varj
00398C  3  F0 03                beq *+5
00398E  3  4C A0 39             jmp d00492
003991  3  A9 00                lda #0
003993  3  85 rr                sta varj
003995  3  A9 00                lda #0
003997  3  85 rr                sta scno
003999  3  20 57 1F             jsr nwscr
00399C  3  A9 01                lda #1
00399E  3  85 rr                sta restfl
0039A0  3  4C E2 39     d00492: jmp d00620
0039A3  3  A9 07        d00497: lda #7
0039A5  3  C5 rr                cmp varj
0039A7  3  F0 03                beq *+5
0039A9  3  4C E2 39             jmp d00620
0039AC  3  A9 07                lda #7
0039AE  3  C5 rr                cmp varf
0039B0  3  F0 03                beq *+5
0039B2  3  4C D3 39             jmp d00591
0039B5  3  A9 00                lda #0
0039B7  3  85 rr                sta varf
0039B9  3  A9 63                lda #99
0039BB  3  85 rr                sta varj
0039BD  3  A9 04                lda #4
0039BF  3  85 rr                sta scno
0039C1  3  20 57 1F             jsr nwscr
0039C4  3  A5 rr                lda varr
0039C6  3  18                   clc
0039C7  3  69 01                adc #1
0039C9  3  85 rr                sta varr
0039CB  3  A9 01                lda #1
0039CD  3  85 rr                sta restfl
0039CF  3  60                   rts
0039D0  3  4C E2 39             jmp d00620
0039D3  3  A9 00        d00591: lda #0
0039D5  3  85 rr                sta varj
0039D7  3  A9 05                lda #5
0039D9  3  85 rr                sta scno
0039DB  3  20 57 1F             jsr nwscr
0039DE  3  A9 01                lda #1
0039E0  3  85 rr                sta restfl
0039E2  3  AD 12 1C     d00620: lda ogptr
0039E5  3  85 rr                sta z80_x
0039E7  3  AD 13 1C             lda ogptr+1
0039EA  3  85 rr                sta z80_i
0039EC  3  A9 C8                lda #200
0039EE  3  A0 08                ldy #8
0039F0  3  91 rr                sta (z80_ix),y
0039F2  3  A9 1E                lda #30
0039F4  3  A0 0C                ldy #12
0039F6  3  91 rr                sta (z80_ix),y
0039F8  3  A9 00        d00666: lda #0
0039FA  3  A0 0C                ldy #12
0039FC  3  D1 rr                cmp (z80_ix),y
0039FE  3  90 03                bcc *+5
003A00  3  4C B2 3B             jmp d01577
003A03  3  A0 0C                ldy #12
003A05  3  B1 rr                lda (z80_ix),y
003A07  3  38                   sec
003A08  3  E9 01                sbc #1
003A0A  3  A0 0C                ldy #12
003A0C  3  91 rr                sta (z80_ix),y
003A0E  3  A5 rr                lda varr
003A10  3  85 rr                sta varo
003A12  3  A9 00                lda #0
003A14  3  85 rr                sta varr
003A16  3  A9 1D                lda #29
003A18  3  A0 0C                ldy #12
003A1A  3  D1 rr                cmp (z80_ix),y
003A1C  3  F0 03                beq *+5
003A1E  3  4C 29 3A             jmp d00770
003A21  3  A9 C4                lda #196
003A23  3  85 rr                sta varr
003A25  3  A9 03                lda #3
003A27  3  85 rr                sta varq
003A29  3  A9 1A        d00770: lda #26
003A2B  3  A0 0C                ldy #12
003A2D  3  D1 rr                cmp (z80_ix),y
003A2F  3  F0 03                beq *+5
003A31  3  4C 3C 3A             jmp d00809
003A34  3  A9 26                lda #38
003A36  3  85 rr                sta varr
003A38  3  A9 03                lda #3
003A3A  3  85 rr                sta varq
003A3C  3  A9 17        d00809: lda #23
003A3E  3  A0 0C                ldy #12
003A40  3  D1 rr                cmp (z80_ix),y
003A42  3  F0 03                beq *+5
003A44  3  4C CF 3A             jmp d01110
003A47  3  A9 54                lda #84
003A49  3  85 rr                sta varr
003A4B  3  A9 02                lda #2
003A4D  3  85 rr                sta varq
003A4F  3  A9 10                lda #16
003A51  3  85 rr                sta chary
003A53  3  A9 1D                lda #29
003A55  3  85 rr                sta charx
003A57  3  A5 rr                lda charx
003A59  3  85 rr                sta dispx
003A5B  3  A5 rr                lda chary
003A5D  3  85 rr                sta dispy
003A5F  3  A9 39                lda #57
003A61  3  20 55 15             jsr pattr
003A64  3  A5 rr                lda charx
003A66  3  85 rr                sta dispx
003A68  3  A5 rr                lda chary
003A6A  3  85 rr                sta dispy
003A6C  3  A9 39                lda #57
003A6E  3  20 55 15             jsr pattr
003A71  3  A9 11                lda #17
003A73  3  85 rr                sta chary
003A75  3  A9 1D                lda #29
003A77  3  85 rr                sta charx
003A79  3  A5 rr                lda charx
003A7B  3  85 rr                sta dispx
003A7D  3  A5 rr                lda chary
003A7F  3  85 rr                sta dispy
003A81  3  A9 30                lda #48
003A83  3  20 55 15             jsr pattr
003A86  3  A5 rr                lda charx
003A88  3  85 rr                sta dispx
003A8A  3  A5 rr                lda chary
003A8C  3  85 rr                sta dispy
003A8E  3  A9 58                lda #88
003A90  3  20 55 15             jsr pattr
003A93  3  A5 rr                lda charx
003A95  3  85 rr                sta dispx
003A97  3  A5 rr                lda chary
003A99  3  85 rr                sta dispy
003A9B  3  A9 39                lda #57
003A9D  3  20 55 15             jsr pattr
003AA0  3  A9 12                lda #18
003AA2  3  85 rr                sta chary
003AA4  3  A9 1D                lda #29
003AA6  3  85 rr                sta charx
003AA8  3  A5 rr                lda charx
003AAA  3  85 rr                sta dispx
003AAC  3  A5 rr                lda chary
003AAE  3  85 rr                sta dispy
003AB0  3  A9 39                lda #57
003AB2  3  20 55 15             jsr pattr
003AB5  3  A5 rr                lda charx
003AB7  3  85 rr                sta dispx
003AB9  3  A5 rr                lda chary
003ABB  3  85 rr                sta dispy
003ABD  3  A9 59                lda #89
003ABF  3  20 55 15             jsr pattr
003AC2  3  A5 rr                lda charx
003AC4  3  85 rr                sta dispx
003AC6  3  A5 rr                lda chary
003AC8  3  85 rr                sta dispy
003ACA  3  A9 39                lda #57
003ACC  3  20 55 15             jsr pattr
003ACF  3  A9 14        d01110: lda #20
003AD1  3  A0 0C                ldy #12
003AD3  3  D1 rr                cmp (z80_ix),y
003AD5  3  F0 03                beq *+5
003AD7  3  4C E2 3A             jmp d01149
003ADA  3  A9 01                lda #1
003ADC  3  85 rr                sta varq
003ADE  3  A9 D3                lda #211
003AE0  3  85 rr                sta varr
003AE2  3  A9 0E        d01149: lda #14
003AE4  3  A0 0C                ldy #12
003AE6  3  D1 rr                cmp (z80_ix),y
003AE8  3  F0 03                beq *+5
003AEA  3  4C 75 3B             jmp d01451
003AED  3  A9 10                lda #16
003AEF  3  85 rr                sta chary
003AF1  3  A9 1D                lda #29
003AF3  3  85 rr                sta charx
003AF5  3  A5 rr                lda charx
003AF7  3  85 rr                sta dispx
003AF9  3  A5 rr                lda chary
003AFB  3  85 rr                sta dispy
003AFD  3  A9 30                lda #48
003AFF  3  20 55 15             jsr pattr
003B02  3  A5 rr                lda charx
003B04  3  85 rr                sta dispx
003B06  3  A5 rr                lda chary
003B08  3  85 rr                sta dispy
003B0A  3  A9 31                lda #49
003B0C  3  20 55 15             jsr pattr
003B0F  3  A9 11                lda #17
003B11  3  85 rr                sta chary
003B13  3  A9 1D                lda #29
003B15  3  85 rr                sta charx
003B17  3  A5 rr                lda charx
003B19  3  85 rr                sta dispx
003B1B  3  A5 rr                lda chary
003B1D  3  85 rr                sta dispy
003B1F  3  A9 35                lda #53
003B21  3  20 55 15             jsr pattr
003B24  3  A5 rr                lda charx
003B26  3  85 rr                sta dispx
003B28  3  A5 rr                lda chary
003B2A  3  85 rr                sta dispy
003B2C  3  A9 36                lda #54
003B2E  3  20 55 15             jsr pattr
003B31  3  A5 rr                lda charx
003B33  3  85 rr                sta dispx
003B35  3  A5 rr                lda chary
003B37  3  85 rr                sta dispy
003B39  3  A9 37                lda #55
003B3B  3  20 55 15             jsr pattr
003B3E  3  A9 12                lda #18
003B40  3  85 rr                sta chary
003B42  3  A9 1D                lda #29
003B44  3  85 rr                sta charx
003B46  3  A5 rr                lda charx
003B48  3  85 rr                sta dispx
003B4A  3  A5 rr                lda chary
003B4C  3  85 rr                sta dispy
003B4E  3  A9 3A                lda #58
003B50  3  20 55 15             jsr pattr
003B53  3  A5 rr                lda charx
003B55  3  85 rr                sta dispx
003B57  3  A5 rr                lda chary
003B59  3  85 rr                sta dispy
003B5B  3  A9 3B                lda #59
003B5D  3  20 55 15             jsr pattr
003B60  3  A5 rr                lda charx
003B62  3  85 rr                sta dispx
003B64  3  A5 rr                lda chary
003B66  3  85 rr                sta dispy
003B68  3  A9 3C                lda #60
003B6A  3  20 55 15             jsr pattr
003B6D  3  A9 02                lda #2
003B6F  3  85 rr                sta varq
003B71  3  A9 54                lda #84
003B73  3  85 rr                sta varr
003B75  3  A9 05        d01451: lda #5
003B77  3  A0 0C                ldy #12
003B79  3  D1 rr                cmp (z80_ix),y
003B7B  3  90 03                bcc *+5
003B7D  3  4C 93 3B             jmp d01512
003B80  3  A0 0C                ldy #12
003B82  3  B1 rr                lda (z80_ix),y
003B84  3  C9 0C                cmp #12
003B86  3  90 03                bcc *+5
003B88  3  4C 93 3B             jmp d01512
003B8B  3  A9 01                lda #1
003B8D  3  85 rr                sta varq
003B8F  3  A9 D3                lda #211
003B91  3  85 rr                sta varr
003B93  3  A9 00        d01512: lda #0
003B95  3  C5 rr                cmp varr
003B97  3  90 03                bcc *+5
003B99  3  4C 9C 3B             jmp d01529
003B9C  3  A5 rr        d01529: lda varo
003B9E  3  85 rr                sta varr
003BA0  3  A9 00                lda #0
003BA2  3  A0 0C                ldy #12
003BA4  3  D1 rr                cmp (z80_ix),y
003BA6  3  F0 03                beq *+5
003BA8  3  4C B2 3B             jmp d01577
003BAB  3  A9 FF                lda #255
003BAD  3  A0 05                ldy #5
003BAF  3  91 rr                sta (z80_ix),y
003BB1  3  60                   rts
003BB2  3  A9 00        d01577: lda #0
003BB4  3  A0 08                ldy #8
003BB6  3  D1 rr                cmp (z80_ix),y
003BB8  3  F0 03                beq *+5
003BBA  3  4C DE 3B             jmp d01687
003BBD  3                       ; SPRITEINK command
003BBD  3  A9 08                lda #8
003BBF  3  85 rr                sta z80_c
003BC1  3  A0 08                ldy #8
003BC3  3  B1 rr                lda (z80_ix),y
003BC5  3  18                   clc
003BC6  3  65 rr                adc z80_c
003BC8  3  A0 08                ldy #8
003BCA  3  91 rr                sta (z80_ix),y
003BCC  3                       ; SPRITEINK command
003BCC  3  A9 08                lda #8
003BCE  3  85 rr                sta z80_c
003BD0  3  A0 08                ldy #8
003BD2  3  B1 rr                lda (z80_ix),y
003BD4  3  38                   sec
003BD5  3  E5 rr                sbc z80_c
003BD7  3  A0 08                ldy #8
003BD9  3  91 rr                sta (z80_ix),y
003BDB  3  4C FC 3B             jmp d01770
003BDE  3               d01687: ; SPRITEINK command
003BDE  3  A9 08                lda #8
003BE0  3  85 rr                sta z80_c
003BE2  3  A0 08                ldy #8
003BE4  3  B1 rr                lda (z80_ix),y
003BE6  3  38                   sec
003BE7  3  E5 rr                sbc z80_c
003BE9  3  A0 08                ldy #8
003BEB  3  91 rr                sta (z80_ix),y
003BED  3                       ; SPRITEINK command
003BED  3  A9 08                lda #8
003BEF  3  85 rr                sta z80_c
003BF1  3  A0 08                ldy #8
003BF3  3  B1 rr                lda (z80_ix),y
003BF5  3  18                   clc
003BF6  3  65 rr                adc z80_c
003BF8  3  A0 08                ldy #8
003BFA  3  91 rr                sta (z80_ix),y
003BFC  3  A9 00        d01770: lda #0
003BFE  3  C5 rr                cmp varc
003C00  3  F0 03                beq *+5
003C02  3  4C 08 3C             jmp d01792
003C05  3  20 FF 1D             jsr animsp
003C08  3  A9 00        d01792: lda #0
003C0A  3  A0 0C                ldy #12
003C0C  3  D1 rr                cmp (z80_ix),y
003C0E  3  F0 03                beq *+5
003C10  3  4C 31 3C             jmp d01875
003C13  3  A9 00                lda #0
003C15  3  C5 rr                cmp varg
003C17  3  F0 03                beq *+5
003C19  3  4C 22 3C             jmp d01845
003C1C  3  A9 FF                lda #255
003C1E  3  A0 05                ldy #5
003C20  3  91 rr                sta (z80_ix),y
003C22  3  A9 03        d01845: lda #3
003C24  3  C5 rr                cmp varg
003C26  3  F0 03                beq *+5
003C28  3  4C 31 3C             jmp d01875
003C2B  3  A9 FF                lda #255
003C2D  3  A0 05                ldy #5
003C2F  3  91 rr                sta (z80_ix),y
003C31  3  60           d01875: rts
003C32  3               evnt04:
003C32  3  A9 00                lda #0
003C34  3  C5 rr                cmp varc
003C36  3  F0 03                beq *+5
003C38  3  4C 3E 3C             jmp e00023
003C3B  3  20 FF 1D             jsr animsp
003C3E  3  A9 02        e00023: lda #2
003C40  3  C5 rr                cmp varg
003C42  3  F0 03                beq *+5
003C44  3  4C 47 3C             jmp e00040
003C47  3               e00040: ; SPRITEINK command
003C47  3  A9 01                lda #1
003C49  3  A0 0A                ldy #10
003C4B  3  D1 rr                cmp (z80_ix),y
003C4D  3  90 03                bcc *+5
003C4F  3  4C 58 3C             jmp e00083
003C52  3  A9 0F                lda #15
003C54  3  A0 06                ldy #6
003C56  3  91 rr                sta (z80_ix),y
003C58  3  A0 0C        e00083: ldy #12
003C5A  3  B1 rr                lda (z80_ix),y
003C5C  3  18                   clc
003C5D  3  69 01                adc #1
003C5F  3  A0 0C                ldy #12
003C61  3  91 rr                sta (z80_ix),y
003C63  3  A9 97                lda #151
003C65  3  85 rr                sta varo
003C67  3  A0 0C                ldy #12
003C69  3  B1 rr                lda (z80_ix),y
003C6B  3  85 rr                sta z80_c
003C6D  3  A5 rr                lda varo
003C6F  3  38                   sec
003C70  3  E5 rr                sbc z80_c
003C72  3  85 rr                sta varo
003C74  3  A9 00                lda #0
003C76  3  C5 rr                cmp varc
003C78  3  F0 03                beq *+5
003C7A  3  4C 8C 3C             jmp e00194
003C7D  3  A9 78                lda #120
003C7F  3  C5 rr                cmp varo
003C81  3  90 03                bcc *+5
003C83  3  4C 8C 3C             jmp e00194
003C86  3  A5 rr                lda varo
003C88  3  0A                   asl a
003C89  3  8D CA 0E             sta sndtyp
003C8C  3  A9 96        e00194: lda #150
003C8E  3  A0 0C                ldy #12
003C90  3  D1 rr                cmp (z80_ix),y
003C92  3  F0 03                beq *+5
003C94  3  4C A3 3C             jmp e00244
003C97  3  A5 rr                lda vara
003C99  3  A0 08                ldy #8
003C9B  3  91 rr                sta (z80_ix),y
003C9D  3  A5 rr                lda varb
003C9F  3  A0 09                ldy #9
003CA1  3  91 rr                sta (z80_ix),y
003CA3  3  A9 00        e00244: lda #0
003CA5  3  C5 rr                cmp varc
003CA7  3  F0 03                beq *+5
003CA9  3  4C 0C 3D             jmp e00472
003CAC  3  A9 00                lda #0
003CAE  3  A0 0A                ldy #10
003CB0  3  D1 rr                cmp (z80_ix),y
003CB2  3  F0 03                beq *+5
003CB4  3  4C C6 3C             jmp e00319
003CB7  3  A9 FF                lda #255
003CB9  3  85 rr                sta z80_c
003CBB  3  A0 08                ldy #8
003CBD  3  B1 rr                lda (z80_ix),y
003CBF  3  18                   clc
003CC0  3  65 rr                adc z80_c
003CC2  3  A0 08                ldy #8
003CC4  3  91 rr                sta (z80_ix),y
003CC6  3  A9 01        e00319: lda #1
003CC8  3  A0 0A                ldy #10
003CCA  3  D1 rr                cmp (z80_ix),y
003CCC  3  F0 03                beq *+5
003CCE  3  4C DC 3C             jmp e00367
003CD1  3  A0 08                ldy #8
003CD3  3  B1 rr                lda (z80_ix),y
003CD5  3  18                   clc
003CD6  3  69 01                adc #1
003CD8  3  A0 08                ldy #8
003CDA  3  91 rr                sta (z80_ix),y
003CDC  3  A9 02        e00367: lda #2
003CDE  3  A0 0A                ldy #10
003CE0  3  D1 rr                cmp (z80_ix),y
003CE2  3  F0 03                beq *+5
003CE4  3  4C F2 3C             jmp e00415
003CE7  3  A0 09                ldy #9
003CE9  3  B1 rr                lda (z80_ix),y
003CEB  3  18                   clc
003CEC  3  69 01                adc #1
003CEE  3  A0 09                ldy #9
003CF0  3  91 rr                sta (z80_ix),y
003CF2  3  A9 03        e00415: lda #3
003CF4  3  A0 0A                ldy #10
003CF6  3  D1 rr                cmp (z80_ix),y
003CF8  3  F0 03                beq *+5
003CFA  3  4C 0C 3D             jmp e00472
003CFD  3  A9 FF                lda #255
003CFF  3  85 rr                sta z80_c
003D01  3  A0 09                ldy #9
003D03  3  B1 rr                lda (z80_ix),y
003D05  3  18                   clc
003D06  3  65 rr                adc z80_c
003D08  3  A0 09                ldy #9
003D0A  3  91 rr                sta (z80_ix),y
003D0C  3  A5 rr        e00472: lda vara
003D0E  3  A0 08                ldy #8
003D10  3  D1 rr                cmp (z80_ix),y
003D12  3  F0 03                beq *+5
003D14  3  4C 8C 3D             jmp e00732
003D17  3  A5 rr                lda varb
003D19  3  A0 09                ldy #9
003D1B  3  D1 rr                cmp (z80_ix),y
003D1D  3  F0 03                beq *+5
003D1F  3  4C 8C 3D             jmp e00732
003D22  3  A9 01                lda #1
003D24  3  85 rr                sta varg
003D26  3  A9 00                lda #0
003D28  3  A0 08                ldy #8
003D2A  3  91 rr                sta (z80_ix),y
003D2C  3  A9 00                lda #0
003D2E  3  A0 09                ldy #9
003D30  3  91 rr                sta (z80_ix),y
003D32  3  A9 02                lda #2
003D34  3  85 rr                sta z80_d
003D36  3  20 3D 19             jsr random
003D39  3  85 rr                sta z80_h
003D3B  3  20 4A 11             jsr imul
003D3E  3  A5 rr                lda z80_h
003D40  3  85 rr                sta varrnd
003D42  3  A9 01                lda #1
003D44  3  C5 rr                cmp varrnd
003D46  3  F0 03                beq *+5
003D48  3  4C 51 3D             jmp e00614
003D4B  3  A9 B0                lda #176
003D4D  3  A0 08                ldy #8
003D4F  3  91 rr                sta (z80_ix),y
003D51  3  A9 02        e00614: lda #2
003D53  3  85 rr                sta z80_d
003D55  3  20 3D 19             jsr random
003D58  3  85 rr                sta z80_h
003D5A  3  20 4A 11             jsr imul
003D5D  3  A5 rr                lda z80_h
003D5F  3  85 rr                sta varrnd
003D61  3  A9 01                lda #1
003D63  3  C5 rr                cmp varrnd
003D65  3  F0 03                beq *+5
003D67  3  4C 70 3D             jmp e00676
003D6A  3  A9 C0                lda #192
003D6C  3  A0 09                ldy #9
003D6E  3  91 rr                sta (z80_ix),y
003D70  3  A9 03        e00676: lda #3
003D72  3  85 rr                sta z80_c
003D74  3  A9 0D                lda #13
003D76  3  85 rr                sta z80_b
003D78  3  20 B8 12             jsr spawn
003D7B  3  AD 12 1C             lda ogptr
003D7E  3  85 rr                sta z80_x
003D80  3  AD 13 1C             lda ogptr+1
003D83  3  85 rr                sta z80_i
003D85  3  A9 FF                lda #255
003D87  3  A0 05                ldy #5
003D89  3  91 rr                sta (z80_ix),y
003D8B  3  60                   rts
003D8C  3  60           e00732: rts
003D8D  3               evnt05:
003D8D  3  A9 05                lda #5
003D8F  3  C5 rr                cmp scno
003D91  3  F0 03                beq *+5
003D93  3  4C C9 3E             jmp f00682
003D96  3  A5 rr                lda varo
003D98  3  C9 FF                cmp #255
003D9A  3  90 03                bcc *+5
003D9C  3  4C F8 3D             jmp f00217
003D9F  3  A9 02                lda #2
003DA1  3  85 rr                sta chary
003DA3  3  A9 08                lda #8
003DA5  3  85 rr                sta charx
003DA7  3  A9 07                lda #7
003DA9  3  85 rr                sta z80_c
003DAB  3  A5 rr                lda varf
003DAD  3  18                   clc
003DAE  3  65 rr                adc z80_c
003DB0  3  85 rr                sta varf
003DB2  3  A5 rr                lda varf
003DB4  3  20 D3 19             jsr dmsg
003DB7  3  A9 02                lda #2
003DB9  3  85 rr                sta chary
003DBB  3  A9 0C                lda #12
003DBD  3  85 rr                sta charx
003DBF  3  A9 04                lda #4
003DC1  3  20 D3 19             jsr dmsg
003DC4  3  A9 FF                lda #255
003DC6  3  85 rr                sta z80_c
003DC8  3  A5 rr                lda varf
003DCA  3  18                   clc
003DCB  3  65 rr                adc z80_c
003DCD  3  85 rr                sta varf
003DCF  3  A9 15                lda #21
003DD1  3  85 rr                sta chary
003DD3  3  A9 08                lda #8
003DD5  3  85 rr                sta charx
003DD7  3  A5 rr                lda varf
003DD9  3  20 D3 19             jsr dmsg
003DDC  3  A9 0C                lda #12
003DDE  3  85 rr                sta charx
003DE0  3  A9 15                lda #21
003DE2  3  85 rr                sta chary
003DE4  3  A9 04                lda #4
003DE6  3  20 D3 19             jsr dmsg
003DE9  3  A9 06                lda #6
003DEB  3  85 rr                sta z80_c
003DED  3  A5 rr                lda varf
003DEF  3  38                   sec
003DF0  3  E5 rr                sbc z80_c
003DF2  3  85 rr                sta varf
003DF4  3  A9 FF                lda #255
003DF6  3  85 rr                sta varo
003DF8  3               f00217: ; SPRITEINK command
003DF8  3  A9 00                lda #0
003DFA  3  C5 rr                cmp varc
003DFC  3  F0 03                beq *+5
003DFE  3  4C 13 3E             jmp f00281
003E01  3  A9 FF                lda #255
003E03  3  85 rr                sta z80_c
003E05  3  A0 08                ldy #8
003E07  3  B1 rr                lda (z80_ix),y
003E09  3  18                   clc
003E0A  3  65 rr                adc z80_c
003E0C  3  A0 08                ldy #8
003E0E  3  91 rr                sta (z80_ix),y
003E10  3  20 FF 1D             jsr animsp
003E13  3  A9 02        f00281: lda #2
003E15  3  C5 rr                cmp varc
003E17  3  F0 03                beq *+5
003E19  3  4C 2E 3E             jmp f00338
003E1C  3  A9 FF                lda #255
003E1E  3  85 rr                sta z80_c
003E20  3  A0 08                ldy #8
003E22  3  B1 rr                lda (z80_ix),y
003E24  3  18                   clc
003E25  3  65 rr                adc z80_c
003E27  3  A0 08                ldy #8
003E29  3  91 rr                sta (z80_ix),y
003E2B  3  20 FF 1D             jsr animsp
003E2E  3  A5 rr        f00338: lda joyval
003E30  3  29 10                and #16
003E32  3  F0 03                beq :+
003E34  3  4C 3D 3E             jmp f00369
003E37  3               :
003E37  3  A9 20                lda #32
003E39  3  A0 08                ldy #8
003E3B  3  91 rr                sta (z80_ix),y
003E3D  3  A5 rr        f00369: lda joyval
003E3F  3  29 20                and #32
003E41  3  F0 03                beq :+
003E43  3  4C 4C 3E             jmp f00400
003E46  3               :
003E46  3  A9 20                lda #32
003E48  3  A0 08                ldy #8
003E4A  3  91 rr                sta (z80_ix),y
003E4C  3  A9 20        f00400: lda #32
003E4E  3  A0 08                ldy #8
003E50  3  D1 rr                cmp (z80_ix),y
003E52  3  F0 03                beq *+5
003E54  3  4C 88 3E             jmp f00521
003E57  3  A9 00                lda #0
003E59  3  C5 rr                cmp varl
003E5B  3  F0 03                beq *+5
003E5D  3  4C 6A 3E             jmp f00459
003E60  3  A5 rr                lda varl
003E62  3  18                   clc
003E63  3  69 01                adc #1
003E65  3  85 rr                sta varl
003E67  3  4C 6E 3E             jmp f00467
003E6A  3  A9 00        f00459: lda #0
003E6C  3  85 rr                sta varl
003E6E  3  A5 rr        f00467: lda varf
003E70  3  18                   clc
003E71  3  69 01                adc #1
003E73  3  85 rr                sta varf
003E75  3  A5 rr                lda varf
003E77  3  85 rr                sta scno
003E79  3  20 57 1F             jsr nwscr
003E7C  3  A5 rr                lda scno
003E7E  3  4A                   lsr a
003E7F  3  85 rr                sta scno
003E81  3  20 57 1F             jsr nwscr
003E84  3  A9 01                lda #1
003E86  3  85 rr                sta restfl
003E88  3  A9 09        f00521: lda #9
003E8A  3  A0 06                ldy #6
003E8C  3  D1 rr                cmp (z80_ix),y
003E8E  3  F0 03                beq *+5
003E90  3  4C BE 3E             jmp f00653
003E93  3                       ; SPRITEINK command
003E93  3  A9 03                lda #3
003E95  3  C5 rr                cmp varf
003E97  3  90 03                bcc *+5
003E99  3  4C A7 3E             jmp f00596
003E9C  3  A9 60                lda #96
003E9E  3  A0 09                ldy #9
003EA0  3  D1 rr                cmp (z80_ix),y
003EA2  3  F0 03                beq *+5
003EA4  3  4C A7 3E             jmp f00596
003EA7  3                       ; SPRITEINK command
003EA7  3  A9 06        f00596: lda #6
003EA9  3  C5 rr                cmp varf
003EAB  3  90 03                bcc *+5
003EAD  3  4C BE 3E             jmp f00653
003EB0  3  A9 60                lda #96
003EB2  3  A0 09                ldy #9
003EB4  3  D1 rr                cmp (z80_ix),y
003EB6  3  F0 03                beq *+5
003EB8  3  4C BE 3E             jmp f00646
003EBB  3                       ; SPRITEINK command
003EBB  3  4C BE 3E             jmp f00653
003EBE  3               f00646: ; SPRITEINK command
003EBE  3  A9 00        f00653: lda #0
003EC0  3  A0 06                ldy #6
003EC2  3  D1 rr                cmp (z80_ix),y
003EC4  3  F0 03                beq *+5
003EC6  3  4C C9 3E             jmp f00682
003EC9  3                       ; SPRITEINK command
003EC9  3  A9 06        f00682: lda #6
003ECB  3  C5 rr                cmp scno
003ECD  3  F0 03                beq *+5
003ECF  3  4C D3 40             jmp f01783
003ED2  3  A5 rr                lda joyval
003ED4  3  29 10                and #16
003ED6  3  F0 03                beq :+
003ED8  3  4C E6 3E             jmp f00738
003EDB  3               :
003EDB  3  A9 04                lda #4
003EDD  3  85 rr                sta scno
003EDF  3  20 57 1F             jsr nwscr
003EE2  3  A9 01                lda #1
003EE4  3  85 rr                sta restfl
003EE6  3  A5 rr        f00738: lda joyval
003EE8  3  29 20                and #32
003EEA  3  F0 03                beq :+
003EEC  3  4C FA 3E             jmp f00777
003EEF  3               :
003EEF  3  A9 04                lda #4
003EF1  3  85 rr                sta scno
003EF3  3  20 57 1F             jsr nwscr
003EF6  3  A9 01                lda #1
003EF8  3  85 rr                sta restfl
003EFA  3  A9 00        f00777: lda #0
003EFC  3  A0 0A                ldy #10
003EFE  3  D1 rr                cmp (z80_ix),y
003F00  3  90 03                bcc *+5
003F02  3  4C 10 3F             jmp f00825
003F05  3  A0 0A                ldy #10
003F07  3  B1 rr                lda (z80_ix),y
003F09  3  38                   sec
003F0A  3  E9 01                sbc #1
003F0C  3  A0 0A                ldy #10
003F0E  3  91 rr                sta (z80_ix),y
003F10  3  A5 rr        f00825: lda joyval
003F12  3  29 40                and #64
003F14  3  F0 03                beq :+
003F16  3  4C 49 3F             jmp f00941
003F19  3               :
003F19  3  A9 00                lda #0
003F1B  3  A0 0A                ldy #10
003F1D  3  D1 rr                cmp (z80_ix),y
003F1F  3  F0 03                beq *+5
003F21  3  4C 49 3F             jmp f00941
003F24  3  A9 63                lda #99
003F26  3  A0 0C                ldy #12
003F28  3  D1 rr                cmp (z80_ix),y
003F2A  3  F0 03                beq *+5
003F2C  3  4C 49 3F             jmp f00941
003F2F  3  A5 rr                lda varn
003F31  3  18                   clc
003F32  3  69 01                adc #1
003F34  3  85 rr                sta varn
003F36  3  A9 02                lda #2
003F38  3  C5 rr                cmp varn
003F3A  3  90 03                bcc *+5
003F3C  3  4C 43 3F             jmp f00928
003F3F  3  A9 00                lda #0
003F41  3  85 rr                sta varn
003F43  3  A9 05        f00928: lda #5
003F45  3  A0 0A                ldy #10
003F47  3  91 rr                sta (z80_ix),y
003F49  3               f00941: ; COLOUR command
003F49  3  A9 0F                lda #15
003F4B  3  85 rr                sta chary
003F4D  3  A9 05                lda #5
003F4F  3  85 rr                sta charx
003F51  3  A9 1E                lda #30
003F53  3  20 D3 19             jsr dmsg
003F56  3                       ; COLOUR command
003F56  3  A9 10                lda #16
003F58  3  85 rr                sta chary
003F5A  3  A9 06                lda #6
003F5C  3  85 rr                sta charx
003F5E  3  A9 1F                lda #31
003F60  3  20 D3 19             jsr dmsg
003F63  3  A9 0F                lda #15
003F65  3  85 rr                sta chary
003F67  3  A9 0D                lda #13
003F69  3  85 rr                sta charx
003F6B  3                       ; COLOUR command
003F6B  3  A9 1B                lda #27
003F6D  3  85 rr                sta z80_c
003F6F  3  A5 rr                lda varn
003F71  3  18                   clc
003F72  3  65 rr                adc z80_c
003F74  3  85 rr                sta varn
003F76  3  A5 rr                lda varn
003F78  3  20 D3 19             jsr dmsg
003F7B  3  A9 1B                lda #27
003F7D  3  85 rr                sta z80_c
003F7F  3  A5 rr                lda varn
003F81  3  38                   sec
003F82  3  E5 rr                sbc z80_c
003F84  3  85 rr                sta varn
003F86  3  A9 0C                lda #12
003F88  3  85 rr                sta chary
003F8A  3  A9 04                lda #4
003F8C  3  85 rr                sta charx
003F8E  3                       ; COLOUR command
003F8E  3  A9 B4                lda #180
003F90  3  C5 rr                cmp clock
003F92  3  90 03                bcc *+5
003F94  3  4C B2 3F             jmp f01178
003F97  3  A9 12                lda #18
003F99  3  85 rr                sta loopa
003F9B  3  A5 rr        f01133: lda charx
003F9D  3  85 rr                sta dispx
003F9F  3  A5 rr                lda chary
003FA1  3  85 rr                sta dispy
003FA3  3  A9 17                lda #23
003FA5  3  20 55 15             jsr pattr
003FA8  3  C6 rr                dec loopa
003FAA  3  F0 03                beq :+
003FAC  3  4C 9B 3F             jmp f01133
003FAF  3               :
003FAF  3  4C B7 3F             jmp f01186
003FB2  3  A9 15        f01178: lda #21
003FB4  3  20 D3 19             jsr dmsg
003FB7  3  A5 rr        f01186: lda varo
003FB9  3  C9 FF                cmp #255
003FBB  3  90 03                bcc *+5
003FBD  3  4C 4F 40             jmp f01510
003FC0  3  A9 FF                lda #255
003FC2  3  85 rr                sta varo
003FC4  3  A9 02                lda #2
003FC6  3  85 rr                sta chary
003FC8  3  A9 0A                lda #10
003FCA  3  85 rr                sta charx
003FCC  3                       ; COLOUR command
003FCC  3  A9 0F                lda #15
003FCE  3  20 D3 19             jsr dmsg
003FD1  3  A9 03                lda #3
003FD3  3  85 rr                sta chary
003FD5  3  A9 07                lda #7
003FD7  3  85 rr                sta charx
003FD9  3  A9 10                lda #16
003FDB  3  20 D3 19             jsr dmsg
003FDE  3                       ; COLOUR command
003FDE  3  A9 08                lda #8
003FE0  3  85 rr                sta chary
003FE2  3  A9 02                lda #2
003FE4  3  85 rr                sta charx
003FE6  3  A9 11                lda #17
003FE8  3  20 D3 19             jsr dmsg
003FEB  3  A9 09                lda #9
003FED  3  85 rr                sta chary
003FEF  3  A9 04                lda #4
003FF1  3  85 rr                sta charx
003FF3  3  A9 12                lda #18
003FF5  3  20 D3 19             jsr dmsg
003FF8  3                       ; COLOUR command
003FF8  3  A9 15                lda #21
003FFA  3  85 rr                sta chary
003FFC  3  A9 01                lda #1
003FFE  3  85 rr                sta charx
004000  3  A9 13                lda #19
004002  3  20 D3 19             jsr dmsg
004005  3  A9 16                lda #22
004007  3  85 rr                sta chary
004009  3  A9 01                lda #1
00400B  3  85 rr                sta charx
00400D  3  A9 14                lda #20
00400F  3  20 D3 19             jsr dmsg
004012  3  A9 17                lda #23
004014  3  85 rr                sta chary
004016  3  A9 02                lda #2
004018  3  85 rr                sta charx
00401A  3  A9 1D                lda #29
00401C  3  85 rr                sta varq
00401E  3  A9 06                lda #6
004020  3  85 rr                sta loopa
004022  3  A5 rr        f01413: lda charx
004024  3  85 rr                sta dispx
004026  3  A5 rr                lda chary
004028  3  85 rr                sta dispy
00402A  3  A5 rr                lda varq
00402C  3  20 55 15             jsr pattr
00402F  3  A5 rr                lda varq
004031  3  18                   clc
004032  3  69 01                adc #1
004034  3  85 rr                sta varq
004036  3  C6 rr                dec loopa
004038  3  F0 03                beq :+
00403A  3  4C 22 40             jmp f01413
00403D  3               :
00403D  3  A5 rr                lda charx
00403F  3  85 rr                sta dispx
004041  3  A5 rr                lda chary
004043  3  85 rr                sta dispy
004045  3  A9 17                lda #23
004047  3  20 55 15             jsr pattr
00404A  3                       ; COLOUR command
00404A  3  A9 16                lda #22
00404C  3  20 D3 19             jsr dmsg
00404F  3  A9 10        f01510: lda #16
004051  3  A0 06                ldy #6
004053  3  D1 rr                cmp (z80_ix),y
004055  3  F0 03                beq *+5
004057  3  4C 7A 40             jmp f01599
00405A  3  20 93 17             jsr cangl
00405D  3  F0 03                beq :+
00405F  3  4C 74 40             jmp f01586
004062  3               :
004062  3  A9 FF                lda #255
004064  3  85 rr                sta z80_c
004066  3  A0 09                ldy #9
004068  3  B1 rr                lda (z80_ix),y
00406A  3  18                   clc
00406B  3  65 rr                adc z80_c
00406D  3  A0 09                ldy #9
00406F  3  91 rr                sta (z80_ix),y
004071  3  4C 7A 40             jmp f01599
004074  3  A9 11        f01586: lda #17
004076  3  A0 06                ldy #6
004078  3  91 rr                sta (z80_ix),y
00407A  3  A9 11        f01599: lda #17
00407C  3  A0 06                ldy #6
00407E  3  D1 rr                cmp (z80_ix),y
004080  3  F0 03                beq *+5
004082  3  4C A1 40             jmp f01679
004085  3  20 A5 17             jsr cangr
004088  3  F0 03                beq :+
00408A  3  4C 9B 40             jmp f01665
00408D  3               :
00408D  3  A0 09                ldy #9
00408F  3  B1 rr                lda (z80_ix),y
004091  3  18                   clc
004092  3  69 01                adc #1
004094  3  A0 09                ldy #9
004096  3  91 rr                sta (z80_ix),y
004098  3  4C A1 40             jmp f01679
00409B  3  A9 10        f01665: lda #16
00409D  3  A0 06                ldy #6
00409F  3  91 rr                sta (z80_ix),y
0040A1  3  A9 00        f01679: lda #0
0040A3  3  C5 rr                cmp varc
0040A5  3  F0 03                beq *+5
0040A7  3  4C AD 40             jmp f01700
0040AA  3  20 FF 1D             jsr animsp
0040AD  3  A9 05        f01700: lda #5
0040AF  3  85 rr                sta z80_b
0040B1  3  20 40 1E             jsr sktyp
0040B4  3  B0 03                bcs :+
0040B6  3  4C D3 40             jmp f01776
0040B9  3               :
0040B9  3  A9 10                lda #16
0040BB  3  A0 06                ldy #6
0040BD  3  D1 rr                cmp (z80_ix),y
0040BF  3  F0 03                beq *+5
0040C1  3  4C CD 40             jmp f01763
0040C4  3  A9 11                lda #17
0040C6  3  A0 06                ldy #6
0040C8  3  91 rr                sta (z80_ix),y
0040CA  3  4C D3 40             jmp f01776
0040CD  3  A9 10        f01763: lda #16
0040CF  3  A0 06                ldy #6
0040D1  3  91 rr                sta (z80_ix),y
0040D3  3               f01776: ; SPRITEINK command
0040D3  3  60           f01783: rts
0040D4  3               evnt06:
0040D4  3  A9 00                lda #0
0040D6  3  A0 0C                ldy #12
0040D8  3  D1 rr                cmp (z80_ix),y
0040DA  3  90 03                bcc *+5
0040DC  3  4C 1B 42             jmp g00695
0040DF  3  A9 FF                lda #255
0040E1  3  85 rr                sta z80_c
0040E3  3  A0 0C                ldy #12
0040E5  3  B1 rr                lda (z80_ix),y
0040E7  3  18                   clc
0040E8  3  65 rr                adc z80_c
0040EA  3  A0 0C                ldy #12
0040EC  3  91 rr                sta (z80_ix),y
0040EE  3  A9 96                lda #150
0040F0  3  A0 0C                ldy #12
0040F2  3  D1 rr                cmp (z80_ix),y
0040F4  3  90 03                bcc *+5
0040F6  3  4C 42 41             jmp g00246
0040F9  3                       ; SPRITEINK command
0040F9  3  A9 00                lda #0
0040FB  3  C5 rr                cmp varc
0040FD  3  F0 03                beq *+5
0040FF  3  4C 15 41             jmp g00150
004102  3  A0 06                ldy #6
004104  3  B1 rr                lda (z80_ix),y
004106  3  18                   clc
004107  3  69 01                adc #1
004109  3  A0 06                ldy #6
00410B  3  91 rr                sta (z80_ix),y
00410D  3  A0 0C                ldy #12
00410F  3  B1 rr                lda (z80_ix),y
004111  3  0A                   asl a
004112  3  8D CA 0E             sta sndtyp
004115  3  A9 02        g00150: lda #2
004117  3  C5 rr                cmp varc
004119  3  F0 03                beq *+5
00411B  3  4C 31 41             jmp g00210
00411E  3  A0 06                ldy #6
004120  3  B1 rr                lda (z80_ix),y
004122  3  18                   clc
004123  3  69 01                adc #1
004125  3  A0 06                ldy #6
004127  3  91 rr                sta (z80_ix),y
004129  3  A0 0C                ldy #12
00412B  3  B1 rr                lda (z80_ix),y
00412D  3  0A                   asl a
00412E  3  8D CA 0E             sta sndtyp
004131  3  A9 04        g00210: lda #4
004133  3  A0 06                ldy #6
004135  3  D1 rr                cmp (z80_ix),y
004137  3  F0 03                beq *+5
004139  3  4C 42 41             jmp g00246
00413C  3  A9 00                lda #0
00413E  3  A0 06                ldy #6
004140  3  91 rr                sta (z80_ix),y
004142  3  A9 BE        g00246: lda #190
004144  3  A0 0C                ldy #12
004146  3  D1 rr                cmp (z80_ix),y
004148  3  F0 03                beq *+5
00414A  3  4C CA 41             jmp g00519
00414D  3  A9 08                lda #8
00414F  3  85 rr                sta varm
004151  3  A9 FF                lda #255
004153  3  85 rr                sta z80_c
004155  3  A5 rr                lda numlif
004157  3  18                   clc
004158  3  65 rr                adc z80_c
00415A  3  85 rr                sta numlif
00415C  3  A9 02                lda #2
00415E  3  85 rr                sta chary
004160  3  A9 1A                lda #26
004162  3  85 rr                sta charx
004164  3  A9 18                lda #24
004166  3  20 D3 19             jsr dmsg
004169  3  A9 02                lda #2
00416B  3  85 rr                sta chary
00416D  3  A9 1D                lda #29
00416F  3  85 rr                sta charx
004171  3  A9 18                lda #24
004173  3  20 D3 19             jsr dmsg
004176  3  A9 02                lda #2
004178  3  85 rr                sta chary
00417A  3  A9 1B                lda #27
00417C  3  85 rr                sta charx
00417E  3  A9 00                lda #0
004180  3  C5 rr                cmp numlif
004182  3  90 03                bcc *+5
004184  3  4C 9F 41             jmp g00435
004187  3  A5 rr                lda numlif
004189  3  85 rr                sta loopa
00418B  3  A5 rr        g00395: lda charx
00418D  3  85 rr                sta dispx
00418F  3  A5 rr                lda chary
004191  3  85 rr                sta dispy
004193  3  A9 57                lda #87
004195  3  20 55 15             jsr pattr
004198  3  C6 rr                dec loopa
00419A  3  F0 03                beq :+
00419C  3  4C 8B 41             jmp g00395
00419F  3               :
00419F  3  A9 00        g00435: lda #0
0041A1  3  C5 rr                cmp numlif
0041A3  3  F0 03                beq *+5
0041A5  3  4C CA 41             jmp g00519
0041A8  3  A9 02                lda #2
0041AA  3  85 rr                sta varg
0041AC  3  A9 0C                lda #12
0041AE  3  85 rr                sta varm
0041B0  3  A9 06                lda #6
0041B2  3  85 rr                sta chary
0041B4  3  A9 0B                lda #11
0041B6  3  85 rr                sta charx
0041B8  3  A9 00                lda #0
0041BA  3  20 D3 19             jsr dmsg
0041BD  3  A9 11                lda #17
0041BF  3  85 rr                sta chary
0041C1  3  A9 0B                lda #11
0041C3  3  85 rr                sta charx
0041C5  3  A9 01                lda #1
0041C7  3  20 D3 19             jsr dmsg
0041CA  3  A9 0A        g00519: lda #10
0041CC  3  A0 0C                ldy #12
0041CE  3  D1 rr                cmp (z80_ix),y
0041D0  3  F0 03                beq *+5
0041D2  3  4C E2 41             jmp g00567
0041D5  3  A9 00                lda #0
0041D7  3  C5 rr                cmp numlif
0041D9  3  F0 03                beq *+5
0041DB  3  4C E2 41             jmp g00567
0041DE  3  A9 01                lda #1
0041E0  3  85 rr                sta gamwon
0041E2  3  A0 0C        g00567: ldy #12
0041E4  3  B1 rr                lda (z80_ix),y
0041E6  3  C9 96                cmp #150
0041E8  3  90 03                bcc *+5
0041EA  3  4C FE 41             jmp g00633
0041ED  3  A9 50                lda #80
0041EF  3  A0 0C                ldy #12
0041F1  3  D1 rr                cmp (z80_ix),y
0041F3  3  90 03                bcc *+5
0041F5  3  4C FE 41             jmp g00633
0041F8  3                       ; SPRITEINK command
0041F8  3  A9 13                lda #19
0041FA  3  A0 06                ldy #6
0041FC  3  91 rr                sta (z80_ix),y
0041FE  3  A0 0C        g00633: ldy #12
004200  3  B1 rr                lda (z80_ix),y
004202  3  C9 28                cmp #40
004204  3  90 03                bcc *+5
004206  3  4C 1B 42             jmp g00695
004209  3  A9 01                lda #1
00420B  3  A0 07                ldy #7
00420D  3  91 rr                sta (z80_ix),y
00420F  3  A9 B0                lda #176
004211  3  A0 08                ldy #8
004213  3  91 rr                sta (z80_ix),y
004215  3  A9 00                lda #0
004217  3  A0 09                ldy #9
004219  3  91 rr                sta (z80_ix),y
00421B  3  A9 00        g00695: lda #0
00421D  3  A0 0C                ldy #12
00421F  3  D1 rr                cmp (z80_ix),y
004221  3  F0 03                beq *+5
004223  3  4C 3D 43             jmp g01307
004226  3  A9 00                lda #0
004228  3  A0 0B                ldy #11
00422A  3  91 rr                sta (z80_ix),y
00422C  3  A9 01                lda #1
00422E  3  85 rr                sta z80_b
004230  3  20 40 1E             jsr sktyp
004233  3  B0 03                bcs :+
004235  3  4C 3E 42             jmp g00766
004238  3               :
004238  3  A9 01                lda #1
00423A  3  A0 0B                ldy #11
00423C  3  91 rr                sta (z80_ix),y
00423E  3  A9 08        g00766: lda #8
004240  3  85 rr                sta z80_b
004242  3  20 40 1E             jsr sktyp
004245  3  B0 03                bcs :+
004247  3  4C 50 42             jmp g00802
00424A  3               :
00424A  3  A9 01                lda #1
00424C  3  A0 0B                ldy #11
00424E  3  91 rr                sta (z80_ix),y
004250  3  A9 10        g00802: lda #16
004252  3  85 rr                sta z80_c
004254  3  A0 09                ldy #9
004256  3  B1 rr                lda (z80_ix),y
004258  3  18                   clc
004259  3  65 rr                adc z80_c
00425B  3  A0 09                ldy #9
00425D  3  91 rr                sta (z80_ix),y
00425F  3  A9 01                lda #1
004261  3  85 rr                sta z80_b
004263  3  20 40 1E             jsr sktyp
004266  3  B0 03                bcs :+
004268  3  4C 71 42             jmp g00872
00426B  3               :
00426B  3  A9 01                lda #1
00426D  3  A0 0B                ldy #11
00426F  3  91 rr                sta (z80_ix),y
004271  3  A9 08        g00872: lda #8
004273  3  85 rr                sta z80_c
004275  3  A0 09                ldy #9
004277  3  B1 rr                lda (z80_ix),y
004279  3  18                   clc
00427A  3  65 rr                adc z80_c
00427C  3  A0 09                ldy #9
00427E  3  91 rr                sta (z80_ix),y
004280  3  A9 01                lda #1
004282  3  85 rr                sta z80_b
004284  3  20 40 1E             jsr sktyp
004287  3  B0 03                bcs :+
004289  3  4C 92 42             jmp g00942
00428C  3               :
00428C  3  A9 01                lda #1
00428E  3  A0 0B                ldy #11
004290  3  91 rr                sta (z80_ix),y
004292  3  A9 18        g00942: lda #24
004294  3  85 rr                sta z80_c
004296  3  A0 09                ldy #9
004298  3  B1 rr                lda (z80_ix),y
00429A  3  38                   sec
00429B  3  E5 rr                sbc z80_c
00429D  3  A0 09                ldy #9
00429F  3  91 rr                sta (z80_ix),y
0042A1  3  A9 10                lda #16
0042A3  3  85 rr                sta z80_c
0042A5  3  A0 08                ldy #8
0042A7  3  B1 rr                lda (z80_ix),y
0042A9  3  38                   sec
0042AA  3  E5 rr                sbc z80_c
0042AC  3  A0 08                ldy #8
0042AE  3  91 rr                sta (z80_ix),y
0042B0  3  A9 01                lda #1
0042B2  3  85 rr                sta z80_b
0042B4  3  20 40 1E             jsr sktyp
0042B7  3  B0 03                bcs :+
0042B9  3  4C C2 42             jmp g01047
0042BC  3               :
0042BC  3  A9 01                lda #1
0042BE  3  A0 0B                ldy #11
0042C0  3  91 rr                sta (z80_ix),y
0042C2  3  A9 08        g01047: lda #8
0042C4  3  85 rr                sta z80_c
0042C6  3  A0 08                ldy #8
0042C8  3  B1 rr                lda (z80_ix),y
0042CA  3  38                   sec
0042CB  3  E5 rr                sbc z80_c
0042CD  3  A0 08                ldy #8
0042CF  3  91 rr                sta (z80_ix),y
0042D1  3  A9 01                lda #1
0042D3  3  85 rr                sta z80_b
0042D5  3  20 40 1E             jsr sktyp
0042D8  3  B0 03                bcs :+
0042DA  3  4C E3 42             jmp g01117
0042DD  3               :
0042DD  3  A9 01                lda #1
0042DF  3  A0 0B                ldy #11
0042E1  3  91 rr                sta (z80_ix),y
0042E3  3  A9 18        g01117: lda #24
0042E5  3  85 rr                sta z80_c
0042E7  3  A0 08                ldy #8
0042E9  3  B1 rr                lda (z80_ix),y
0042EB  3  18                   clc
0042EC  3  65 rr                adc z80_c
0042EE  3  A0 08                ldy #8
0042F0  3  91 rr                sta (z80_ix),y
0042F2  3  A5 rr                lda joyval
0042F4  3  29 10                and #16
0042F6  3  F0 03                beq :+
0042F8  3  4C 01 43             jmp g01183
0042FB  3               :
0042FB  3  A9 00                lda #0
0042FD  3  A0 0B                ldy #11
0042FF  3  91 rr                sta (z80_ix),y
004301  3  A5 rr        g01183: lda joyval
004303  3  29 20                and #32
004305  3  F0 03                beq :+
004307  3  4C 10 43             jmp g01215
00430A  3               :
00430A  3  A9 00                lda #0
00430C  3  A0 0B                ldy #11
00430E  3  91 rr                sta (z80_ix),y
004310  3  A9 00        g01215: lda #0
004312  3  A0 0B                ldy #11
004314  3  D1 rr                cmp (z80_ix),y
004316  3  F0 03                beq *+5
004318  3  4C 3D 43             jmp g01307
00431B  3  A9 04                lda #4
00431D  3  85 rr                sta varg
00431F  3  A5 rr                lda scno
004321  3  18                   clc
004322  3  69 01                adc #1
004324  3  85 rr                sta scno
004326  3  20 57 1F             jsr nwscr
004329  3  A5 rr                lda scno
00432B  3  85 rr                sta varm
00432D  3  A5 rr                lda scno
00432F  3  38                   sec
004330  3  E9 01                sbc #1
004332  3  85 rr                sta scno
004334  3  20 57 1F             jsr nwscr
004337  3  A9 FF                lda #255
004339  3  A0 05                ldy #5
00433B  3  91 rr                sta (z80_ix),y
00433D  3  60           g01307: rts
00433E  3               evnt07:
00433E  3  A9 00                lda #0
004340  3  C5 rr                cmp varj
004342  3  90 03                bcc *+5
004344  3  4C 52 43             jmp h00045
004347  3  A0 0B                ldy #11
004349  3  B1 rr                lda (z80_ix),y
00434B  3  18                   clc
00434C  3  69 01                adc #1
00434E  3  A0 0B                ldy #11
004350  3  91 rr                sta (z80_ix),y
004352  3  A9 5F        h00045: lda #95
004354  3  C5 rr                cmp varj
004356  3  F0 03                beq *+5
004358  3  4C 6E 43             jmp h00106
00435B  3  A9 A0                lda #160
00435D  3  A0 08                ldy #8
00435F  3  91 rr                sta (z80_ix),y
004361  3                       ; COLOUR command
004361  3  A9 00                lda #0
004363  3  85 rr                sta chary
004365  3  A9 07                lda #7
004367  3  85 rr                sta charx
004369  3  A9 19                lda #25
00436B  3  20 D3 19             jsr dmsg
00436E  3  A9 63        h00106: lda #99
004370  3  C5 rr                cmp varj
004372  3  F0 03                beq *+5
004374  3  4C 92 43             jmp h00182
004377  3  A9 AA                lda #170
004379  3  A0 0B                ldy #11
00437B  3  91 rr                sta (z80_ix),y
00437D  3  A9 80                lda #128
00437F  3  A0 09                ldy #9
004381  3  D1 rr                cmp (z80_ix),y
004383  3  F0 03                beq *+5
004385  3  4C 8E 43             jmp h00174
004388  3  A9 68                lda #104
00438A  3  A0 09                ldy #9
00438C  3  91 rr                sta (z80_ix),y
00438E  3  A9 0B        h00174: lda #11
004390  3  85 rr                sta varm
004392  3               h00182: ; SPRITEINK command
004392  3  A9 5D                lda #93
004394  3  C5 rr                cmp varj
004396  3  F0 03                beq *+5
004398  3  4C A8 43             jmp h00237
00439B  3                       ; COLOUR command
00439B  3  A9 00                lda #0
00439D  3  85 rr                sta chary
00439F  3  A9 00                lda #0
0043A1  3  85 rr                sta charx
0043A3  3  A9 1A                lda #26
0043A5  3  20 D3 19             jsr dmsg
0043A8  3  A9 C0        h00237: lda #192
0043AA  3  A0 09                ldy #9
0043AC  3  D1 rr                cmp (z80_ix),y
0043AE  3  90 03                bcc *+5
0043B0  3  4C B9 43             jmp h00273
0043B3  3  A9 C8                lda #200
0043B5  3  A0 08                ldy #8
0043B7  3  91 rr                sta (z80_ix),y
0043B9  3  A9 5F        h00273: lda #95
0043BB  3  C5 rr                cmp varj
0043BD  3  90 03                bcc *+5
0043BF  3  4C D2 43             jmp h00324
0043C2  3  A9 A0                lda #160
0043C4  3  A0 08                ldy #8
0043C6  3  91 rr                sta (z80_ix),y
0043C8  3  A5 rr                lda varj
0043CA  3  38                   sec
0043CB  3  E9 01                sbc #1
0043CD  3  85 rr                sta varj
0043CF  3  4C 24 46             jmp h01561
0043D2  3  A9 00        h00324: lda #0
0043D4  3  A0 0B                ldy #11
0043D6  3  D1 rr                cmp (z80_ix),y
0043D8  3  F0 03                beq *+5
0043DA  3  4C E4 43             jmp h00361
0043DD  3  A5 rr                lda varj
0043DF  3  38                   sec
0043E0  3  E9 01                sbc #1
0043E2  3  85 rr                sta varj
0043E4  3  A0 06        h00361: ldy #6
0043E6  3  B1 rr                lda (z80_ix),y
0043E8  3  C9 12                cmp #18
0043EA  3  90 03                bcc *+5
0043EC  3  4C 4F 44             jmp h00590
0043EF  3  A9 64                lda #100
0043F1  3  A0 08                ldy #8
0043F3  3  D1 rr                cmp (z80_ix),y
0043F5  3  90 03                bcc *+5
0043F7  3  4C 2C 44             jmp h00516
0043FA  3  A9 5E                lda #94
0043FC  3  C5 rr                cmp varj
0043FE  3  90 03                bcc *+5
004400  3  4C 1B 44             jmp h00477
004403  3  A9 FF                lda #255
004405  3  85 rr                sta z80_c
004407  3  A0 09                ldy #9
004409  3  B1 rr                lda (z80_ix),y
00440B  3  18                   clc
00440C  3  65 rr                adc z80_c
00440E  3  A0 09                ldy #9
004410  3  91 rr                sta (z80_ix),y
004412  3  A9 10                lda #16
004414  3  A0 06                ldy #6
004416  3  91 rr                sta (z80_ix),y
004418  3  4C 2C 44             jmp h00516
00441B  3  A9 11        h00477: lda #17
00441D  3  A0 06                ldy #6
00441F  3  91 rr                sta (z80_ix),y
004421  3  A0 09                ldy #9
004423  3  B1 rr                lda (z80_ix),y
004425  3  18                   clc
004426  3  69 01                adc #1
004428  3  A0 09                ldy #9
00442A  3  91 rr                sta (z80_ix),y
00442C  3  A9 4B        h00516: lda #75
00442E  3  A0 09                ldy #9
004430  3  D1 rr                cmp (z80_ix),y
004432  3  90 03                bcc *+5
004434  3  4C 4F 44             jmp h00590
004437  3  A9 00                lda #0
004439  3  C5 rr                cmp varc
00443B  3  F0 03                beq *+5
00443D  3  4C 4F 44             jmp h00590
004440  3  A9 FF                lda #255
004442  3  85 rr                sta z80_c
004444  3  A0 09                ldy #9
004446  3  B1 rr                lda (z80_ix),y
004448  3  18                   clc
004449  3  65 rr                adc z80_c
00444B  3  A0 09                ldy #9
00444D  3  91 rr                sta (z80_ix),y
00444F  3  A9 00        h00590: lda #0
004451  3  C5 rr                cmp varc
004453  3  F0 03                beq *+5
004455  3  4C 66 44             jmp h00634
004458  3  A0 06                ldy #6
00445A  3  B1 rr                lda (z80_ix),y
00445C  3  C9 12                cmp #18
00445E  3  90 03                bcc *+5
004460  3  4C 66 44             jmp h00634
004463  3  20 FF 1D             jsr animsp
004466  3  A9 07        h00634: lda #7
004468  3  85 rr                sta z80_b
00446A  3  20 40 1E             jsr sktyp
00446D  3  B0 03                bcs :+
00446F  3  4C 88 44             jmp h00704
004472  3               :
004472  3  A0 06                ldy #6
004474  3  B1 rr                lda (z80_ix),y
004476  3  C9 12                cmp #18
004478  3  90 03                bcc *+5
00447A  3  4C 88 44             jmp h00704
00447D  3  A0 09                ldy #9
00447F  3  B1 rr                lda (z80_ix),y
004481  3  18                   clc
004482  3  69 01                adc #1
004484  3  A0 09                ldy #9
004486  3  91 rr                sta (z80_ix),y
004488  3  A9 10        h00704: lda #16
00448A  3  A0 06                ldy #6
00448C  3  D1 rr                cmp (z80_ix),y
00448E  3  F0 03                beq *+5
004490  3  4C AD 44             jmp h00778
004493  3  A9 00                lda #0
004495  3  C5 rr                cmp varj
004497  3  90 03                bcc *+5
004499  3  4C AD 44             jmp h00778
00449C  3  A9 58                lda #88
00449E  3  A0 09                ldy #9
0044A0  3  D1 rr                cmp (z80_ix),y
0044A2  3  90 03                bcc *+5
0044A4  3  4C AD 44             jmp h00778
0044A7  3  A9 11                lda #17
0044A9  3  A0 06                ldy #6
0044AB  3  91 rr                sta (z80_ix),y
0044AD  3  A9 12        h00778: lda #18
0044AF  3  A0 06                ldy #6
0044B1  3  D1 rr                cmp (z80_ix),y
0044B3  3  F0 03                beq *+5
0044B5  3  4C EC 45             jmp h01451
0044B8  3  A9 50                lda #80
0044BA  3  C5 rr                cmp varj
0044BC  3  90 03                bcc *+5
0044BE  3  4C D5 44             jmp h00860
0044C1  3  A5 rr                lda varj
0044C3  3  C9 5C                cmp #92
0044C5  3  90 03                bcc *+5
0044C7  3  4C D5 44             jmp h00860
0044CA  3  A0 09                ldy #9
0044CC  3  B1 rr                lda (z80_ix),y
0044CE  3  18                   clc
0044CF  3  69 01                adc #1
0044D1  3  A0 09                ldy #9
0044D3  3  91 rr                sta (z80_ix),y
0044D5  3  A0 09        h00860: ldy #9
0044D7  3  B1 rr                lda (z80_ix),y
0044D9  3  C9 1E                cmp #30
0044DB  3  90 03                bcc *+5
0044DD  3  4C 27 45             jmp h01036
0044E0  3  A9 00                lda #0
0044E2  3  A0 0C                ldy #12
0044E4  3  91 rr                sta (z80_ix),y
0044E6  3  A9 00                lda #0
0044E8  3  C5 rr                cmp varc
0044EA  3  F0 03                beq *+5
0044EC  3  4C 27 45             jmp h01036
0044EF  3  A0 07                ldy #7
0044F1  3  B1 rr                lda (z80_ix),y
0044F3  3  18                   clc
0044F4  3  69 01                adc #1
0044F6  3  A0 07                ldy #7
0044F8  3  91 rr                sta (z80_ix),y
0044FA  3  A0 09                ldy #9
0044FC  3  B1 rr                lda (z80_ix),y
0044FE  3  18                   clc
0044FF  3  69 01                adc #1
004501  3  A0 09                ldy #9
004503  3  91 rr                sta (z80_ix),y
004505  3  A9 1E                lda #30
004507  3  A0 09                ldy #9
004509  3  D1 rr                cmp (z80_ix),y
00450B  3  F0 03                beq *+5
00450D  3  4C 16 45             jmp h01000
004510  3  A9 50                lda #80
004512  3  A0 0C                ldy #12
004514  3  91 rr                sta (z80_ix),y
004516  3  A9 03        h01000: lda #3
004518  3  A0 07                ldy #7
00451A  3  D1 rr                cmp (z80_ix),y
00451C  3  F0 03                beq *+5
00451E  3  4C 27 45             jmp h01036
004521  3  A9 00                lda #0
004523  3  A0 07                ldy #7
004525  3  91 rr                sta (z80_ix),y
004527  3  A9 01        h01036: lda #1
004529  3  A0 0C                ldy #12
00452B  3  D1 rr                cmp (z80_ix),y
00452D  3  90 03                bcc *+5
00452F  3  4C 62 45             jmp h01162
004532  3  A0 0C                ldy #12
004534  3  B1 rr                lda (z80_ix),y
004536  3  38                   sec
004537  3  E9 01                sbc #1
004539  3  A0 0C                ldy #12
00453B  3  91 rr                sta (z80_ix),y
00453D  3  A9 00                lda #0
00453F  3  C5 rr                cmp varc
004541  3  F0 03                beq *+5
004543  3  4C 51 45             jmp h01127
004546  3  A0 07                ldy #7
004548  3  B1 rr                lda (z80_ix),y
00454A  3  18                   clc
00454B  3  69 01                adc #1
00454D  3  A0 07                ldy #7
00454F  3  91 rr                sta (z80_ix),y
004551  3  A9 05        h01127: lda #5
004553  3  A0 07                ldy #7
004555  3  D1 rr                cmp (z80_ix),y
004557  3  F0 03                beq *+5
004559  3  4C 62 45             jmp h01162
00455C  3  A9 03                lda #3
00455E  3  A0 07                ldy #7
004560  3  91 rr                sta (z80_ix),y
004562  3  A9 1F        h01162: lda #31
004564  3  A0 09                ldy #9
004566  3  D1 rr                cmp (z80_ix),y
004568  3  F0 03                beq *+5
00456A  3  4C 73 45             jmp h01197
00456D  3  A9 00                lda #0
00456F  3  A0 07                ldy #7
004571  3  91 rr                sta (z80_ix),y
004573  3  A9 01        h01197: lda #1
004575  3  A0 0C                ldy #12
004577  3  D1 rr                cmp (z80_ix),y
004579  3  F0 03                beq *+5
00457B  3  4C EC 45             jmp h01451
00457E  3  A9 00                lda #0
004580  3  C5 rr                cmp varc
004582  3  F0 03                beq *+5
004584  3  4C 9D 45             jmp h01288
004587  3  A0 09                ldy #9
004589  3  B1 rr                lda (z80_ix),y
00458B  3  18                   clc
00458C  3  69 01                adc #1
00458E  3  A0 09                ldy #9
004590  3  91 rr                sta (z80_ix),y
004592  3  A0 07                ldy #7
004594  3  B1 rr                lda (z80_ix),y
004596  3  18                   clc
004597  3  69 01                adc #1
004599  3  A0 07                ldy #7
00459B  3  91 rr                sta (z80_ix),y
00459D  3  A9 02        h01288: lda #2
00459F  3  C5 rr                cmp varc
0045A1  3  F0 03                beq *+5
0045A3  3  4C BC 45             jmp h01356
0045A6  3  A0 09                ldy #9
0045A8  3  B1 rr                lda (z80_ix),y
0045AA  3  18                   clc
0045AB  3  69 01                adc #1
0045AD  3  A0 09                ldy #9
0045AF  3  91 rr                sta (z80_ix),y
0045B1  3  A0 07                ldy #7
0045B3  3  B1 rr                lda (z80_ix),y
0045B5  3  18                   clc
0045B6  3  69 01                adc #1
0045B8  3  A0 07                ldy #7
0045BA  3  91 rr                sta (z80_ix),y
0045BC  3  A9 02        h01356: lda #2
0045BE  3  A0 07                ldy #7
0045C0  3  D1 rr                cmp (z80_ix),y
0045C2  3  90 03                bcc *+5
0045C4  3  4C CD 45             jmp h01391
0045C7  3  A9 00                lda #0
0045C9  3  A0 07                ldy #7
0045CB  3  91 rr                sta (z80_ix),y
0045CD  3  A9 50        h01391: lda #80
0045CF  3  A0 09                ldy #9
0045D1  3  D1 rr                cmp (z80_ix),y
0045D3  3  F0 03                beq *+5
0045D5  3  4C EC 45             jmp h01451
0045D8  3  A9 00                lda #0
0045DA  3  C5 rr                cmp varj
0045DC  3  F0 03                beq *+5
0045DE  3  4C EC 45             jmp h01451
0045E1  3  A9 00                lda #0
0045E3  3  85 rr                sta scno
0045E5  3  20 57 1F             jsr nwscr
0045E8  3  A9 01                lda #1
0045EA  3  85 rr                sta restfl
0045EC  3  A5 rr        h01451: lda joyval
0045EE  3  29 10                and #16
0045F0  3  F0 03                beq :+
0045F2  3  4C 08 46             jmp h01506
0045F5  3               :
0045F5  3  A9 00                lda #0
0045F7  3  85 rr                sta varj
0045F9  3  A9 00                lda #0
0045FB  3  85 rr                sta varl
0045FD  3  A9 00                lda #0
0045FF  3  85 rr                sta scno
004601  3  20 57 1F             jsr nwscr
004604  3  A9 01                lda #1
004606  3  85 rr                sta restfl
004608  3  A5 rr        h01506: lda joyval
00460A  3  29 20                and #32
00460C  3  F0 03                beq :+
00460E  3  4C 24 46             jmp h01561
004611  3               :
004611  3  A9 00                lda #0
004613  3  85 rr                sta varj
004615  3  A9 00                lda #0
004617  3  85 rr                sta varl
004619  3  A9 00                lda #0
00461B  3  85 rr                sta scno
00461D  3  20 57 1F             jsr nwscr
004620  3  A9 01                lda #1
004622  3  85 rr                sta restfl
004624  3  A9 5A        h01561: lda #90
004626  3  C5 rr                cmp varj
004628  3  F0 03                beq *+5
00462A  3  4C 40 46             jmp h01615
00462D  3  A9 00                lda #0
00462F  3  85 rr                sta varj
004631  3  A9 00                lda #0
004633  3  85 rr                sta varl
004635  3  A9 00                lda #0
004637  3  85 rr                sta scno
004639  3  20 57 1F             jsr nwscr
00463C  3  A9 01                lda #1
00463E  3  85 rr                sta restfl
004640  3  60           h01615: rts
004641  3               evnt08:
004641  3  A9 00                lda #0
004643  3  A0 0C                ldy #12
004645  3  D1 rr                cmp (z80_ix),y
004647  3  90 03                bcc *+5
004649  3  4C A8 47             jmp i00758
00464C  3  20 FF 1D             jsr animsp
00464F  3  A0 0C                ldy #12
004651  3  B1 rr                lda (z80_ix),y
004653  3  38                   sec
004654  3  E9 01                sbc #1
004656  3  A0 0C                ldy #12
004658  3  91 rr                sta (z80_ix),y
00465A  3  A9 01                lda #1
00465C  3  C5 rr                cmp varc
00465E  3  90 03                bcc *+5
004660  3  4C 79 46             jmp i00124
004663  3  A9 50                lda #80
004665  3  A0 0C                ldy #12
004667  3  D1 rr                cmp (z80_ix),y
004669  3  90 03                bcc *+5
00466B  3  4C 76 46             jmp i00112
00466E  3  A0 0C                ldy #12
004670  3  B1 rr                lda (z80_ix),y
004672  3  0A                   asl a
004673  3  8D CA 0E             sta sndtyp
004676  3               i00112: ; SPRITEINK command
004676  3  4C 79 46             jmp i00131
004679  3               i00124: ; SPRITEINK command
004679  3  A9 00        i00131: lda #0
00467B  3  A0 0C                ldy #12
00467D  3  D1 rr                cmp (z80_ix),y
00467F  3  F0 03                beq *+5
004681  3  4C A8 47             jmp i00758
004684  3  A9 00                lda #0
004686  3  85 rr                sta varo
004688  3  A9 06                lda #CUSTOM
00468A  3  85 rr                sta z80_b
00468C  3  20 1E 18             jsr tded
00468F  3  C5 rr                cmp z80_b
004691  3  F0 03                beq :+
004693  3  4C 70 47             jmp i00636
004696  3               :
004696  3  A9 10                lda #16
004698  3  85 rr                sta z80_c
00469A  3  A0 08                ldy #8
00469C  3  B1 rr                lda (z80_ix),y
00469E  3  18                   clc
00469F  3  65 rr                adc z80_c
0046A1  3  A0 08                ldy #8
0046A3  3  91 rr                sta (z80_ix),y
0046A5  3  A9 01                lda #1
0046A7  3  85 rr                sta z80_b
0046A9  3  20 40 1E             jsr sktyp
0046AC  3  B0 03                bcs :+
0046AE  3  4C B5 46             jmp i00253
0046B1  3               :
0046B1  3  A9 01                lda #1
0046B3  3  85 rr                sta varo
0046B5  3  A9 08        i00253: lda #8
0046B7  3  85 rr                sta z80_b
0046B9  3  20 40 1E             jsr sktyp
0046BC  3  B0 03                bcs :+
0046BE  3  4C C5 46             jmp i00283
0046C1  3               :
0046C1  3  A9 01                lda #1
0046C3  3  85 rr                sta varo
0046C5  3  A9 20        i00283: lda #32
0046C7  3  85 rr                sta z80_c
0046C9  3  A0 08                ldy #8
0046CB  3  B1 rr                lda (z80_ix),y
0046CD  3  38                   sec
0046CE  3  E5 rr                sbc z80_c
0046D0  3  A0 08                ldy #8
0046D2  3  91 rr                sta (z80_ix),y
0046D4  3  A9 01                lda #1
0046D6  3  85 rr                sta z80_b
0046D8  3  20 40 1E             jsr sktyp
0046DB  3  B0 03                bcs :+
0046DD  3  4C E4 46             jmp i00348
0046E0  3               :
0046E0  3  A9 01                lda #1
0046E2  3  85 rr                sta varo
0046E4  3  A9 08        i00348: lda #8
0046E6  3  85 rr                sta z80_b
0046E8  3  20 40 1E             jsr sktyp
0046EB  3  B0 03                bcs :+
0046ED  3  4C F4 46             jmp i00377
0046F0  3               :
0046F0  3  A9 01                lda #1
0046F2  3  85 rr                sta varo
0046F4  3  A9 10        i00377: lda #16
0046F6  3  85 rr                sta z80_c
0046F8  3  A0 08                ldy #8
0046FA  3  B1 rr                lda (z80_ix),y
0046FC  3  18                   clc
0046FD  3  65 rr                adc z80_c
0046FF  3  A0 08                ldy #8
004701  3  91 rr                sta (z80_ix),y
004703  3  A9 10                lda #16
004705  3  85 rr                sta z80_c
004707  3  A0 09                ldy #9
004709  3  B1 rr                lda (z80_ix),y
00470B  3  18                   clc
00470C  3  65 rr                adc z80_c
00470E  3  A0 09                ldy #9
004710  3  91 rr                sta (z80_ix),y
004712  3  A9 01                lda #1
004714  3  85 rr                sta z80_b
004716  3  20 40 1E             jsr sktyp
004719  3  B0 03                bcs :+
00471B  3  4C 22 47             jmp i00477
00471E  3               :
00471E  3  A9 01                lda #1
004720  3  85 rr                sta varo
004722  3  A9 08        i00477: lda #8
004724  3  85 rr                sta z80_b
004726  3  20 40 1E             jsr sktyp
004729  3  B0 03                bcs :+
00472B  3  4C 32 47             jmp i00507
00472E  3               :
00472E  3  A9 01                lda #1
004730  3  85 rr                sta varo
004732  3  A9 20        i00507: lda #32
004734  3  85 rr                sta z80_c
004736  3  A0 09                ldy #9
004738  3  B1 rr                lda (z80_ix),y
00473A  3  38                   sec
00473B  3  E5 rr                sbc z80_c
00473D  3  A0 09                ldy #9
00473F  3  91 rr                sta (z80_ix),y
004741  3  A9 01                lda #1
004743  3  85 rr                sta z80_b
004745  3  20 40 1E             jsr sktyp
004748  3  B0 03                bcs :+
00474A  3  4C 51 47             jmp i00572
00474D  3               :
00474D  3  A9 01                lda #1
00474F  3  85 rr                sta varo
004751  3  A9 08        i00572: lda #8
004753  3  85 rr                sta z80_b
004755  3  20 40 1E             jsr sktyp
004758  3  B0 03                bcs :+
00475A  3  4C 61 47             jmp i00601
00475D  3               :
00475D  3  A9 01                lda #1
00475F  3  85 rr                sta varo
004761  3  A9 10        i00601: lda #16
004763  3  85 rr                sta z80_c
004765  3  A0 09                ldy #9
004767  3  B1 rr                lda (z80_ix),y
004769  3  18                   clc
00476A  3  65 rr                adc z80_c
00476C  3  A0 09                ldy #9
00476E  3  91 rr                sta (z80_ix),y
004770  3  A9 00        i00636: lda #0
004772  3  C5 rr                cmp varo
004774  3  F0 03                beq *+5
004776  3  4C 9D 47             jmp i00732
004779  3  A9 00                lda #0
00477B  3  A0 0B                ldy #11
00477D  3  D1 rr                cmp (z80_ix),y
00477F  3  90 03                bcc *+5
004781  3  4C 93 47             jmp i00711
004784  3  A9 FF                lda #255
004786  3  85 rr                sta z80_c
004788  3  A0 0B                ldy #11
00478A  3  B1 rr                lda (z80_ix),y
00478C  3  18                   clc
00478D  3  65 rr                adc z80_c
00478F  3  A0 0B                ldy #11
004791  3  91 rr                sta (z80_ix),y
004793  3  A9 01        i00711: lda #1
004795  3  A0 05                ldy #5
004797  3  91 rr                sta (z80_ix),y
004799  3  60                   rts
00479A  3  4C A8 47             jmp i00758
00479D  3  A0 0C        i00732: ldy #12
00479F  3  B1 rr                lda (z80_ix),y
0047A1  3  18                   clc
0047A2  3  69 01                adc #1
0047A4  3  A0 0C                ldy #12
0047A6  3  91 rr                sta (z80_ix),y
0047A8  3  60           i00758: rts
0047A9  3               evnt09:
0047A9  3  A9 05                lda #5
0047AB  3  A0 05                ldy #5
0047AD  3  D1 rr                cmp (z80_ix),y
0047AF  3  F0 03                beq *+5
0047B1  3  4C CE 47             jmp j00078
0047B4  3  A9 00                lda #0
0047B6  3  A0 09                ldy #9
0047B8  3  D1 rr                cmp (z80_ix),y
0047BA  3  F0 03                beq *+5
0047BC  3  4C C8 47             jmp j00064
0047BF  3  A9 63                lda #99
0047C1  3  A0 0C                ldy #12
0047C3  3  91 rr                sta (z80_ix),y
0047C5  3  4C CE 47             jmp j00078
0047C8  3  A9 00        j00064: lda #0
0047CA  3  A0 0C                ldy #12
0047CC  3  91 rr                sta (z80_ix),y
0047CE  3  A9 02        j00078: lda #2
0047D0  3  A0 05                ldy #5
0047D2  3  D1 rr                cmp (z80_ix),y
0047D4  3  F0 03                beq *+5
0047D6  3  4C FF 47             jmp j00177
0047D9  3  A9 28                lda #40
0047DB  3  0A                   asl a
0047DC  3  8D CA 0E             sta sndtyp
0047DF  3  A9 07                lda #7
0047E1  3  85 rr                sta chary
0047E3  3  A9 1D                lda #29
0047E5  3  85 rr                sta charx
0047E7  3  A9 18                lda #24
0047E9  3  20 D3 19             jsr dmsg
0047EC  3  A9 07                lda #7
0047EE  3  85 rr                sta chary
0047F0  3  A9 1D                lda #29
0047F2  3  85 rr                sta charx
0047F4  3  A5 rr                lda vark
0047F6  3  20 DB 1E             jsr disply
0047F9  3  A9 FF                lda #255
0047FB  3  A0 0A                ldy #10
0047FD  3  91 rr                sta (z80_ix),y
0047FF  3  A9 00        j00177: lda #0
004801  3  A0 05                ldy #5
004803  3  D1 rr                cmp (z80_ix),y
004805  3  F0 03                beq *+5
004807  3  4C 1C 48             jmp j00240
00480A  3  A9 00                lda #0
00480C  3  A0 0B                ldy #11
00480E  3  91 rr                sta (z80_ix),y
004810  3  A9 00                lda #0
004812  3  A0 0C                ldy #12
004814  3  91 rr                sta (z80_ix),y
004816  3  A9 FF                lda #255
004818  3  A0 0A                ldy #10
00481A  3  91 rr                sta (z80_ix),y
00481C  3  A9 08        j00240: lda #8
00481E  3  A0 05                ldy #5
004820  3  D1 rr                cmp (z80_ix),y
004822  3  F0 03                beq *+5
004824  3  4C 6A 48             jmp j00415
004827  3  A9 14                lda #20
004829  3  A0 0C                ldy #12
00482B  3  91 rr                sta (z80_ix),y
00482D  3  A0 06                ldy #6
00482F  3  B1 rr                lda (z80_ix),y
004831  3  A0 0B                ldy #11
004833  3  91 rr                sta (z80_ix),y
004835  3  A9 08                lda #8
004837  3  85 rr                sta z80_c
004839  3  A0 0B                ldy #11
00483B  3  B1 rr                lda (z80_ix),y
00483D  3  38                   sec
00483E  3  E5 rr                sbc z80_c
004840  3  A0 0B                ldy #11
004842  3  91 rr                sta (z80_ix),y
004844  3  A9 01                lda #1
004846  3  A0 0A                ldy #10
004848  3  91 rr                sta (z80_ix),y
00484A  3  A5 rr                lda varr
00484C  3  85 rr                sta z80_c
00484E  3  A0 0B                ldy #11
004850  3  B1 rr                lda (z80_ix),y
004852  3  18                   clc
004853  3  65 rr                adc z80_c
004855  3  A0 0B                ldy #11
004857  3  91 rr                sta (z80_ix),y
004859  3  A9 02                lda #2
00485B  3  A0 0B                ldy #11
00485D  3  D1 rr                cmp (z80_ix),y
00485F  3  90 03                bcc *+5
004861  3  4C 6A 48             jmp j00415
004864  3  A9 02                lda #2
004866  3  A0 0B                ldy #11
004868  3  91 rr                sta (z80_ix),y
00486A  3  60           j00415: rts
00486B  3               evnt10:
00486B  3  A5 rr                lda joyval
00486D  3  29 40                and #64
00486F  3  F0 03                beq :+
004871  3  4C 81 48             jmp k00046
004874  3               :
004874  3  A5 rr                lda joyval
004876  3  29 20                and #32
004878  3  F0 03                beq :+
00487A  3  4C 81 48             jmp k00046
00487D  3               :
00487D  3  A9 01                lda #1
00487F  3  85 rr                sta gamwon
004881  3  A5 rr        k00046: lda varc
004883  3  18                   clc
004884  3  69 01                adc #1
004886  3  85 rr                sta varc
004888  3  A9 03                lda #3
00488A  3  C5 rr                cmp varc
00488C  3  90 03                bcc *+5
00488E  3  4C 95 48             jmp k00086
004891  3  A9 00                lda #0
004893  3  85 rr                sta varc
004895  3  A5 rr        k00086: lda scno
004897  3  C9 04                cmp #4
004899  3  90 03                bcc *+5
00489B  3  4C 53 49             jmp k00486
00489E  3  A9 AA                lda #170
0048A0  3  85 rr                sta z80_d
0048A2  3  20 3D 19             jsr random
0048A5  3  85 rr                sta z80_h
0048A7  3  20 4A 11             jsr imul
0048AA  3  A5 rr                lda z80_h
0048AC  3  85 rr                sta varrnd
0048AE  3  A5 rr                lda varrnd
0048B0  3  C5 rr                cmp clock
0048B2  3  F0 03                beq *+5
0048B4  3  4C 06 49             jmp k00325
0048B7  3  A0 08                ldy #8
0048B9  3  B1 rr                lda (z80_ix),y
0048BB  3  85 rr                sta varo
0048BD  3  A0 09                ldy #9
0048BF  3  B1 rr                lda (z80_ix),y
0048C1  3  85 rr                sta varp
0048C3  3  A9 58                lda #88
0048C5  3  A0 08                ldy #8
0048C7  3  91 rr                sta (z80_ix),y
0048C9  3  A9 60                lda #96
0048CB  3  A0 09                ldy #9
0048CD  3  91 rr                sta (z80_ix),y
0048CF  3  20 5F 12             jsr skobj
0048D2  3  85 rr                sta varobj
0048D4  3  A9 08                lda #8
0048D6  3  C5 rr                cmp varobj
0048D8  3  F0 03                beq *+5
0048DA  3  4C E0 48             jmp k00238
0048DD  3  4C FA 48             jmp k00298
0048E0  3  A5 rr        k00238: lda vark
0048E2  3  C9 0F                cmp #15
0048E4  3  90 03                bcc *+5
0048E6  3  4C FA 48             jmp k00298
0048E9  3                       ; SPRITEINK command
0048E9  3  A0 09                ldy #9
0048EB  3  B1 rr                lda (z80_ix),y
0048ED  3  85 rr                sta dispx
0048EF  3  A0 08                ldy #8
0048F1  3  B1 rr                lda (z80_ix),y
0048F3  3  85 rr                sta dispy
0048F5  3  A9 08                lda #8
0048F7  3  20 3E 12             jsr drpob
0048FA  3  A5 rr        k00298: lda varo
0048FC  3  A0 08                ldy #8
0048FE  3  91 rr                sta (z80_ix),y
004900  3  A5 rr                lda varp
004902  3  A0 09                ldy #9
004904  3  91 rr                sta (z80_ix),y
004906  3  A9 00        k00325: lda #0
004908  3  C5 rr                cmp vark
00490A  3  F0 03                beq *+5
00490C  3  4C 53 49             jmp k00486
00490F  3  A9 32                lda #50
004911  3  C5 rr                cmp clock
004913  3  F0 03                beq *+5
004915  3  4C 25 49             jmp k00390
004918  3                       ; COLOUR command
004918  3  A9 1B                lda #27
00491A  3  85 rr                sta charx
00491C  3  A9 06                lda #6
00491E  3  85 rr                sta chary
004920  3  A9 03                lda #3
004922  3  20 D3 19             jsr dmsg
004925  3  A9 64        k00390: lda #100
004927  3  C5 rr                cmp clock
004929  3  F0 03                beq *+5
00492B  3  4C 3B 49             jmp k00439
00492E  3                       ; COLOUR command
00492E  3  A9 1B                lda #27
004930  3  85 rr                sta charx
004932  3  A9 06                lda #6
004934  3  85 rr                sta chary
004936  3  A9 03                lda #3
004938  3  20 D3 19             jsr dmsg
00493B  3  A9 3C        k00439: lda #60
00493D  3  C5 rr                cmp clock
00493F  3  90 03                bcc *+5
004941  3  4C 53 49             jmp k00486
004944  3  A5 rr                lda clock
004946  3  C9 5A                cmp #90
004948  3  90 03                bcc *+5
00494A  3  4C 53 49             jmp k00486
00494D  3  A5 rr                lda clock
00494F  3  0A                   asl a
004950  3  8D CA 0E             sta sndtyp
004953  3  60           k00486: rts
004954  3               evnt11:
004954  3  60                   rts
004955  3               evnt12:
004955  3  60                   rts
004956  3               evnt13:
004956  3  A9 00                lda #0
004958  3  85 rr                sta varq
00495A  3  A9 00                lda #0
00495C  3  85 rr                sta varr
00495E  3  A9 00                lda #0
004960  3  85 rr                sta varm
004962  3  A9 03                lda #3
004964  3  85 rr                sta vark
004966  3  A9 06                lda #6
004968  3  85 rr                sta scno
00496A  3  20 57 1F             jsr nwscr
00496D  3  A9 00                lda #0
00496F  3  85 rr                sta varl
004971  3  A9 00                lda #0
004973  3  85 rr                sta vari
004975  3  A9 00                lda #0
004977  3  85 rr                sta varj
004979  3  A9 03                lda #3
00497B  3  85 rr                sta numlif
00497D  3                       ; COLOUR command
00497D  3                       ; BORDER command
00497D  3  20 0C 0F             jsr cls
004980  3                       ; COLOUR command
004980  3  A9 00                lda #0
004982  3  85 rr                sta varf
004984  3  60                   rts
004985  3               evnt14:
004985  3  A9 00                lda #0
004987  3  85 rr                sta varq
004989  3  A9 0F                lda #15
00498B  3  85 rr                sta vars
00498D  3  A9 01                lda #1
00498F  3  C5 rr                cmp varl
004991  3  F0 03                beq *+5
004993  3  4C 9A 49             jmp o00043
004996  3  A9 47                lda #71
004998  3  85 rr                sta vars
00499A  3               o00043: ; COLOUR command
00499A  3                       ; BORDER command
00499A  3  20 0C 0F             jsr cls
00499D  3  A5 rr                lda scno
00499F  3  C9 06                cmp #6
0049A1  3  90 03                bcc *+5
0049A3  3  4C 69 4A             jmp o00469
0049A6  3  A9 00                lda #0
0049A8  3  85 rr                sta chary
0049AA  3  A9 1B                lda #27
0049AC  3  85 rr                sta charx
0049AE  3  A9 02                lda #2
0049B0  3  20 D3 19             jsr dmsg
0049B3  3  A9 02                lda #2
0049B5  3  85 rr                sta chary
0049B7  3  A9 1A                lda #26
0049B9  3  85 rr                sta charx
0049BB  3  A9 18                lda #24
0049BD  3  20 D3 19             jsr dmsg
0049C0  3  A9 02                lda #2
0049C2  3  85 rr                sta chary
0049C4  3  A9 1D                lda #29
0049C6  3  85 rr                sta charx
0049C8  3  A9 18                lda #24
0049CA  3  20 D3 19             jsr dmsg
0049CD  3  A9 02                lda #2
0049CF  3  85 rr                sta chary
0049D1  3  A9 1B                lda #27
0049D3  3  85 rr                sta charx
0049D5  3  A5 rr                lda numlif
0049D7  3  85 rr                sta loopa
0049D9  3  A5 rr        o00177: lda charx
0049DB  3  85 rr                sta dispx
0049DD  3  A5 rr                lda chary
0049DF  3  85 rr                sta dispy
0049E1  3  A9 57                lda #87
0049E3  3  20 55 15             jsr pattr
0049E6  3  C6 rr                dec loopa
0049E8  3  F0 03                beq :+
0049EA  3  4C D9 49             jmp o00177
0049ED  3               :
0049ED  3  A9 03                lda #3
0049EF  3  85 rr                sta chary
0049F1  3  A9 1B                lda #27
0049F3  3  85 rr                sta charx
0049F5  3  A9 0E                lda #14
0049F7  3  20 D3 19             jsr dmsg
0049FA  3  A9 06                lda #6
0049FC  3  85 rr                sta chary
0049FE  3  A9 1B                lda #27
004A00  3  85 rr                sta charx
004A02  3  A9 03                lda #3
004A04  3  20 D3 19             jsr dmsg
004A07  3  A9 09                lda #9
004A09  3  85 rr                sta chary
004A0B  3  A9 1B                lda #27
004A0D  3  85 rr                sta charx
004A0F  3  A9 04                lda #4
004A11  3  20 D3 19             jsr dmsg
004A14  3  A9 0C                lda #12
004A16  3  85 rr                sta chary
004A18  3  A9 1B                lda #27
004A1A  3  85 rr                sta charx
004A1C  3  A9 05                lda #5
004A1E  3  20 D3 19             jsr dmsg
004A21  3  A9 01                lda #1
004A23  3  85 rr                sta chary
004A25  3  A9 1B                lda #27
004A27  3  85 rr                sta charx
004A29  3                       ; COLOUR command
004A29  3  20 94 13             jsr dscor
004A2C  3  A9 04                lda #4
004A2E  3  85 rr                sta chary
004A30  3  A9 1B                lda #27
004A32  3  85 rr                sta charx
004A34  3  A9 1D                lda #29
004A36  3  85 rr                sta charx
004A38  3  A9 07                lda #7
004A3A  3  85 rr                sta chary
004A3C  3  A5 rr                lda vark
004A3E  3  20 DB 1E             jsr disply
004A41  3  A9 0A                lda #10
004A43  3  85 rr                sta chary
004A45  3  A9 1D                lda #29
004A47  3  85 rr                sta charx
004A49  3  A5 rr                lda varf
004A4B  3  18                   clc
004A4C  3  69 01                adc #1
004A4E  3  85 rr                sta varf
004A50  3  A5 rr                lda varf
004A52  3  20 DB 1E             jsr disply
004A55  3  A5 rr                lda varf
004A57  3  38                   sec
004A58  3  E9 01                sbc #1
004A5A  3  85 rr                sta varf
004A5C  3  A9 1D                lda #29
004A5E  3  85 rr                sta charx
004A60  3  A9 0D                lda #13
004A62  3  85 rr                sta chary
004A64  3  A5 rr                lda vari
004A66  3  20 DB 1E             jsr disply
004A69  3  A9 0E        o00469: lda #14
004A6B  3  85 rr                sta varp
004A6D  3  A9 24                lda #36
004A6F  3  85 rr                sta varq
004A71  3  A9 0A                lda #10
004A73  3  85 rr                sta loopa
004A75  3  A9 1B        o00494: lda #27
004A77  3  85 rr                sta charx
004A79  3  A5 rr                lda varp
004A7B  3  85 rr                sta chary
004A7D  3  A5 rr                lda charx
004A7F  3  85 rr                sta dispx
004A81  3  A5 rr                lda chary
004A83  3  85 rr                sta dispy
004A85  3  A5 rr                lda varq
004A87  3  20 55 15             jsr pattr
004A8A  3  A5 rr                lda varq
004A8C  3  18                   clc
004A8D  3  69 01                adc #1
004A8F  3  85 rr                sta varq
004A91  3  A5 rr                lda charx
004A93  3  85 rr                sta dispx
004A95  3  A5 rr                lda chary
004A97  3  85 rr                sta dispy
004A99  3  A5 rr                lda varq
004A9B  3  20 55 15             jsr pattr
004A9E  3  A5 rr                lda varq
004AA0  3  18                   clc
004AA1  3  69 01                adc #1
004AA3  3  85 rr                sta varq
004AA5  3  A5 rr                lda charx
004AA7  3  85 rr                sta dispx
004AA9  3  A5 rr                lda chary
004AAB  3  85 rr                sta dispy
004AAD  3  A5 rr                lda varq
004AAF  3  20 55 15             jsr pattr
004AB2  3  A5 rr                lda varq
004AB4  3  18                   clc
004AB5  3  69 01                adc #1
004AB7  3  85 rr                sta varq
004AB9  3  A5 rr                lda charx
004ABB  3  85 rr                sta dispx
004ABD  3  A5 rr                lda chary
004ABF  3  85 rr                sta dispy
004AC1  3  A5 rr                lda varq
004AC3  3  20 55 15             jsr pattr
004AC6  3  A5 rr                lda varq
004AC8  3  18                   clc
004AC9  3  69 01                adc #1
004ACB  3  85 rr                sta varq
004ACD  3  A5 rr                lda charx
004ACF  3  85 rr                sta dispx
004AD1  3  A5 rr                lda chary
004AD3  3  85 rr                sta dispy
004AD5  3  A5 rr                lda varq
004AD7  3  20 55 15             jsr pattr
004ADA  3  A5 rr                lda varq
004ADC  3  18                   clc
004ADD  3  69 01                adc #1
004ADF  3  85 rr                sta varq
004AE1  3  A5 rr                lda varp
004AE3  3  18                   clc
004AE4  3  69 01                adc #1
004AE6  3  85 rr                sta varp
004AE8  3  C6 rr                dec loopa
004AEA  3  F0 03                beq :+
004AEC  3  4C 75 4A             jmp o00494
004AEF  3               :
004AEF  3  A5 rr                lda scno
004AF1  3  18                   clc
004AF2  3  69 01                adc #1
004AF4  3  85 rr                sta scno
004AF6  3  20 57 1F             jsr nwscr
004AF9  3  A5 rr                lda scno
004AFB  3  85 rr                sta varm
004AFD  3  A5 rr                lda scno
004AFF  3  38                   sec
004B00  3  E9 01                sbc #1
004B02  3  85 rr                sta scno
004B04  3  20 57 1F             jsr nwscr
004B07  3  A9 04                lda #4
004B09  3  C5 rr                cmp scno
004B0B  3  F0 03                beq *+5
004B0D  3  4C 30 4B             jmp o00880
004B10  3  A9 17                lda #23
004B12  3  85 rr                sta chary
004B14  3  A9 00                lda #0
004B16  3  85 rr                sta charx
004B18  3  A9 1A                lda #26
004B1A  3  85 rr                sta loopa
004B1C  3  A5 rr        o00840: lda charx
004B1E  3  85 rr                sta dispx
004B20  3  A5 rr                lda chary
004B22  3  85 rr                sta dispy
004B24  3  A9 1A                lda #26
004B26  3  20 55 15             jsr pattr
004B29  3  C6 rr                dec loopa
004B2B  3  F0 03                beq :+
004B2D  3  4C 1C 4B             jmp o00840
004B30  3               :
004B30  3               o00880: ; COLOUR command
004B30  3  A9 08                lda #8
004B32  3  85 rr                sta z80_d
004B34  3  20 3D 19             jsr random
004B37  3  85 rr                sta z80_h
004B39  3  20 4A 11             jsr imul
004B3C  3  A5 rr                lda z80_h
004B3E  3  85 rr                sta varrnd
004B40  3  A5 rr                lda varrnd
004B42  3  85 rr                sta varo
004B44  3  A9 08                lda #8
004B46  3  85 rr                sta z80_d
004B48  3  20 3D 19             jsr random
004B4B  3  85 rr                sta z80_h
004B4D  3  20 4A 11             jsr imul
004B50  3  A5 rr                lda z80_h
004B52  3  85 rr                sta varrnd
004B54  3  A5 rr                lda varo
004B56  3  C5 rr                cmp varrnd
004B58  3  F0 03                beq *+5
004B5A  3  4C B0 4B             jmp o01136
004B5D  3  A9 08                lda #8
004B5F  3  85 rr                sta z80_d
004B61  3  20 3D 19             jsr random
004B64  3  85 rr                sta z80_h
004B66  3  20 4A 11             jsr imul
004B69  3  A5 rr                lda z80_h
004B6B  3  85 rr                sta varrnd
004B6D  3  A5 rr                lda varo
004B6F  3  C5 rr                cmp varrnd
004B71  3  F0 03                beq *+5
004B73  3  4C A9 4B             jmp o01122
004B76  3  A9 08                lda #8
004B78  3  85 rr                sta z80_d
004B7A  3  20 3D 19             jsr random
004B7D  3  85 rr                sta z80_h
004B7F  3  20 4A 11             jsr imul
004B82  3  A5 rr                lda z80_h
004B84  3  85 rr                sta varrnd
004B86  3  A5 rr                lda varo
004B88  3  C5 rr                cmp varrnd
004B8A  3  F0 03                beq *+5
004B8C  3  4C A2 4B             jmp o01108
004B8F  3  A9 08                lda #8
004B91  3  85 rr                sta z80_d
004B93  3  20 3D 19             jsr random
004B96  3  85 rr                sta z80_h
004B98  3  20 4A 11             jsr imul
004B9B  3  A5 rr                lda z80_h
004B9D  3  85 rr                sta varrnd
004B9F  3  4C A6 4B             jmp o01117
004BA2  3  A5 rr        o01108: lda varrnd
004BA4  3  85 rr                sta varh
004BA6  3  4C AD 4B     o01117: jmp o01131
004BA9  3  A5 rr        o01122: lda varrnd
004BAB  3  85 rr                sta varh
004BAD  3  4C B4 4B     o01131: jmp o01145
004BB0  3  A5 rr        o01136: lda varrnd
004BB2  3  85 rr                sta varh
004BB4  3  A5 rr        o01145: lda varo
004BB6  3  C5 rr                cmp varh
004BB8  3  F0 03                beq *+5
004BBA  3  4C DC 4B             jmp o01227
004BBD  3  A9 02                lda #2
004BBF  3  85 rr                sta z80_c
004BC1  3  A5 rr                lda varh
004BC3  3  18                   clc
004BC4  3  65 rr                adc z80_c
004BC6  3  85 rr                sta varh
004BC8  3  A9 07                lda #7
004BCA  3  C5 rr                cmp varh
004BCC  3  90 03                bcc *+5
004BCE  3  4C DC 4B             jmp o01227
004BD1  3  A9 07                lda #7
004BD3  3  85 rr                sta z80_c
004BD5  3  A5 rr                lda varh
004BD7  3  38                   sec
004BD8  3  E5 rr                sbc z80_c
004BDA  3  85 rr                sta varh
004BDC  3  A5 rr        o01227: lda varo
004BDE  3  0A                   asl a
004BDF  3  0A                   asl a
004BE0  3  0A                   asl a
004BE1  3  0A                   asl a
004BE2  3  85 rr                sta varo
004BE4  3  A5 rr                lda varo
004BE6  3  85 rr                sta z80_c
004BE8  3  A5 rr                lda varh
004BEA  3  18                   clc
004BEB  3  65 rr                adc z80_c
004BED  3  85 rr                sta varh
004BEF  3  A9 05                lda #5
004BF1  3  85 rr                sta varg
004BF3  3  A9 00                lda #0
004BF5  3  85 rr                sta charx
004BF7  3  A9 17                lda #23
004BF9  3  85 rr                sta chary
004BFB  3  A9 00                lda #0
004BFD  3  C5 rr                cmp scno
004BFF  3  F0 03                beq *+5
004C01  3  4C 43 4C             jmp o01443
004C04  3  A5 rr                lda charx
004C06  3  85 rr                sta dispx
004C08  3  A5 rr                lda chary
004C0A  3  85 rr                sta dispy
004C0C  3  A9 00                lda #0
004C0E  3  20 55 15             jsr pattr
004C11  3  A9 0C                lda #12
004C13  3  85 rr                sta loopa
004C15  3  A5 rr        o01351: lda charx
004C17  3  85 rr                sta dispx
004C19  3  A5 rr                lda chary
004C1B  3  85 rr                sta dispy
004C1D  3  A9 01                lda #1
004C1F  3  20 55 15             jsr pattr
004C22  3  A5 rr                lda charx
004C24  3  85 rr                sta dispx
004C26  3  A5 rr                lda chary
004C28  3  85 rr                sta dispy
004C2A  3  A9 00                lda #0
004C2C  3  20 55 15             jsr pattr
004C2F  3  C6 rr                dec loopa
004C31  3  F0 03                beq :+
004C33  3  4C 15 4C             jmp o01351
004C36  3               :
004C36  3  A5 rr                lda charx
004C38  3  85 rr                sta dispx
004C3A  3  A5 rr                lda chary
004C3C  3  85 rr                sta dispy
004C3E  3  A9 01                lda #1
004C40  3  20 55 15             jsr pattr
004C43  3  A9 01        o01443: lda #1
004C45  3  C5 rr                cmp scno
004C47  3  F0 03                beq *+5
004C49  3  4C A5 4C             jmp o01639
004C4C  3  A9 06                lda #6
004C4E  3  85 rr                sta loopa
004C50  3  A5 rr        o01468: lda charx
004C52  3  85 rr                sta dispx
004C54  3  A5 rr                lda chary
004C56  3  85 rr                sta dispy
004C58  3  A9 00                lda #0
004C5A  3  20 55 15             jsr pattr
004C5D  3  A5 rr                lda charx
004C5F  3  85 rr                sta dispx
004C61  3  A5 rr                lda chary
004C63  3  85 rr                sta dispy
004C65  3  A9 00                lda #0
004C67  3  20 55 15             jsr pattr
004C6A  3  A5 rr                lda charx
004C6C  3  85 rr                sta dispx
004C6E  3  A5 rr                lda chary
004C70  3  85 rr                sta dispy
004C72  3  A9 01                lda #1
004C74  3  20 55 15             jsr pattr
004C77  3  A5 rr                lda charx
004C79  3  85 rr                sta dispx
004C7B  3  A5 rr                lda chary
004C7D  3  85 rr                sta dispy
004C7F  3  A9 01                lda #1
004C81  3  20 55 15             jsr pattr
004C84  3  C6 rr                dec loopa
004C86  3  F0 03                beq :+
004C88  3  4C 50 4C             jmp o01468
004C8B  3               :
004C8B  3  A5 rr                lda charx
004C8D  3  85 rr                sta dispx
004C8F  3  A5 rr                lda chary
004C91  3  85 rr                sta dispy
004C93  3  A9 00                lda #0
004C95  3  20 55 15             jsr pattr
004C98  3  A5 rr                lda charx
004C9A  3  85 rr                sta dispx
004C9C  3  A5 rr                lda chary
004C9E  3  85 rr                sta dispy
004CA0  3  A9 00                lda #0
004CA2  3  20 55 15             jsr pattr
004CA5  3  A9 02        o01639: lda #2
004CA7  3  C5 rr                cmp scno
004CA9  3  F0 03                beq *+5
004CAB  3  4C 07 4D             jmp o01835
004CAE  3  A9 06                lda #6
004CB0  3  85 rr                sta loopa
004CB2  3  A5 rr        o01664: lda charx
004CB4  3  85 rr                sta dispx
004CB6  3  A5 rr                lda chary
004CB8  3  85 rr                sta dispy
004CBA  3  A9 00                lda #0
004CBC  3  20 55 15             jsr pattr
004CBF  3  A5 rr                lda charx
004CC1  3  85 rr                sta dispx
004CC3  3  A5 rr                lda chary
004CC5  3  85 rr                sta dispy
004CC7  3  A9 00                lda #0
004CC9  3  20 55 15             jsr pattr
004CCC  3  A5 rr                lda charx
004CCE  3  85 rr                sta dispx
004CD0  3  A5 rr                lda chary
004CD2  3  85 rr                sta dispy
004CD4  3  A9 01                lda #1
004CD6  3  20 55 15             jsr pattr
004CD9  3  A5 rr                lda charx
004CDB  3  85 rr                sta dispx
004CDD  3  A5 rr                lda chary
004CDF  3  85 rr                sta dispy
004CE1  3  A9 01                lda #1
004CE3  3  20 55 15             jsr pattr
004CE6  3  C6 rr                dec loopa
004CE8  3  F0 03                beq :+
004CEA  3  4C B2 4C             jmp o01664
004CED  3               :
004CED  3  A5 rr                lda charx
004CEF  3  85 rr                sta dispx
004CF1  3  A5 rr                lda chary
004CF3  3  85 rr                sta dispy
004CF5  3  A9 00                lda #0
004CF7  3  20 55 15             jsr pattr
004CFA  3  A5 rr                lda charx
004CFC  3  85 rr                sta dispx
004CFE  3  A5 rr                lda chary
004D00  3  85 rr                sta dispy
004D02  3  A9 00                lda #0
004D04  3  20 55 15             jsr pattr
004D07  3  A9 03        o01835: lda #3
004D09  3  C5 rr                cmp scno
004D0B  3  F0 03                beq *+5
004D0D  3  4C EB 4D             jmp o02293
004D10  3  A9 02                lda #2
004D12  3  85 rr                sta loopa
004D14  3  A5 rr        o01860: lda charx
004D16  3  85 rr                sta dispx
004D18  3  A5 rr                lda chary
004D1A  3  85 rr                sta dispy
004D1C  3  A9 01                lda #1
004D1E  3  20 55 15             jsr pattr
004D21  3  A5 rr                lda charx
004D23  3  85 rr                sta dispx
004D25  3  A5 rr                lda chary
004D27  3  85 rr                sta dispy
004D29  3  A9 00                lda #0
004D2B  3  20 55 15             jsr pattr
004D2E  3  A5 rr                lda charx
004D30  3  85 rr                sta dispx
004D32  3  A5 rr                lda chary
004D34  3  85 rr                sta dispy
004D36  3  A9 00                lda #0
004D38  3  20 55 15             jsr pattr
004D3B  3  A5 rr                lda charx
004D3D  3  85 rr                sta dispx
004D3F  3  A5 rr                lda chary
004D41  3  85 rr                sta dispy
004D43  3  A9 00                lda #0
004D45  3  20 55 15             jsr pattr
004D48  3  A5 rr                lda charx
004D4A  3  85 rr                sta dispx
004D4C  3  A5 rr                lda chary
004D4E  3  85 rr                sta dispy
004D50  3  A9 01                lda #1
004D52  3  20 55 15             jsr pattr
004D55  3  A5 rr                lda charx
004D57  3  85 rr                sta dispx
004D59  3  A5 rr                lda chary
004D5B  3  85 rr                sta dispy
004D5D  3  A9 00                lda #0
004D5F  3  20 55 15             jsr pattr
004D62  3  A5 rr                lda charx
004D64  3  85 rr                sta dispx
004D66  3  A5 rr                lda chary
004D68  3  85 rr                sta dispy
004D6A  3  A9 01                lda #1
004D6C  3  20 55 15             jsr pattr
004D6F  3  A5 rr                lda charx
004D71  3  85 rr                sta dispx
004D73  3  A5 rr                lda chary
004D75  3  85 rr                sta dispy
004D77  3  A9 01                lda #1
004D79  3  20 55 15             jsr pattr
004D7C  3  A5 rr                lda charx
004D7E  3  85 rr                sta dispx
004D80  3  A5 rr                lda chary
004D82  3  85 rr                sta dispy
004D84  3  A9 01                lda #1
004D86  3  20 55 15             jsr pattr
004D89  3  A5 rr                lda charx
004D8B  3  85 rr                sta dispx
004D8D  3  A5 rr                lda chary
004D8F  3  85 rr                sta dispy
004D91  3  A9 00                lda #0
004D93  3  20 55 15             jsr pattr
004D96  3  C6 rr                dec loopa
004D98  3  F0 03                beq :+
004D9A  3  4C 14 4D             jmp o01860
004D9D  3               :
004D9D  3  A5 rr                lda charx
004D9F  3  85 rr                sta dispx
004DA1  3  A5 rr                lda chary
004DA3  3  85 rr                sta dispy
004DA5  3  A9 01                lda #1
004DA7  3  20 55 15             jsr pattr
004DAA  3  A5 rr                lda charx
004DAC  3  85 rr                sta dispx
004DAE  3  A5 rr                lda chary
004DB0  3  85 rr                sta dispy
004DB2  3  A9 00                lda #0
004DB4  3  20 55 15             jsr pattr
004DB7  3  A5 rr                lda charx
004DB9  3  85 rr                sta dispx
004DBB  3  A5 rr                lda chary
004DBD  3  85 rr                sta dispy
004DBF  3  A9 00                lda #0
004DC1  3  20 55 15             jsr pattr
004DC4  3  A5 rr                lda charx
004DC6  3  85 rr                sta dispx
004DC8  3  A5 rr                lda chary
004DCA  3  85 rr                sta dispy
004DCC  3  A9 00                lda #0
004DCE  3  20 55 15             jsr pattr
004DD1  3  A5 rr                lda charx
004DD3  3  85 rr                sta dispx
004DD5  3  A5 rr                lda chary
004DD7  3  85 rr                sta dispy
004DD9  3  A9 01                lda #1
004DDB  3  20 55 15             jsr pattr
004DDE  3  A5 rr                lda charx
004DE0  3  85 rr                sta dispx
004DE2  3  A5 rr                lda chary
004DE4  3  85 rr                sta dispy
004DE6  3  A9 00                lda #0
004DE8  3  20 55 15             jsr pattr
004DEB  3  60           o02293: rts
004DEC  3               evnt15:
004DEC  3  60                   rts
004DED  3               evnt16:
004DED  3  60                   rts
004DEE  3               evnt17:
004DEE  3  60                   rts
004DEF  3               evnt18:
004DEF  3  60                   rts
004DF0  3               evnt19:
004DF0  3  60                   rts
004DF1  3  60           ptcusr: rts
004DF2  3               msgdat:
004DF2  3  47 41 4D 45          .byte "GAME",141
004DF6  3  8D           
004DF7  3  4F 56 45 52          .byte "OVER",141
004DFB  3  8D           
004DFC  3  53 43 4F 52          .byte "SCORE",141
004E00  3  45 8D        
004E02  3  42 4F 4D 42          .byte "BOMBS",13
004E06  3  53 0D        
004E08  3  8D                   .byte 141
004E09  3  46 4C 4F 4F          .byte "FLOOR",141
004E0D  3  52 8D        
004E0F  3  53 41 56 45          .byte "SAVED",141
004E13  3  44 8D        
004E15  3  31 53 54 8D          .byte "1ST",141
004E19  3  32 4E 44 8D          .byte "2ND",141
004E1D  3  33 52 44 8D          .byte "3RD",141
004E21  3  34 54 48 8D          .byte "4TH",141
004E25  3  35 54 48 8D          .byte "5TH",141
004E29  3  36 54 48 8D          .byte "6TH",141
004E2D  3  37 54 48 8D          .byte "7TH",141
004E31  3  38 54 48 8D          .byte "8TH",141
004E35  3  48 49 47 48          .byte "HIGH",141
004E39  3  8D           
004E3A  3  50 4C 41 59          .byte "PLAY",141
004E3E  3  8D           
004E3F  3  2D 54 45 52          .byte "-TERRAPINS-",141
004E43  3  52 41 50 49  
004E47  3  4E 53 2D 8D  
004E4B  3  48 4F 57 2A          .byte "HOW*MANY*KIDTERRAPINS",141
004E4F  3  4D 41 4E 59  
004E53  3  2A 4B 49 44  
004E61  3  43 41 4E 2A          .byte "CAN*YOU*RESCUE*?",141
004E65  3  59 4F 55 2A  
004E69  3  52 45 53 43  
004E72  3  4F 52 49 47          .byte "ORIGINAL*ARCADE*GAME*1981",141
004E76  3  49 4E 41 4C  
004E7A  3  2A 41 52 43  
004E8C  3  5A 58 2A 47          .byte "ZX*GAME*BY*HIGHRISE*2017",141
004E90  3  41 4D 45 2A  
004E94  3  42 59 2A 48  
004EA5  3  50 52 45 53          .byte "PRESS*FIRE*TO*PLAY",141
004EA9  3  53 2A 46 49  
004EAD  3  52 45 2A 54  
004EB8  3  28 62 63 64          .byte "(bcdefghijklmn",141
004EBC  3  65 66 67 68  
004EC0  3  69 6A 6B 6C  
004EC7  3  48 49 47 48          .byte "HIGH",141
004ECB  3  8D           
004ECC  3  2A 2A 2A 8D          .byte "***",141
004ED0  3  43 4F 4E 47          .byte "CONGRATULATIONS",141
004ED4  3  52 41 54 55  
004ED8  3  4C 41 54 49  
004EE0  3  41 2A 54 4F          .byte "A*TOUGHER*CHALLENGE*AWAITS",141
004EE4  3  55 47 48 45  
004EE8  3  52 2A 43 48  
004EFB  3  4B 45 59 42          .byte "KEYBOARD",141
004EFF  3  4F 41 52 44  
004F03  3  8D           
004F04  3  4B 45 4D 50          .byte "KEMPSTON",141
004F08  3  53 54 4F 4E  
004F0C  3  8D           
004F0D  3  53 49 4E 43          .byte "SINCLAIR",141
004F11  3  4C 41 49 52  
004F15  3  8D           
004F16  3  43 4F 4E 54          .byte "CONTROL:",141
004F1A  3  52 4F 4C 3A  
004F1E  3  8D           
004F1F  3  A1                   .byte 161
004F20  3  23 24 25 26          .byte "#$%&",141
004F24  3  8D           
004F25  3               nummsg:
004F25  3  21                   .byte 33
004F26  3               chgfx:
004F26  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0
004F2A  3  00 00 00 00  
004F2E  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0
004F32  3  00 00 00 00  
004F36  3  00 FF FF 55          .byte 0,255,255,85,170,0,255,0
004F3A  3  AA 00 FF 00  
004F3E  3  6A 72 6A 72          .byte 106,114,106,114,106,114,106,114
004F42  3  6A 72 6A 72  
004F46  3  EA F2 EA 52          .byte 234,242,234,82,170,6,252,1
004F4A  3  AA 06 FC 01  
004F4E  3  6A 75 6A 75          .byte 106,117,106,117,106,112,63,128
004F52  3  6A 70 3F 80  
004F56  3  80 3F 7F 75          .byte 128,63,127,117,106,117,106,117
004F5A  3  6A 75 6A 75  
004F5E  3  01 FC FE 56          .byte 1,252,254,86,170,82,170,82
004F62  3  AA 52 AA 52  
004F66  3  6A 72 6A 72          .byte 106,114,106,114,106,118,60,129
004F6A  3  6A 76 3C 81  
004F6E  3  81 3C 6A 72          .byte 129,60,106,114,106,114,106,114
004F72  3  6A 72 6A 72  
004F76  3  01 FC FE 56          .byte 1,252,254,86,170,6,252,1
004F7A  3  AA 06 FC 01  
004F7E  3  80 3F 7F 55          .byte 128,63,127,85,106,64,63,128
004F82  3  6A 40 3F 80  
004F86  3  6A FF FF 55          .byte 106,255,255,85,170,0,255,0
004F8A  3  AA 00 FF 00  
004F8E  3  00 FF FF 55          .byte 0,255,255,85,170,0,255,118
004F92  3  AA 00 FF 76  
004F96  3  01 03 07 0F          .byte 1,3,7,15,31,63,127,255
004F9A  3  1F 3F 7F FF  
004F9E  3  00 00 7E 40          .byte 0,0,126,64,126,2,126,0
004FA2  3  7E 02 7E 00  
004FA6  3  80 00 BF A1          .byte 128,0,191,161,161,161,161,0
004FAA  3  A1 A1 A1 00  
004FAE  3  00 00 7E 40          .byte 0,0,126,64,64,64,126,0
004FB2  3  40 40 7E 00  
004FB6  3  80 80 BF 81          .byte 128,128,191,129,191,161,191,0
004FBA  3  BF A1 BF 00  
004FBE  3  40 00 5F 50          .byte 64,0,95,80,80,80,80,0
004FC2  3  50 50 50 00  
004FC6  3  03 03 03 03          .byte 3,3,3,3,3,3,3,3
004FCA  3  03 03 03 03  
004FCE  3  60 60 60 60          .byte 96,96,96,96,96,96,96,96
004FD2  3  60 60 60 60  
004FD6  3  00 00 00 00          .byte 0,0,0,0,0,0,255,255
004FDA  3  00 00 FF FF  
004FDE  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0
004FE2  3  00 00 00 00  
004FE6  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0
004FEA  3  00 00 00 00  
004FEE  3  18 18 18 18          .byte 24,24,24,24,24,24,24,24
004FF2  3  18 18 18 18  
004FF6  3  00 48 00 20          .byte 0,72,0,32,2,128,0,36
004FFA  3  02 80 00 24  
004FFE  3  88 88 88 88          .byte 136,136,136,136,136,136,136,136
005002  3  88 88 88 88  
005006  3  60 60 60 60          .byte 96,96,96,96,96,96,224,224
00500A  3  60 60 E0 E0  
00500E  3  CE AA CC AA          .byte 206,170,204,170,202,0,0,0
005012  3  CA 00 00 00  
005016  3  D1 91 D5 95          .byte 209,145,213,149,223,0,0,0
00501A  3  DF 00 00 00  
00501E  3  6C 4A 6A 4A          .byte 108,74,106,74,108,0,0,0
005022  3  6C 00 00 00  
005026  3  5E 52 52 52          .byte 94,82,82,82,82,0,0,0
00502A  3  52 00 00 00  
00502E  3  7B 4A 7A 4A          .byte 123,74,122,74,75,0,0,0
005032  3  4B 00 00 00  
005036  3  DC 12 12 52          .byte 220,18,18,82,220,0,0,0
00503A  3  DC 00 00 00  
00503E  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0
005042  3  00 00 00 00  
005046  3  FF 87 02 02          .byte 255,135,2,2,201,201,200,201
00504A  3  C9 C9 C8 C9  
00504E  3  FF FF CE 04          .byte 255,255,206,4,181,165,132,156
005052  3  B5 A5 84 9C  
005056  3  FF FF 73 21          .byte 255,255,115,33,173,41,33,225
00505A  3  AD 29 21 E1  
00505E  3  FF FF 9B 0A          .byte 255,255,155,10,106,74,10,26
005062  3  6A 4A 0A 1A  
005066  3  FF FC 28 28          .byte 255,252,40,40,11,73,77,76
00506A  3  0B 49 4D 4C  
00506E  3  C8 C8 CB CF          .byte 200,200,203,207,255,255,255,255
005072  3  FF FF FF FF  
005076  3  04 94 B5 FF          .byte 4,148,181,255,255,255,255,255
00507A  3  FF FF FF FF  
00507E  3  25 A5 AD FF          .byte 37,165,173,255,255,255,255,255
005082  3  FF FF FF FF  
005086  3  32 32 76 FF          .byte 50,50,118,255,255,255,255,255
00508A  3  FF FF FF FF  
00508E  3  6A 6A E8 F9          .byte 106,106,232,249,255,255,255,255
005092  3  FF FF FF FF  
005096  3  FF FF FF FE          .byte 255,255,255,254,254,252,248,252
00509A  3  FE FC F8 FC  
00509E  3  FF FC E4 48          .byte 255,252,228,72,208,80,128,0
0050A2  3  D0 50 80 00  
0050A6  3  00 00 00 01          .byte 0,0,0,1,3,6,12,16
0050AA  3  03 06 0C 10  
0050AE  3  00 00 FE C3          .byte 0,0,254,195,8,17,55,126
0050B2  3  08 11 37 7E  
0050B6  3  FF 0F 03 01          .byte 255,15,3,1,21,11,0,28
0050BA  3  15 0B 00 1C  
0050BE  3  FF FC F8 F8          .byte 255,252,248,248,248,240,241,243
0050C2  3  F8 F0 F1 F3  
0050C6  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0
0050CA  3  00 00 00 00  
0050CE  3  FF FF FC FC          .byte 255,255,252,252,248,248,240,240
0050D2  3  F8 F8 F0 F0  
0050D6  3  FF 07 07 01          .byte 255,7,7,1,0,48,120,232
0050DA  3  00 30 78 E8  
0050DE  3  F0 E0 C0 C0          .byte 240,224,192,192,224,224,248,224
0050E2  3  E0 E0 F8 E0  
0050E6  3  F3 F3 F3 F0          .byte 243,243,243,240,240,248,252,255
0050EA  3  F0 F8 FC FF  
0050EE  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0
0050F2  3  00 00 00 00  
0050F6  3  E0 E0 E0 E0          .byte 224,224,224,224,224,224,240,248
0050FA  3  E0 E0 F0 F8  
0050FE  3  C8 98 F8 70          .byte 200,152,248,112,0,0,1,3
005102  3  00 00 01 03  
005106  3  FC E0 E0 C0          .byte 252,224,224,192,128,0,0,128
00510A  3  80 00 00 80  
00510E  3  F1 E0 E0 E0          .byte 241,224,224,224,224,240,240,248
005112  3  E0 F0 F0 F8  
005116  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0
00511A  3  00 00 00 00  
00511E  3  00 00 00 00          .byte 0,0,0,0,0,0,16,62
005122  3  00 00 10 3E  
005126  3  81 00 00 00          .byte 129,0,0,0,0,0,0,0
00512A  3  00 00 00 00  
00512E  3  C0 20 20 00          .byte 192,32,32,0,0,0,0,0
005132  3  00 00 00 00  
005136  3  FC FE FF FF          .byte 252,254,255,255,255,255,255,255
00513A  3  FF FF FF FF  
00513E  3  00 01 07 8F          .byte 0,1,7,143,223,255,255,255
005142  3  DF FF FF FF  
005146  3  FF FF FF D1          .byte 255,255,255,209,129,193,255,255
00514A  3  81 C1 FF FF  
00514E  3  00 C0 F3 FE          .byte 0,192,243,254,192,128,0,0
005152  3  C0 80 00 00  
005156  3  20 E0 80 00          .byte 32,224,128,0,3,7,13,26
00515A  3  03 07 0D 1A  
00515E  3  FF FF FF FF          .byte 255,255,255,255,255,255,240,224
005162  3  FF FF F0 E0  
005166  3  9F 0F 0F 07          .byte 159,15,15,7,135,131,65,33
00516A  3  87 83 41 21  
00516E  3  80 80 C0 F8          .byte 128,128,192,248,255,254,255,255
005172  3  FF FE FF FF  
005176  3  01 47 04 18          .byte 1,71,4,24,224,0,0,7
00517A  3  E0 00 00 07  
00517E  3  E5 02 05 0A          .byte 229,2,5,10,21,43,119,255
005182  3  15 2B 77 FF  
005186  3  E1 DF C1 C1          .byte 225,223,193,193,225,223,193,193
00518A  3  E1 DF C1 C1  
00518E  3  10 08 80 80          .byte 16,8,128,128,128,64,0,0
005192  3  80 40 00 00  
005196  3  EA 41 00 01          .byte 234,65,0,1,34,37,107,255
00519A  3  22 25 6B FF  
00519E  3  FF FE AA D4          .byte 255,254,170,212,160,192,64,170
0051A2  3  A0 C0 40 AA  
0051A6  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0
0051AA  3  00 00 00 00  
0051AE  3  E1 FF FF FF          .byte 225,255,255,255,255,255,255,255
0051B2  3  FF FF FF FF  
0051B6  3  FF FD EA D4          .byte 255,253,234,212,168,212,168,212
0051BA  3  A8 D4 A8 D4  
0051BE  3  F8 70 E0 C0          .byte 248,112,224,192,234,128,128,128
0051C2  3  EA 80 80 80  
0051C6  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0
0051CA  3  00 00 00 00  
0051CE  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0
0051D2  3  00 00 00 00  
0051D6  3  00 FE C3 00          .byte 0,254,195,0,0,0,0,0
0051DA  3  00 00 00 00  
0051DE  3  08 1C 41 1C          .byte 8,28,65,28,54,42,54,73
0051E2  3  36 2A 36 49  
0051E6  3  00 0F FE C3          .byte 0,15,254,195,0,0,0,0
0051EA  3  00 00 00 00  
0051EE  3  00 00 08 11          .byte 0,0,8,17,55,126,254,255
0051F2  3  37 7E FE FF  
0051F6  3               bprop:
0051F6  3  00                   .byte 0
0051F7  3  00                   .byte 0
0051F8  3  02                   .byte 2
0051F9  3  02                   .byte 2
0051FA  3  02                   .byte 2
0051FB  3  02                   .byte 2
0051FC  3  02                   .byte 2
0051FD  3  02                   .byte 2
0051FE  3  02                   .byte 2
0051FF  3  02                   .byte 2
005200  3  02                   .byte 2
005201  3  02                   .byte 2
005202  3  06                   .byte 6
005203  3  02                   .byte 2
005204  3  00                   .byte 0
005205  3  00                   .byte 0
005206  3  00                   .byte 0
005207  3  00                   .byte 0
005208  3  00                   .byte 0
005209  3  00                   .byte 0
00520A  3  00                   .byte 0
00520B  3  00                   .byte 0
00520C  3  00                   .byte 0
00520D  3  00                   .byte 0
00520E  3  06                   .byte 6
00520F  3  00                   .byte 0
005210  3  00                   .byte 0
005211  3  00                   .byte 0
005212  3  00                   .byte 0
005213  3  00                   .byte 0
005214  3  00                   .byte 0
005215  3  00                   .byte 0
005216  3  00                   .byte 0
005217  3  00                   .byte 0
005218  3  00                   .byte 0
005219  3  02                   .byte 2
00521A  3  00                   .byte 0
00521B  3  00                   .byte 0
00521C  3  00                   .byte 0
00521D  3  00                   .byte 0
00521E  3  00                   .byte 0
00521F  3  00                   .byte 0
005220  3  00                   .byte 0
005221  3  00                   .byte 0
005222  3  00                   .byte 0
005223  3  00                   .byte 0
005224  3  00                   .byte 0
005225  3  00                   .byte 0
005226  3  00                   .byte 0
005227  3  00                   .byte 0
005228  3  00                   .byte 0
005229  3  00                   .byte 0
00522A  3  00                   .byte 0
00522B  3  00                   .byte 0
00522C  3  00                   .byte 0
00522D  3  00                   .byte 0
00522E  3  00                   .byte 0
00522F  3  00                   .byte 0
005230  3  00                   .byte 0
005231  3  00                   .byte 0
005232  3  00                   .byte 0
005233  3  00                   .byte 0
005234  3  00                   .byte 0
005235  3  00                   .byte 0
005236  3  00                   .byte 0
005237  3  00                   .byte 0
005238  3  00                   .byte 0
005239  3  00                   .byte 0
00523A  3  00                   .byte 0
00523B  3  00                   .byte 0
00523C  3  00                   .byte 0
00523D  3  00                   .byte 0
00523E  3  00                   .byte 0
00523F  3  00                   .byte 0
005240  3  00                   .byte 0
005241  3  00                   .byte 0
005242  3  00                   .byte 0
005243  3  00                   .byte 0
005244  3  00                   .byte 0
005245  3  00                   .byte 0
005246  3  00                   .byte 0
005247  3  00                   .byte 0
005248  3  00                   .byte 0
005249  3  00                   .byte 0
00524A  3  00                   .byte 0
00524B  3  00                   .byte 0
00524C  3  00                   .byte 0
00524D  3  00                   .byte 0
00524E  3  00                   .byte 0
00524F  3  00                   .byte 0
005250  3               sprgfx:
005250  3  01 C0 02 A2          .byte 1,192,2,162,3,230,112,14,59,228,7,112,13,216,26,172,23,116,26,172,29,220,26,172,15,120,22,183,57,142,97,0
005254  3  03 E6 70 0E  
005258  3  3B E4 07 70  
005270  3  00 70 80 A8          .byte 0,112,128,168,128,249,156,3,14,249,1,220,3,118,6,171,5,221,6,171,7,119,6,171,3,222,197,173,142,99,24,64
005274  3  80 F9 9C 03  
005278  3  0E F9 01 DC  
005290  3  00 1C 20 2A          .byte 0,28,32,42,96,62,231,0,67,190,0,119,128,221,193,170,65,119,193,170,193,221,193,170,128,247,113,107,227,152,6,16
005294  3  60 3E E7 00  
005298  3  43 BE 00 77  
0052B0  3  00 07 88 0A          .byte 0,7,136,10,152,15,57,192,144,239,192,29,96,55,176,106,208,93,176,106,112,119,176,106,224,61,220,90,56,230,1,132
0052B4  3  98 0F 39 C0  
0052B8  3  90 EF C0 1D  
0052D0  3  01 C0 22 A0          .byte 1,192,34,160,51,227,56,14,19,228,7,112,13,216,26,172,23,116,26,172,29,220,26,172,15,122,118,183,57,195,0,129
0052D4  3  33 E3 38 0E  
0052D8  3  13 E4 07 70  
0052F0  3  00 70 08 A8          .byte 0,112,8,168,204,248,142,3,4,249,1,220,3,118,6,171,5,221,6,171,7,119,6,171,131,222,221,173,206,112,64,32
0052F4  3  CC F8 8E 03  
0052F8  3  04 F9 01 DC  
005310  3  00 1C 02 2A          .byte 0,28,2,42,51,62,227,128,65,62,0,119,128,221,193,170,65,119,193,170,193,221,193,170,160,247,119,107,51,156,16,8
005314  3  33 3E E3 80  
005318  3  41 3E 00 77  
005330  3  00 07 80 8A          .byte 0,7,128,138,140,207,56,224,144,79,192,29,96,55,176,106,208,93,176,106,112,119,176,106,232,61,221,218,12,231,4,2
005334  3  8C CF 38 E0  
005338  3  90 4F C0 1D  
005350  3  01 C0 02 A0          .byte 1,192,2,160,99,224,56,14,19,231,7,112,13,216,26,172,23,116,26,172,29,220,26,172,47,120,118,180,96,206,64,67
005354  3  63 E0 38 0E  
005358  3  13 E7 07 70  
005370  3  00 70 00 A8          .byte 0,112,0,168,24,248,142,3,196,249,1,220,3,118,6,171,5,221,6,171,7,119,6,171,11,222,29,173,152,51,208,16
005374  3  18 F8 8E 03  
005378  3  C4 F9 01 DC  
005390  3  00 1C 00 2A          .byte 0,28,0,42,6,62,227,128,113,62,0,119,128,221,193,170,65,119,193,170,193,221,193,170,130,247,71,107,230,12,52,4
005394  3  06 3E E3 80  
005398  3  71 3E 00 77  
0053B0  3  00 07 80 0A          .byte 0,7,128,10,129,143,56,224,156,79,192,29,96,55,176,106,208,93,176,106,112,119,176,106,224,189,209,218,57,131,13,1
0053B4  3  81 8F 38 E0  
0053B8  3  9C 4F C0 1D  
0053D0  3  60 80 39 CE          .byte 96,128,57,206,22,183,15,120,26,172,29,220,26,172,23,116,26,172,13,216,7,112,59,228,112,14,3,230,2,162,1,192
0053D4  3  16 B7 0F 78  
0053D8  3  1A AC 1D DC  
0053F0  3  18 20 8E 73          .byte 24,32,142,115,197,173,3,222,6,171,7,119,6,171,5,221,6,171,3,118,1,220,14,249,156,3,128,249,128,168,0,112
0053F4  3  C5 AD 03 DE  
0053F8  3  06 AB 07 77  
005410  3  06 08 E3 9C          .byte 6,8,227,156,113,107,128,247,193,170,193,221,193,170,65,119,193,170,128,221,0,119,67,190,231,0,96,62,32,42,0,28
005414  3  71 6B 80 F7  
005418  3  C1 AA C1 DD  
005430  3  01 82 38 E7          .byte 1,130,56,231,220,90,224,61,176,106,112,119,176,106,208,93,176,106,96,55,192,29,144,239,57,192,152,15,136,10,0,7
005434  3  DC 5A E0 3D  
005438  3  B0 6A 70 77  
005450  3  00 41 38 C3          .byte 0,65,56,195,118,183,15,122,26,172,29,220,26,172,23,116,26,172,13,216,7,112,19,228,56,14,51,227,34,160,1,192
005454  3  76 B7 0F 7A  
005458  3  1A AC 1D DC  
005470  3  40 10 CE 30          .byte 64,16,206,48,221,173,131,222,6,171,7,119,6,171,5,221,6,171,3,118,1,220,4,249,142,3,204,248,8,168,0,112
005474  3  DD AD 83 DE  
005478  3  06 AB 07 77  
005490  3  10 04 33 8C          .byte 16,4,51,140,119,107,160,247,193,170,193,221,193,170,65,119,193,170,128,221,0,119,65,62,227,128,51,62,2,42,0,28
005494  3  77 6B A0 F7  
005498  3  C1 AA C1 DD  
0054B0  3  04 01 0C E3          .byte 4,1,12,227,221,218,232,61,176,106,112,119,176,106,208,93,176,106,96,55,192,29,144,79,56,224,140,207,128,138,0,7
0054B4  3  DD DA E8 3D  
0054B8  3  B0 6A 70 77  
0054D0  3  41 03 61 8E          .byte 65,3,97,142,118,180,47,120,26,172,29,220,26,172,23,116,26,172,13,216,7,112,19,231,56,14,99,224,2,160,1,192
0054D4  3  76 B4 2F 78  
0054D8  3  1A AC 1D DC  
0054F0  3  D0 40 98 63          .byte 208,64,152,99,29,173,11,222,6,171,7,119,6,171,5,221,6,171,3,118,1,220,196,249,142,3,24,248,0,168,0,112
0054F4  3  1D AD 0B DE  
0054F8  3  06 AB 07 77  
005510  3  34 10 E6 18          .byte 52,16,230,24,71,107,130,247,193,170,193,221,193,170,65,119,193,170,128,221,0,119,113,62,227,128,6,62,0,42,0,28
005514  3  47 6B 82 F7  
005518  3  C1 AA C1 DD  
005530  3  0D 04 39 86          .byte 13,4,57,134,209,218,224,189,176,106,112,119,176,106,208,93,176,106,96,55,192,29,156,79,56,224,129,143,128,10,0,7
005534  3  D1 DA E0 BD  
005538  3  B0 6A 70 77  
005550  3  00 00 80 08          .byte 0,0,128,8,192,24,111,152,94,208,53,96,59,182,213,117,110,215,21,117,59,182,53,96,94,200,111,156,96,14,32,0
005554  3  C0 18 6F 98  
005558  3  5E D0 35 60  
005570  3  00 00 20 02          .byte 0,0,32,2,48,6,27,230,23,180,13,88,142,237,117,93,219,181,69,93,142,237,13,88,23,178,27,231,152,3,8,0
005574  3  30 06 1B E6  
005578  3  17 B4 0D 58  
005590  3  00 00 88 00          .byte 0,0,136,0,140,1,134,249,5,237,3,86,99,187,93,87,118,237,81,87,99,187,3,86,133,236,198,249,230,0,2,0
005594  3  8C 01 86 F9  
005598  3  05 ED 03 56  
0055B0  3  00 00 22 00          .byte 0,0,34,0,99,0,97,190,65,123,128,213,216,238,215,85,93,187,212,85,216,238,128,213,33,123,113,190,57,128,0,128
0055B4  3  63 00 61 BE  
0055B8  3  41 7B 80 D5  
0055D0  3  00 00 20 00          .byte 0,0,32,0,96,14,111,156,94,200,53,96,59,182,85,117,238,215,85,117,59,182,53,96,30,200,47,152,112,12,224,4
0055D4  3  60 0E 6F 9C  
0055D8  3  5E C8 35 60  
0055F0  3  00 00 08 00          .byte 0,0,8,0,152,3,27,231,23,178,13,88,142,237,85,93,251,181,85,93,142,237,13,88,7,178,11,230,28,3,56,1
0055F4  3  98 03 1B E7  
0055F8  3  17 B2 0D 58  
005610  3  00 00 02 00          .byte 0,0,2,0,230,0,198,249,133,236,3,86,99,187,85,87,126,237,85,87,99,187,3,86,129,236,130,249,199,0,78,0
005614  3  E6 00 C6 F9  
005618  3  85 EC 03 56  
005630  3  00 00 00 80          .byte 0,0,0,128,57,128,113,190,33,123,128,213,216,238,213,85,95,187,213,85,216,238,128,213,32,123,96,190,49,192,19,128
005634  3  39 80 71 BE  
005638  3  21 7B 80 D5  
005650  3  00 00 E0 04          .byte 0,0,224,4,112,12,47,152,30,200,53,96,59,182,21,117,110,215,213,117,59,182,53,96,94,200,111,152,192,24,128,16
005654  3  70 0C 2F 98  
005658  3  1E C8 35 60  
005670  3  00 00 38 01          .byte 0,0,56,1,28,3,11,230,7,178,13,88,142,237,69,93,219,181,117,93,142,237,13,88,23,178,27,230,48,6,32,4
005674  3  1C 03 0B E6  
005678  3  07 B2 0D 58  
005690  3  00 00 4E 00          .byte 0,0,78,0,199,0,130,249,129,236,3,86,99,187,81,87,118,237,93,87,99,187,3,86,133,236,134,249,140,1,8,1
005694  3  C7 00 82 F9  
005698  3  81 EC 03 56  
0056B0  3  00 00 13 80          .byte 0,0,19,128,49,192,96,190,32,123,128,213,216,238,212,85,93,187,215,85,216,238,128,213,33,123,97,190,99,0,66,0
0056B4  3  31 C0 60 BE  
0056B8  3  20 7B 80 D5  
0056D0  3  00 00 10 01          .byte 0,0,16,1,24,3,25,246,11,122,6,172,109,220,174,171,235,118,174,168,109,220,6,172,19,122,57,246,112,6,0,4
0056D4  3  18 03 19 F6  
0056D8  3  0B 7A 06 AC  
0056F0  3  00 00 44 00          .byte 0,0,68,0,198,0,134,125,130,222,1,171,27,119,235,170,186,221,43,170,27,119,1,171,132,222,142,125,156,1,0,1
0056F4  3  C6 00 86 7D  
0056F8  3  82 DE 01 AB  
005710  3  00 00 11 00          .byte 0,0,17,0,49,128,97,159,160,183,192,106,198,221,186,234,110,183,138,234,198,221,192,106,161,55,99,159,103,0,64,0
005714  3  31 80 61 9F  
005718  3  A0 B7 C0 6A  
005730  3  00 00 04 40          .byte 0,0,4,64,12,96,216,103,232,45,176,26,113,183,174,186,219,173,162,186,113,183,176,26,232,77,216,231,25,192,16,0
005734  3  0C 60 D8 67  
005738  3  E8 2D B0 1A  
005750  3  00 00 00 04          .byte 0,0,0,4,112,6,57,246,19,122,6,172,109,220,174,170,235,119,174,170,109,220,6,172,19,120,25,244,48,14,32,7
005754  3  70 06 39 F6  
005758  3  13 7A 06 AC  
005770  3  00 00 00 01          .byte 0,0,0,1,156,1,142,125,132,222,1,171,27,119,171,170,250,221,171,170,27,119,1,171,4,222,6,125,140,3,200,1
005774  3  9C 01 8E 7D  
005778  3  84 DE 01 AB  
005790  3  00 00 40 00          .byte 0,0,64,0,103,0,99,159,161,55,192,106,198,221,170,234,126,183,170,234,198,221,192,106,129,55,65,159,227,0,114,0
005794  3  67 00 63 9F  
005798  3  A1 37 C0 6A  
0057B0  3  00 00 10 00          .byte 0,0,16,0,25,192,216,231,232,77,176,26,113,183,170,186,223,173,170,186,113,183,176,26,224,77,208,103,56,192,28,128
0057B4  3  19 C0 D8 E7  
0057B8  3  E8 4D B0 1A  
0057D0  3  00 00 20 07          .byte 0,0,32,7,48,14,25,244,19,120,6,172,109,220,174,168,235,118,174,171,109,220,6,172,19,122,25,246,24,3,8,1
0057D4  3  30 0E 19 F4  
0057D8  3  13 78 06 AC  
0057F0  3  00 00 C8 01          .byte 0,0,200,1,140,3,6,125,4,222,1,171,27,119,43,170,186,221,235,170,27,119,1,171,132,222,134,125,198,0,66,0
0057F4  3  8C 03 06 7D  
0057F8  3  04 DE 01 AB  
005810  3  00 00 72 00          .byte 0,0,114,0,227,0,65,159,129,55,192,106,198,221,138,234,110,183,186,234,198,221,192,106,161,55,97,159,49,128,16,128
005814  3  E3 00 41 9F  
005818  3  81 37 C0 6A  
005830  3  00 00 1C 80          .byte 0,0,28,128,56,192,208,103,224,77,176,26,113,183,162,186,219,173,174,186,113,183,176,26,232,77,216,103,12,96,4,32
005834  3  38 C0 D0 67  
005838  3  E0 4D B0 1A  
005850  3  01 C0 02 A2          .byte 1,192,2,162,3,230,112,14,59,228,5,208,15,120,28,28,30,188,22,52,29,92,31,252,15,120,22,183,57,142,97,0
005854  3  03 E6 70 0E  
005858  3  3B E4 05 D0  
005870  3  00 70 80 A8          .byte 0,112,128,168,128,249,156,3,14,249,1,116,3,222,7,7,7,175,5,141,7,87,7,255,3,222,197,173,142,99,24,64
005874  3  80 F9 9C 03  
005878  3  0E F9 01 74  
005890  3  00 1C 20 2A          .byte 0,28,32,42,96,62,231,0,67,190,0,93,128,247,193,193,193,235,65,99,193,213,193,255,128,247,113,107,227,152,6,16
005894  3  60 3E E7 00  
005898  3  43 BE 00 5D  
0058B0  3  00 07 88 0A          .byte 0,7,136,10,152,15,57,192,144,239,64,23,224,61,112,112,240,122,208,88,112,117,240,127,224,61,220,90,56,230,1,132
0058B4  3  98 0F 39 C0  
0058B8  3  90 EF 40 17  
0058D0  3  01 C0 22 A0          .byte 1,192,34,160,51,227,56,14,19,228,5,208,15,120,30,60,28,156,22,52,29,92,31,252,15,122,118,183,57,195,0,129
0058D4  3  33 E3 38 0E  
0058D8  3  13 E4 05 D0  
0058F0  3  00 70 08 A8          .byte 0,112,8,168,204,248,142,3,4,249,1,116,3,222,7,143,7,39,5,141,7,87,7,255,131,222,221,173,206,112,64,32
0058F4  3  CC F8 8E 03  
0058F8  3  04 F9 01 74  
005910  3  00 1C 02 2A          .byte 0,28,2,42,51,62,227,128,65,62,0,93,128,247,193,227,193,201,65,99,193,213,193,255,160,247,119,107,51,156,16,8
005914  3  33 3E E3 80  
005918  3  41 3E 00 5D  
005930  3  00 07 80 8A          .byte 0,7,128,138,140,207,56,224,144,79,64,23,224,61,240,120,112,114,208,88,112,117,240,127,232,61,221,218,12,231,4,2
005934  3  8C CF 38 E0  
005938  3  90 4F 40 17  
005950  3  01 C0 02 A0          .byte 1,192,2,160,99,224,56,14,19,231,5,208,15,120,28,28,30,188,22,52,29,92,31,252,47,120,118,180,96,206,64,67
005954  3  63 E0 38 0E  
005958  3  13 E7 05 D0  
005970  3  00 70 00 A8          .byte 0,112,0,168,24,248,142,3,196,249,1,116,3,222,7,7,7,175,5,141,7,87,7,255,11,222,29,173,152,51,208,16
005974  3  18 F8 8E 03  
005978  3  C4 F9 01 74  
005990  3  00 1C 00 2A          .byte 0,28,0,42,6,62,227,128,113,62,0,93,128,247,193,193,193,235,65,99,193,213,193,255,130,247,71,107,230,12,52,4
005994  3  06 3E E3 80  
005998  3  71 3E 00 5D  
0059B0  3  00 07 80 0A          .byte 0,7,128,10,129,143,56,224,156,79,64,23,224,61,112,112,240,122,208,88,112,117,240,127,224,189,209,218,57,131,13,1
0059B4  3  81 8F 38 E0  
0059B8  3  9C 4F 40 17  
0059D0  3  60 80 39 CE          .byte 96,128,57,206,22,183,15,120,31,252,29,92,22,52,30,188,28,28,15,120,5,208,59,228,112,14,3,230,2,162,1,192
0059D4  3  16 B7 0F 78  
0059D8  3  1F FC 1D 5C  
0059F0  3  18 20 8E 73          .byte 24,32,142,115,197,173,3,222,7,255,7,87,5,141,7,175,7,7,3,222,1,116,14,249,156,3,128,249,128,168,0,112
0059F4  3  C5 AD 03 DE  
0059F8  3  07 FF 07 57  
005A10  3  06 08 E3 9C          .byte 6,8,227,156,113,107,128,247,193,255,193,213,65,99,193,235,193,193,128,247,0,93,67,190,231,0,96,62,32,42,0,28
005A14  3  71 6B 80 F7  
005A18  3  C1 FF C1 D5  
005A30  3  01 82 38 E7          .byte 1,130,56,231,220,90,224,61,240,127,112,117,208,88,240,122,112,112,224,61,64,23,144,239,57,192,152,15,136,10,0,7
005A34  3  DC 5A E0 3D  
005A38  3  F0 7F 70 75  
005A50  3  00 41 38 C3          .byte 0,65,56,195,118,183,15,122,31,252,29,92,22,52,30,188,28,28,15,120,5,208,19,228,56,14,51,227,34,160,1,192
005A54  3  76 B7 0F 7A  
005A58  3  1F FC 1D 5C  
005A70  3  40 10 CE 30          .byte 64,16,206,48,221,173,131,222,7,255,7,87,5,141,7,175,7,7,3,222,1,116,4,249,142,3,204,248,8,168,0,112
005A74  3  DD AD 83 DE  
005A78  3  07 FF 07 57  
005A90  3  10 04 33 8C          .byte 16,4,51,140,119,107,160,247,193,255,193,213,65,99,193,235,193,193,128,247,0,93,65,62,227,128,51,62,2,42,0,28
005A94  3  77 6B A0 F7  
005A98  3  C1 FF C1 D5  
005AB0  3  04 01 0C E3          .byte 4,1,12,227,221,218,232,61,240,127,112,117,208,88,240,122,112,112,224,61,64,23,144,79,56,224,140,207,128,138,0,7
005AB4  3  DD DA E8 3D  
005AB8  3  F0 7F 70 75  
005AD0  3  41 03 61 8E          .byte 65,3,97,142,118,180,47,120,31,252,29,92,22,52,28,156,30,60,15,120,5,208,19,231,56,14,99,224,2,160,1,192
005AD4  3  76 B4 2F 78  
005AD8  3  1F FC 1D 5C  
005AF0  3  D0 40 98 63          .byte 208,64,152,99,29,173,11,222,7,255,7,87,5,141,7,39,7,143,3,222,1,116,196,249,142,3,24,248,0,168,0,112
005AF4  3  1D AD 0B DE  
005AF8  3  07 FF 07 57  
005B10  3  34 10 E6 18          .byte 52,16,230,24,71,107,130,247,193,255,193,213,65,99,193,201,193,227,128,247,0,93,113,62,227,128,6,62,0,42,0,28
005B14  3  47 6B 82 F7  
005B18  3  C1 FF C1 D5  
005B30  3  0D 04 39 86          .byte 13,4,57,134,209,218,224,189,240,127,112,117,208,88,112,114,240,120,224,61,64,23,156,79,56,224,129,143,128,10,0,7
005B34  3  D1 DA E0 BD  
005B38  3  F0 7F 70 75  
005B50  3  00 00 80 08          .byte 0,0,128,8,192,24,111,152,95,208,63,224,59,86,220,117,105,55,28,117,59,86,63,224,95,200,111,156,96,14,32,0
005B54  3  C0 18 6F 98  
005B58  3  5F D0 3F E0  
005B70  3  00 00 20 02          .byte 0,0,32,2,48,6,27,230,23,244,15,248,142,213,119,29,218,77,71,29,142,213,15,248,23,242,27,231,152,3,8,0
005B74  3  30 06 1B E6  
005B78  3  17 F4 0F F8  
005B90  3  00 00 88 00          .byte 0,0,136,0,140,1,134,249,5,253,3,254,99,181,93,199,118,147,81,199,99,181,3,254,133,252,198,249,230,0,2,0
005B94  3  8C 01 86 F9  
005B98  3  05 FD 03 FE  
005BB0  3  00 00 22 00          .byte 0,0,34,0,99,0,97,190,65,127,128,255,88,237,215,113,221,164,212,113,88,237,128,255,33,127,113,190,57,128,0,128
005BB4  3  63 00 61 BE  
005BB8  3  41 7F 80 FF  
005BD0  3  10 00 30 00          .byte 16,0,48,0,48,14,47,156,31,200,63,224,58,214,92,117,233,55,92,117,58,214,63,224,31,200,47,152,112,12,224,4
005BD4  3  30 0E 2F 9C  
005BD8  3  1F C8 3F E0  
005BF0  3  04 00 0C 00          .byte 4,0,12,0,140,3,11,231,7,242,15,248,142,181,87,29,250,77,87,29,142,181,15,248,7,242,11,230,28,3,56,1
005BF4  3  8C 03 0B E7  
005BF8  3  07 F2 0F F8  
005C10  3  01 00 03 00          .byte 1,0,3,0,227,0,194,249,129,252,3,254,99,173,85,199,126,147,85,199,99,173,3,254,129,252,130,249,199,0,78,0
005C14  3  E3 00 C2 F9  
005C18  3  81 FC 03 FE  
005C30  3  00 40 00 C0          .byte 0,64,0,192,56,192,112,190,32,127,128,255,88,235,213,113,223,164,213,113,88,235,128,255,32,127,96,190,49,192,19,128
005C34  3  38 C0 70 BE  
005C38  3  20 7F 80 FF  
005C50  3  00 00 E0 04          .byte 0,0,224,4,112,12,47,152,31,200,63,224,59,86,28,117,105,55,220,117,59,86,63,224,95,200,111,152,192,24,128,16
005C54  3  70 0C 2F 98  
005C58  3  1F C8 3F E0  
005C70  3  00 00 38 01          .byte 0,0,56,1,28,3,11,230,7,242,15,248,142,213,71,29,218,77,119,29,142,213,15,248,23,242,27,230,48,6,32,4
005C74  3  1C 03 0B E6  
005C78  3  07 F2 0F F8  
005C90  3  00 00 4E 00          .byte 0,0,78,0,199,0,130,249,129,252,3,254,99,181,81,199,118,147,93,199,99,181,3,254,133,252,134,249,140,1,8,1
005C94  3  C7 00 82 F9  
005C98  3  81 FC 03 FE  
005CB0  3  00 00 13 80          .byte 0,0,19,128,49,192,96,190,32,127,128,255,88,237,212,113,221,164,215,113,88,237,128,255,33,127,97,190,99,0,66,0
005CB4  3  31 C0 60 BE  
005CB8  3  20 7F 80 FF  
005CD0  3  00 00 10 01          .byte 0,0,16,1,24,3,25,246,11,250,7,252,106,220,174,59,236,150,174,56,106,220,7,252,19,250,57,246,112,6,0,4
005CD4  3  18 03 19 F6  
005CD8  3  0B FA 07 FC  
005CF0  3  00 00 44 00          .byte 0,0,68,0,198,0,134,125,130,254,1,255,26,183,235,142,187,37,43,142,26,183,1,255,132,254,142,125,156,1,0,1
005CF4  3  C6 00 86 7D  
005CF8  3  82 FE 01 FF  
005D10  3  00 00 11 00          .byte 0,0,17,0,49,128,97,159,160,191,192,127,198,173,186,227,110,201,138,227,198,173,192,127,161,63,99,159,103,0,64,0
005D14  3  31 80 61 9F  
005D18  3  A0 BF C0 7F  
005D30  3  00 00 04 40          .byte 0,0,4,64,12,96,216,103,232,47,240,31,113,171,238,184,91,178,226,184,113,171,240,31,232,79,216,231,25,192,16,0
005D34  3  0C 60 D8 67  
005D38  3  E8 2F F0 1F  
005D50  3  00 08 00 0C          .byte 0,8,0,12,112,12,57,244,19,248,7,252,107,92,174,58,236,151,174,58,107,92,7,252,19,248,25,244,48,14,32,7
005D54  3  70 0C 39 F4  
005D58  3  13 F8 07 FC  
005D70  3  00 02 00 03          .byte 0,2,0,3,28,3,14,125,4,254,1,255,26,215,171,142,251,37,171,142,26,215,1,255,4,254,6,125,140,3,200,1
005D74  3  1C 03 0E 7D  
005D78  3  04 FE 01 FF  
005D90  3  80 00 C0 00          .byte 128,0,192,0,199,0,67,159,129,63,192,127,198,181,170,227,126,201,170,227,198,181,192,127,129,63,65,159,227,0,114,0
005D94  3  C7 00 43 9F  
005D98  3  81 3F C0 7F  
005DB0  3  20 00 30 00          .byte 32,0,48,0,49,192,208,231,224,79,240,31,113,173,234,184,95,178,234,184,113,173,240,31,224,79,208,103,56,192,28,128
005DB4  3  31 C0 D0 E7  
005DB8  3  E0 4F F0 1F  
005DD0  3  00 00 20 07          .byte 0,0,32,7,48,14,25,244,19,248,7,252,106,220,174,56,236,150,174,59,106,220,7,252,19,250,25,246,24,3,8,1
005DD4  3  30 0E 19 F4  
005DD8  3  13 F8 07 FC  
005DF0  3  00 00 C8 01          .byte 0,0,200,1,140,3,6,125,4,254,1,255,26,183,43,142,187,37,235,142,26,183,1,255,132,254,134,125,198,0,66,0
005DF4  3  8C 03 06 7D  
005DF8  3  04 FE 01 FF  
005E10  3  00 00 72 00          .byte 0,0,114,0,227,0,65,159,129,63,192,127,198,173,138,227,110,201,186,227,198,173,192,127,161,63,97,159,49,128,16,128
005E14  3  E3 00 41 9F  
005E18  3  81 3F C0 7F  
005E30  3  00 00 1C 80          .byte 0,0,28,128,56,192,208,103,224,79,240,31,113,171,226,184,91,178,238,184,113,171,240,31,232,79,216,103,12,96,4,32
005E34  3  38 C0 D0 67  
005E38  3  E0 4F F0 1F  
005E50  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,1,0,5,64,3,128,14,224,3,128,5,64,1,0,0,0,0,0,0,0,0,0,0,0
005E54  3  00 00 00 00  
005E58  3  01 00 05 40  
005E70  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,64,1,80,0,224,3,184,0,224,1,80,0,64,0,0,0,0,0,0,0,0,0,0
005E74  3  00 00 00 00  
005E78  3  00 40 01 50  
005E90  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,16,0,84,0,56,0,238,0,56,0,84,0,16,0,0,0,0,0,0,0,0,0,0
005E94  3  00 00 00 00  
005E98  3  00 10 00 54  
005EB0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,4,0,21,0,14,128,59,0,14,0,21,0,4,0,0,0,0,0,0,0,0,0,0
005EB4  3  00 00 00 00  
005EB8  3  00 04 00 15  
005ED0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,1,0,5,64,3,128,15,224,3,128,5,64,1,0,0,0,0,0,0,0,0,0,0,0
005ED4  3  00 00 00 00  
005ED8  3  01 00 05 40  
005EF0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,64,1,80,0,224,3,248,0,224,1,80,0,64,0,0,0,0,0,0,0,0,0,0
005EF4  3  00 00 00 00  
005EF8  3  00 40 01 50  
005F10  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,16,0,84,0,56,0,254,0,56,0,84,0,16,0,0,0,0,0,0,0,0,0,0
005F14  3  00 00 00 00  
005F18  3  00 10 00 54  
005F30  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,4,0,21,0,14,128,63,0,14,0,21,0,4,0,0,0,0,0,0,0,0,0,0
005F34  3  00 00 00 00  
005F38  3  00 04 00 15  
005F50  3  00 00 00 00          .byte 0,0,0,0,3,96,54,182,75,105,12,24,15,248,15,248,55,246,95,253,31,252,23,244,11,232,13,208,3,96,0,0
005F54  3  03 60 36 B6  
005F58  3  4B 69 0C 18  
005F70  3  00 00 00 00          .byte 0,0,0,0,0,216,141,173,82,218,3,6,3,254,3,254,141,253,87,255,7,255,5,253,2,250,3,116,0,216,0,0
005F74  3  00 D8 8D AD  
005F78  3  52 DA 03 06  
005F90  3  00 00 00 00          .byte 0,0,0,0,0,54,99,107,148,182,128,193,128,255,128,255,99,127,213,255,193,255,65,127,128,190,0,221,0,54,0,0
005F94  3  00 36 63 6B  
005F98  3  94 B6 80 C1  
005FB0  3  00 00 00 00          .byte 0,0,0,0,128,13,216,218,165,45,96,48,224,63,224,63,216,223,245,127,240,127,208,95,160,47,64,55,128,13,0,0
005FB4  3  80 0D D8 DA  
005FB8  3  A5 2D 60 30  
005FD0  3  00 00 00 00          .byte 0,0,0,0,3,96,7,240,11,104,12,24,63,254,79,249,87,245,31,252,31,252,23,244,11,236,21,210,19,98,48,3
005FD4  3  03 60 07 F0  
005FD8  3  0B 68 0C 18  
005FF0  3  00 00 00 00          .byte 0,0,0,0,0,216,1,252,2,218,3,6,143,255,83,254,85,253,7,255,7,255,5,253,2,251,133,116,132,216,204,0
005FF4  3  00 D8 01 FC  
005FF8  3  02 DA 03 06  
006010  3  00 00 00 00          .byte 0,0,0,0,0,54,0,127,128,182,128,193,227,255,148,255,85,127,193,255,193,255,65,127,192,190,33,93,33,54,51,0
006014  3  00 36 00 7F  
006018  3  80 B6 80 C1  
006030  3  00 00 00 00          .byte 0,0,0,0,128,13,192,31,160,45,96,48,248,255,229,63,213,95,240,127,240,127,208,95,176,47,72,87,136,77,12,192
006034  3  80 0D C0 1F  
006038  3  A0 2D 60 30  
006050  3  00 00 00 00          .byte 0,0,0,0,99,99,22,180,11,104,12,24,15,248,15,248,23,244,31,252,31,252,55,246,75,233,77,209,35,98,0,0
006054  3  63 63 16 B4  
006058  3  0B 68 0C 18  
006070  3  00 00 00 00          .byte 0,0,0,0,216,216,5,173,2,218,3,6,3,254,3,254,5,253,7,255,7,255,141,253,82,250,83,116,136,216,0,0
006074  3  D8 D8 05 AD  
006078  3  02 DA 03 06  
006090  3  00 00 00 00          .byte 0,0,0,0,54,54,65,107,128,182,128,193,128,255,128,255,65,127,193,255,193,255,99,127,148,190,20,221,34,54,0,0
006094  3  36 36 41 6B  
006098  3  80 B6 80 C1  
0060B0  3  00 00 00 00          .byte 0,0,0,0,141,141,208,90,160,45,96,48,224,63,224,63,208,95,240,127,240,127,216,223,165,47,69,55,136,141,0,0
0060B4  3  8D 8D D0 5A  
0060B8  3  A0 2D 60 30  
0060D0  3  00 00 03 60          .byte 0,0,3,96,5,208,11,232,23,244,31,252,95,253,55,246,31,252,15,248,12,24,75,105,54,182,3,96,0,0,0,0
0060D4  3  05 D0 0B E8  
0060D8  3  17 F4 1F FC  
0060F0  3  00 00 00 D8          .byte 0,0,0,216,1,116,2,250,5,253,7,255,87,255,141,253,7,255,3,254,3,6,82,218,141,173,0,216,0,0,0,0
0060F4  3  01 74 02 FA  
0060F8  3  05 FD 07 FF  
006110  3  00 00 00 36          .byte 0,0,0,54,0,93,128,190,65,127,193,255,213,255,99,127,193,255,128,255,128,193,148,182,99,107,0,54,0,0,0,0
006114  3  00 5D 80 BE  
006118  3  41 7F C1 FF  
006130  3  00 00 80 0D          .byte 0,0,128,13,64,23,160,47,208,95,240,127,245,127,216,223,240,127,224,63,96,48,165,45,216,218,128,13,0,0,0,0
006134  3  40 17 A0 2F  
006138  3  D0 5F F0 7F  
006150  3  00 00 43 61          .byte 0,0,67,97,69,209,43,234,23,244,31,252,31,252,87,245,95,253,47,250,12,24,11,104,7,240,3,96,0,0,0,0
006154  3  45 D1 2B EA  
006158  3  17 F4 1F FC  
006170  3  00 00 50 D8          .byte 0,0,80,216,81,116,138,250,5,253,7,255,7,255,85,253,87,255,139,254,3,6,2,218,1,252,0,216,0,0,0,0
006174  3  51 74 8A FA  
006178  3  05 FD 07 FF  
006190  3  00 00 14 36          .byte 0,0,20,54,20,93,162,190,65,127,193,255,193,255,85,127,213,255,162,255,128,193,128,182,0,127,0,54,0,0,0,0
006194  3  14 5D A2 BE  
006198  3  41 7F C1 FF  
0061B0  3  00 00 85 0D          .byte 0,0,133,13,69,23,168,175,208,95,240,127,240,127,213,95,245,127,232,191,96,48,160,45,192,31,128,13,0,0,0,0
0061B4  3  45 17 A8 AF  
0061B8  3  D0 5F F0 7F  
0061D0  3  00 00 23 62          .byte 0,0,35,98,69,209,75,233,55,246,31,252,31,252,23,244,31,252,15,248,12,24,11,104,22,180,99,99,0,0,0,0
0061D4  3  45 D1 4B E9  
0061D8  3  37 F6 1F FC  
0061F0  3  00 00 88 D8          .byte 0,0,136,216,81,116,82,250,141,253,7,255,7,255,5,253,7,255,3,254,3,6,2,218,5,173,216,216,0,0,0,0
0061F4  3  51 74 52 FA  
0061F8  3  8D FD 07 FF  
006210  3  00 00 22 36          .byte 0,0,34,54,20,93,148,190,99,127,193,255,193,255,65,127,193,255,128,255,128,193,128,182,65,107,54,54,0,0,0,0
006214  3  14 5D 94 BE  
006218  3  63 7F C1 FF  
006230  3  00 00 88 8D          .byte 0,0,136,141,69,23,165,47,216,223,240,127,240,127,208,95,240,127,224,63,96,48,160,45,208,90,141,141,0,0,0,0
006234  3  45 17 A5 2F  
006238  3  D8 DF F0 7F  
006250  3  00 00 04 10          .byte 0,0,4,16,2,8,15,8,22,240,47,232,95,220,127,212,63,200,127,212,95,220,47,232,22,240,15,8,2,8,4,16
006254  3  02 08 0F 08  
006258  3  16 F0 2F E8  
006270  3  00 00 01 04          .byte 0,0,1,4,0,130,3,194,5,188,11,250,23,247,31,245,15,242,31,245,23,247,11,250,5,188,3,194,0,130,1,4
006274  3  00 82 03 C2  
006278  3  05 BC 0B FA  
006290  3  00 00 00 41          .byte 0,0,0,65,128,32,128,240,1,111,130,254,197,253,71,253,131,252,71,253,197,253,130,254,1,111,128,240,128,32,0,65
006294  3  80 20 80 F0  
006298  3  01 6F 82 FE  
0062B0  3  00 00 40 10          .byte 0,0,64,16,32,8,32,60,192,91,160,191,113,127,81,255,32,255,81,255,113,127,160,191,192,91,32,60,32,8,64,16
0062B4  3  20 08 20 3C  
0062B8  3  C0 5B A0 BF  
0062D0  3  00 00 03 00          .byte 0,0,3,0,192,128,47,0,22,240,47,232,95,220,127,220,63,200,127,220,95,220,47,232,22,240,47,0,192,128,3,0
0062D4  3  C0 80 2F 00  
0062D8  3  16 F0 2F E8  
0062F0  3  00 00 00 C0          .byte 0,0,0,192,48,32,11,192,5,188,11,250,23,247,31,247,15,242,31,247,23,247,11,250,5,188,11,192,48,32,0,192
0062F4  3  30 20 0B C0  
0062F8  3  05 BC 0B FA  
006310  3  00 00 00 30          .byte 0,0,0,48,12,8,2,240,1,111,130,254,197,253,199,253,131,252,199,253,197,253,130,254,1,111,2,240,12,8,0,48
006314  3  0C 08 02 F0  
006318  3  01 6F 82 FE  
006330  3  00 00 00 0C          .byte 0,0,0,12,3,2,0,188,192,91,160,191,113,127,113,255,32,255,113,255,113,127,160,191,192,91,0,188,3,2,0,12
006334  3  03 02 00 BC  
006338  3  C0 5B A0 BF  
006350  3  00 00 30 04          .byte 0,0,48,4,72,4,15,8,22,240,47,232,95,220,127,212,63,200,127,212,95,220,47,232,22,240,15,8,72,4,48,4
006354  3  48 04 0F 08  
006358  3  16 F0 2F E8  
006370  3  00 00 0C 01          .byte 0,0,12,1,18,1,3,194,5,188,11,250,23,247,31,245,15,242,31,245,23,247,11,250,5,188,3,194,18,1,12,1
006374  3  12 01 03 C2  
006378  3  05 BC 0B FA  
006390  3  00 00 43 00          .byte 0,0,67,0,68,128,128,240,1,111,130,254,197,253,71,253,131,252,71,253,197,253,130,254,1,111,128,240,68,128,67,0
006394  3  44 80 80 F0  
006398  3  01 6F 82 FE  
0063B0  3  00 00 10 C0          .byte 0,0,16,192,17,32,32,60,192,91,160,191,113,127,81,255,32,255,81,255,113,127,160,191,192,91,32,60,17,32,16,192
0063B4  3  11 20 20 3C  
0063B8  3  C0 5B A0 BF  
0063D0  3  00 00 08 20          .byte 0,0,8,32,16,64,16,240,15,104,23,244,59,250,43,254,19,252,43,254,59,250,23,244,15,104,16,240,16,64,8,32
0063D4  3  10 40 10 F0  
0063D8  3  0F 68 17 F4  
0063F0  3  00 00 02 08          .byte 0,0,2,8,4,16,4,60,3,218,5,253,142,254,138,255,4,255,138,255,142,254,5,253,3,218,4,60,4,16,2,8
0063F4  3  04 10 04 3C  
0063F8  3  03 DA 05 FD  
006410  3  00 00 00 82          .byte 0,0,0,130,1,4,1,15,128,246,65,127,163,191,226,191,193,63,226,191,163,191,65,127,128,246,1,15,1,4,0,130
006414  3  01 04 01 0F  
006418  3  80 F6 41 7F  
006430  3  00 00 80 20          .byte 0,0,128,32,0,65,192,67,160,61,208,95,232,239,248,175,240,79,248,175,232,239,208,95,160,61,192,67,0,65,128,32
006434  3  00 41 C0 43  
006438  3  A0 3D D0 5F  
006450  3  00 00 00 C0          .byte 0,0,0,192,1,3,0,244,15,104,23,244,59,250,59,254,19,252,59,254,59,250,23,244,15,104,0,244,1,3,0,192
006454  3  01 03 00 F4  
006458  3  0F 68 17 F4  
006470  3  00 00 00 30          .byte 0,0,0,48,192,64,0,61,3,218,5,253,142,254,142,255,4,255,142,255,142,254,5,253,3,218,0,61,192,64,0,48
006474  3  C0 40 00 3D  
006478  3  03 DA 05 FD  
006490  3  00 00 00 0C          .byte 0,0,0,12,48,16,64,15,128,246,65,127,163,191,227,191,193,63,227,191,163,191,65,127,128,246,64,15,48,16,0,12
006494  3  30 10 40 0F  
006498  3  80 F6 41 7F  
0064B0  3  00 00 00 03          .byte 0,0,0,3,12,4,208,3,160,61,208,95,232,239,248,239,240,79,248,239,232,239,208,95,160,61,208,3,12,4,0,3
0064B4  3  0C 04 D0 03  
0064B8  3  A0 3D D0 5F  
0064D0  3  00 00 20 0C          .byte 0,0,32,12,32,18,16,240,15,104,23,244,59,250,43,254,19,252,43,254,59,250,23,244,15,104,16,240,32,18,32,12
0064D4  3  20 12 10 F0  
0064D8  3  0F 68 17 F4  
0064F0  3  00 00 08 03          .byte 0,0,8,3,136,4,4,60,3,218,5,253,142,254,138,255,4,255,138,255,142,254,5,253,3,218,4,60,136,4,8,3
0064F4  3  88 04 04 3C  
0064F8  3  03 DA 05 FD  
006510  3  00 00 C2 00          .byte 0,0,194,0,34,1,1,15,128,246,65,127,163,191,226,191,193,63,226,191,163,191,65,127,128,246,1,15,34,1,194,0
006514  3  22 01 01 0F  
006518  3  80 F6 41 7F  
006530  3  00 00 30 80          .byte 0,0,48,128,72,128,192,67,160,61,208,95,232,239,248,175,240,79,248,175,232,239,208,95,160,61,192,67,72,128,48,128
006534  3  48 80 C0 43  
006538  3  A0 3D D0 5F  
006550  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,7,224,15,240,31,248,63,252,127,254,63,252,33,204,33,132,33,132,63,132,63,132,63,132
006554  3  00 00 00 00  
006558  3  07 E0 0F F0  
006570  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,1,248,3,252,7,254,15,255,159,255,15,255,8,115,8,97,8,97,15,225,15,225,15,225
006574  3  00 00 00 00  
006578  3  01 F8 03 FC  
006590  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,126,0,255,129,255,195,255,231,255,195,255,194,28,66,24,66,24,67,248,67,248,67,248
006594  3  00 00 00 00  
006598  3  00 7E 00 FF  
0065B0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,128,31,192,63,224,127,240,255,249,255,240,255,48,135,16,134,16,134,16,254,16,254,16,254
0065B4  3  00 00 00 00  
0065B8  3  80 1F C0 3F  
0065D0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0065D4  3  00 00 00 00  
0065D8  3  00 00 00 00  
0065F0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0065F4  3  00 00 00 00  
0065F8  3  00 00 00 00  
006610  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
006614  3  00 00 00 00  
006618  3  00 00 00 00  
006630  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
006634  3  00 00 00 00  
006638  3  00 00 00 00  
006650  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,160,3,192,1,64,1,224,2,128,0,0,0,0,0,0,0,0,0,0,0,0
006654  3  00 00 00 00  
006658  3  00 00 00 A0  
006670  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,40,0,240,0,80,0,120,0,160,0,0,0,0,0,0,0,0,0,0,0,0
006674  3  00 00 00 00  
006678  3  00 00 00 28  
006690  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,10,0,60,0,20,0,30,0,40,0,0,0,0,0,0,0,0,0,0,0,0
006694  3  00 00 00 00  
006698  3  00 00 00 0A  
0066B0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,128,2,0,15,0,5,128,7,0,10,0,0,0,0,0,0,0,0,0,0,0,0
0066B4  3  00 00 00 00  
0066B8  3  00 00 80 02  
0066D0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,2,128,1,224,1,64,3,192,0,160,0,0,0,0,0,0,0,0,0,0,0,0
0066D4  3  00 00 00 00  
0066D8  3  00 00 02 80  
0066F0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,160,0,120,0,80,0,240,0,40,0,0,0,0,0,0,0,0,0,0,0,0
0066F4  3  00 00 00 00  
0066F8  3  00 00 00 A0  
006710  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,40,0,30,0,20,0,60,0,10,0,0,0,0,0,0,0,0,0,0,0,0
006714  3  00 00 00 00  
006718  3  00 00 00 28  
006730  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,10,128,7,0,5,0,15,128,2,0,0,0,0,0,0,0,0,0,0,0,0
006734  3  00 00 00 00  
006738  3  00 00 00 0A  
006750  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,1,32,1,192,3,96,1,192,2,64,0,0,0,0,0,0,0,0,0,0,0,0
006754  3  00 00 00 00  
006758  3  00 00 01 20  
006770  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,72,0,112,0,216,0,112,0,144,0,0,0,0,0,0,0,0,0,0,0,0
006774  3  00 00 00 00  
006778  3  00 00 00 48  
006790  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,18,0,28,0,54,0,28,0,36,0,0,0,0,0,0,0,0,0,0,0,0
006794  3  00 00 00 00  
006798  3  00 00 00 12  
0067B0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,128,4,0,7,128,13,0,7,0,9,0,0,0,0,0,0,0,0,0,0,0,0
0067B4  3  00 00 00 00  
0067B8  3  00 00 80 04  
0067D0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,2,64,1,192,3,96,1,192,1,32,0,0,0,0,0,0,0,0,0,0,0,0
0067D4  3  00 00 00 00  
0067D8  3  00 00 02 40  
0067F0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,144,0,112,0,216,0,112,0,72,0,0,0,0,0,0,0,0,0,0,0,0
0067F4  3  00 00 00 00  
0067F8  3  00 00 00 90  
006810  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,36,0,28,0,54,0,28,0,18,0,0,0,0,0,0,0,0,0,0,0,0
006814  3  00 00 00 00  
006818  3  00 00 00 24  
006830  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,9,0,7,128,13,0,7,128,4,0,0,0,0,0,0,0,0,0,0,0,0
006834  3  00 00 00 00  
006838  3  00 00 00 09  
006850  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,192,5,160,1,128,8,16
006854  3  00 00 00 00  
006858  3  00 00 00 00  
006870  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,240,1,104,0,96,2,4
006874  3  00 00 00 00  
006878  3  00 00 00 00  
006890  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,60,0,90,0,24,0,129
006894  3  00 00 00 00  
006898  3  00 00 00 00  
0068B0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79,128,22,0,6,64,32
0068B4  3  00 00 00 00  
0068B8  3  00 00 00 00  
0068D0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,192,21,160,1,128,4,32
0068D4  3  00 00 00 00  
0068D8  3  00 00 00 00  
0068F0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,5,104,0,96,1,8
0068F4  3  00 00 00 00  
0068F8  3  00 00 00 00  
006910  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,1,90,0,24,0,66
006914  3  00 00 00 00  
006918  3  00 00 00 00  
006930  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,128,86,0,6,128,16
006934  3  00 00 00 00  
006938  3  00 00 00 00  
006950  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,200,5,160,1,128,8,16
006954  3  00 00 00 00  
006958  3  00 00 00 00  
006970  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,242,1,104,0,96,2,4
006974  3  00 00 00 00  
006978  3  00 00 00 00  
006990  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,60,0,90,0,24,0,129
006994  3  00 00 00 00  
006998  3  00 00 00 00  
0069B0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,15,128,22,0,6,64,32
0069B4  3  00 00 00 00  
0069B8  3  00 00 00 00  
0069D0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,192,5,168,1,128,4,32
0069D4  3  00 00 00 00  
0069D8  3  00 00 00 00  
0069F0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,1,106,0,96,1,8
0069F4  3  00 00 00 00  
0069F8  3  00 00 00 00  
006A10  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,128,90,0,24,0,66
006A14  3  00 00 00 00  
006A18  3  00 00 00 00  
006A30  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,160,22,0,6,128,16
006A34  3  00 00 00 00  
006A38  3  00 00 00 00  
006A50  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,192,26,160,55,112,106,168,221,211,74,165,32,70,48,96
006A54  3  00 00 00 00  
006A58  3  00 00 00 00  
006A70  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,112,6,168,13,220,26,170,247,116,82,169,136,17,12,24
006A74  3  00 00 00 00  
006A78  3  00 00 00 00  
006A90  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,1,170,3,119,134,170,61,221,84,170,98,4,3,6
006A94  3  00 00 00 00  
006A98  3  00 00 00 00  
006AB0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,128,106,192,221,161,170,79,119,149,42,24,129,128,193
006AB4  3  00 00 00 00  
006AB8  3  00 00 00 00  
006AD0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,192,26,160,55,112,106,168,93,211,170,165,80,134,24,192
006AD4  3  00 00 00 00  
006AD8  3  00 00 00 00  
006AF0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,112,6,168,13,220,26,170,215,116,106,169,148,33,6,48
006AF4  3  00 00 00 00  
006AF8  3  00 00 00 00  
006B10  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,1,170,3,119,134,170,53,221,90,170,101,8,1,140
006B14  3  00 00 00 00  
006B18  3  00 00 00 00  
006B30  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,128,106,192,221,161,170,77,119,150,170,25,66,0,99
006B34  3  00 00 00 00  
006B38  3  00 00 00 00  
006B50  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,192,26,160,55,112,106,168,93,211,162,133,72,38,12,48
006B54  3  00 00 00 00  
006B58  3  00 00 00 00  
006B70  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,112,6,168,13,220,26,170,215,116,104,161,146,9,3,12
006B74  3  00 00 00 00  
006B78  3  00 00 00 00  
006B90  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,1,170,3,119,134,170,53,221,90,40,100,130,0,195
006B94  3  00 00 00 00  
006B98  3  00 00 00 00  
006BB0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,128,106,192,221,161,170,77,119,22,138,153,32,192,48
006BB4  3  00 00 00 00  
006BB8  3  00 00 00 00  
006BD0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,3,64,12,176,23,104,58,187,21,229,43,6,116,48,32,16,144,0,24,0
006BD4  3  00 00 00 00  
006BD8  3  00 00 00 00  
006BF0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,208,3,44,5,218,206,174,69,121,138,193,29,12,8,4,36,0,6,0
006BF4  3  00 00 00 00  
006BF8  3  00 00 00 00  
006C10  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,52,0,203,129,118,179,171,81,94,98,176,7,67,2,1,9,0,1,128
006C14  3  00 00 00 00  
006C18  3  00 00 00 00  
006C30  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,13,192,50,160,93,236,234,148,87,24,172,193,208,64,128,2,64,0,96
006C34  3  00 00 00 00  
006C38  3  00 00 00 00  
006C50  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,7,12,12,148,51,216,44,128,91,48,102,24,156,0,216,0,160,0,96,0,144,0,24,0
006C54  3  00 00 00 00  
006C58  3  07 0C 0C 94  
006C70  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,1,195,3,37,12,246,11,32,22,204,25,134,39,0,54,0,40,0,24,0,36,0,6,0
006C74  3  00 00 00 00  
006C78  3  01 C3 03 25  
006C90  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,192,112,64,201,131,61,2,200,5,179,134,97,9,192,13,128,10,0,6,0,9,0,1,128
006C94  3  00 00 00 00  
006C98  3  C0 70 40 C9  
006CB0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,48,28,80,50,96,207,0,178,193,108,97,152,2,112,3,96,2,128,1,128,2,64,0,96
006CB4  3  00 00 00 00  
006CB8  3  30 1C 50 32  
006CD0  3  07 C0 0F E0          .byte 7,192,15,224,13,96,25,48,25,48,31,240,30,240,15,224,69,68,226,142,56,56,7,192,56,56,224,14,64,4,0,0
006CD4  3  0D 60 19 30  
006CD8  3  19 30 1F F0  
006CF0  3  01 F0 03 F8          .byte 1,240,3,248,3,88,6,76,6,76,7,252,7,188,3,248,17,81,184,163,14,14,1,240,14,14,184,3,16,1,0,0
006CF4  3  03 58 06 4C  
006CF8  3  06 4C 07 FC  
006D10  3  00 7C 00 FE          .byte 0,124,0,254,0,214,1,147,1,147,1,255,1,239,0,254,68,84,238,40,131,131,0,124,131,131,238,0,68,0,0,0
006D14  3  00 D6 01 93  
006D18  3  01 93 01 FF  
006D30  3  00 1F 80 3F          .byte 0,31,128,63,128,53,192,100,192,100,192,127,192,123,128,63,17,21,59,138,224,224,0,31,224,224,59,128,17,0,0,0
006D34  3  80 35 C0 64  
006D38  3  C0 64 C0 7F  
006D50  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
006D54  3  00 00 00 00  
006D58  3  00 00 00 00  
006D70  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
006D74  3  00 00 00 00  
006D78  3  00 00 00 00  
006D90  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
006D94  3  00 00 00 00  
006D98  3  00 00 00 00  
006DB0  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
006DB4  3  00 00 00 00  
006DB8  3  00 00 00 00  
006DD0  3               frmlst:
006DD0  3  00 03                .byte 0,3
006DD2  3  03 03                .byte 3,3
006DD4  3  06 03                .byte 6,3
006DD6  3  09 03                .byte 9,3
006DD8  3  0C 03                .byte 12,3
006DDA  3  0F 03                .byte 15,3
006DDC  3  12 03                .byte 18,3
006DDE  3  15 03                .byte 21,3
006DE0  3  18 02                .byte 24,2
006DE2  3  1A 03                .byte 26,3
006DE4  3  1D 03                .byte 29,3
006DE6  3  20 03                .byte 32,3
006DE8  3  23 03                .byte 35,3
006DEA  3  26 02                .byte 38,2
006DEC  3  28 02                .byte 40,2
006DEE  3  2A 02                .byte 42,2
006DF0  3  2C 02                .byte 44,2
006DF2  3  2E 02                .byte 46,2
006DF4  3  30 05                .byte 48,5
006DF6  3  35 02 37 00          .byte 53,2,55,0
006DFA  3               scdat:
006DFA  3  4E 02 09 00          .word 590,9,9,9,198,307,9
006DFE  3  09 00 09 00  
006E02  3  C6 00 33 01  
006E08  3  01 00 01 00          .byte 1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0
006E0C  3  01 00 01 00  
006E10  3  01 00 01 00  
006E29  3  01 00 01 00          .byte 1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,6,2,2,7,1,0,9,0,1,9,24,23
006E2D  3  01 00 01 00  
006E31  3  01 00 01 00  
006E4A  3  09 00 01 09          .byte 9,0,1,9,1,0,6,2,2,7,1,0,0,1,3,24,23,3,0,1,3,1,0,3,23,23,3,1,0,3,0,1,3
006E4E  3  01 00 06 02  
006E52  3  02 07 01 00  
006E6B  3  18 17 03 00          .byte 24,23,3,0,1,1,0,8,23,23,8,1,0,3,0,1,5,2,2,4,0,1,3,1,0,8,23,23,8,1,0,0,1
006E6F  3  01 01 00 08  
006E73  3  17 17 08 01  
006E8C  3  00 01 00 01          .byte 0,1,0,1,0,1,3,1,0,1,0,1,0,1,0,3,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,3
006E90  3  00 01 03 01  
006E94  3  00 01 00 01  
006EAD  3  00 01 00 01          .byte 0,1,0,1,0,1,0,1,3,1,0,1,0,1,0,1,0,0,1,6,255,2,5,4,1,0,9,0,1,9,1,0,5
006EB1  3  00 01 00 01  
006EB5  3  03 01 00 01  
006ECE  3  FF 02 05 07          .byte 255,2,5,7,0,1,1,0,3,0,1,0,1,0,1,0,1,3,1,0,3,0,1,0,1,0,1,0,1,3,1,0,0
006ED2  3  00 01 01 00  
006ED6  3  03 00 01 00  
006EEF  3  01 03 01 00          .byte 1,3,1,0,1,0,1,0,1,0,3,0,1,3,1,0,1,0,1,0,1,0,3,0,1,1,0,8,0,1,11,2,2
006EF3  3  01 00 01 00  
006EF7  3  01 00 03 00  
006F10  3  07 00 01 03          .byte 7,0,1,3,1,0,3,0,1,6,2,2,10,0,1,8,1,0,0,1,0,1,0,1,24,23,3,1,0,3,0,1,3
006F14  3  01 00 03 00  
006F18  3  01 06 02 02  
006F31  3  01 00 03 18          .byte 1,0,3,24,23,0,1,0,1,0,1,1,0,1,0,1,0,23,23,3,0,1,3,1,0,3,0,1,3,23,23,1,0
006F35  3  17 00 01 00  
006F39  3  01 00 01 01  
006F52  3  01 00 01 00          .byte 1,0,1,0,0,1,9,1,0,11,2,2,4,1,0,3,0,1,3,1,0,5,2,2,10,1,0,9,0,1,1,0,3
006F56  3  00 01 09 01  
006F5A  3  00 0B 02 02  
006F73  3  00 01 00 01          .byte 0,1,0,1,0,1,0,1,3,1,0,3,0,1,0,1,0,1,0,1,3,1,0,0,1,3,1,0,1,0,1,0,1
006F77  3  00 01 00 01  
006F7B  3  03 01 00 03  
006F94  3  00 03 00 01          .byte 0,3,0,1,3,1,0,1,0,1,0,1,0,3,0,1,1,0,5,255,2,5,7,0,1,8,1,0,8,0,1,6,255,2,5
006F98  3  03 01 00 01  
006F9C  3  00 01 00 01  
006FB7  3  04 01 00 00          .byte 4,1,0,0,1,0,1,0,1,0,1,3,1,0,1,0,1,0,1,0,3,0,1,0,1,0,1,0,1,1,0,1,0
006FBB  3  01 00 01 00  
006FBF  3  01 00 01 03  
006FD8  3  01 00 01 00          .byte 1,0,1,0,3,0,1,0,1,0,1,0,1,3,1,0,1,0,1,0,1,0,0,1,9,24,23,9,0,1,3,1,0
006FDC  3  03 00 01 00  
006FE0  3  01 00 01 00  
006FF9  3  06 02 02 07          .byte 6,2,2,7,1,0,3,0,1,9,24,23,9,0,1,1,0,3,23,23,3,1,0,3,0,1,3,24,23,3,0,1,3
006FFD  3  01 00 03 00  
007001  3  01 09 18 17  
00701A  3  01 00 03 17          .byte 1,0,3,23,23,3,1,0,0,1,5,2,2,4,0,1,8,1,0,8,23,23,8,1,0,8,0,1,5,2,2,4,0
00701E  3  17 03 01 00  
007022  3  00 01 05 02  
00703B  3  01 01 00 01          .byte 1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0
00703F  3  00 01 00 01  
007043  3  00 01 00 01  
007056  3  FF 01 00 FF          .byte 255,1,0,255,1,0,255,1,86
00705A  3  01 00 FF 01  
00705E  3  56           
00705F  3  FF 01 00 FF          .byte 255,1,0,255,1,0,255,1,86
007063  3  01 00 FF 01  
007067  3  56           
007068  3  FF 01 00 FF          .byte 255,1,0,255,1,0,255,1,86
00706C  3  01 00 FF 01  
007070  3  56           
007071  3  FF 17 3D 0E          .byte 255,23,61,14,255,27,10,255,23,14,14,1,255,27,10,255,23,13,14,1,1,255,27,10,255,23,13,1,1,1,255,27,10
007075  3  FF 1B 0A FF  
007079  3  17 0E 0E 01  
007092  3  FF 17 0D 01          .byte 255,23,13,1,1,1,255,27,10,255,23,13,1,1,1,255,27,10,255,23,13,1,1,1,255,27,10,255,23,13,1,1,1
007096  3  01 01 FF 1B  
00709A  3  0A FF 17 0D  
0070B3  3  FF 1B 0A FF          .byte 255,27,10,255,23,13,1,1,1,255,27,10,255,23,13,1,1,1,255,27,10,255,23,13,1,1,1,255,27,10,255,23,13
0070B7  3  17 0D 01 01  
0070BB  3  01 FF 1B 0A  
0070D4  3  01 01 01 FF          .byte 1,1,1,255,27,10,255,23,13,1,1,1,255,27,10,255,23,13,1,1,1,255,27,10,255,23,13,1,1,1,255,27,10
0070D8  3  1B 0A FF 17  
0070DC  3  0D 01 01 01  
0070F5  3  FF 17 0D 01          .byte 255,23,13,1,1,1,255,27,10,255,23,13,1,1,1,255,27,10,255,23,13,1,1,1,15,16,17,18,19,255,27,5,255,23,13
0070F9  3  01 01 FF 1B  
0070FD  3  0A FF 17 0D  
007118  3  01 01 01 17          .byte 1,1,1,23,23,25,23,23,255,27,5,255,23,13,1,1,1,23,23,25,23,23,255,27,5,255,23,6,255,26,26
00711C  3  17 19 17 17  
007120  3  FF 1B 05 FF  
007137  3  FF 17 6D 14          .byte 255,23,109,20,22,22,28,23,23,20,22,22,28,23,23,20,22,22,28,255,23,10,20,23,23,21,23,23,20,23,23,21,23,23
00713B  3  16 16 1C 17  
00713F  3  17 14 16 16  
007159  3  14 17 17 15          .byte 20,23,23,21,255,23,10,20,22,22,28,23,23,20,22,22,28,23,23,20,22,22,28,255,23,10,20,23,23,21,23,23,20
00715D  3  FF 17 0A 14  
007161  3  16 16 1C 17  
00717A  3  17 17 15 17          .byte 23,23,21,23,23,20,23,23,21,255,23,10,20,22,22,28,23,23,20,22,22,28,23,23,20,22,22,28,255,23,10,20,23,23
00717E  3  17 14 17 17  
007182  3  15 FF 17 0A  
00719C  3  15 17 17 14          .byte 21,23,23,20,23,23,21,23,23,20,23,23,21,255,23,10,20,22,22,28,23,23,20,22,22,28,23,23,20,22,22,28,255,23,10
0071A0  3  17 17 15 17  
0071A4  3  17 14 17 17  
0071BF  3  14 17 17 15          .byte 20,23,23,21,23,23,20,23,23,21,23,23,20,23,23,21,255,23,10,20,22,22,28,23,23,20,22,22,28,23,23,20,22,22
0071C3  3  17 17 14 17  
0071C7  3  17 15 17 17  
0071E1  3  1C FF 17 0A          .byte 28,255,23,10,20,23,23,21,23,23,20,23,23,21,23,23,20,23,23,21,255,23,10,20,22,22,28,23,23,20,22,22,28
0071E5  3  14 17 17 15  
0071E9  3  17 17 14 17  
007202  3  17 17 14 16          .byte 23,23,20,22,22,28,255,23,10,20,23,23,21,23,23,20,23,23,21,23,23,20,23,23,21,255,23,10,20,22,22,28,23,23
007206  3  16 1C FF 17  
00720A  3  0A 14 17 17  
007224  3  14 16 16 1C          .byte 20,22,22,28,23,23,20,22,22,28,255,23,10,20,23,23,21,23,23,20,23,23,21,23,23,20,23,23,21,255,23,10,20
007228  3  17 17 14 16  
00722C  3  16 1C FF 17  
007245  3  16 16 1C 17          .byte 22,22,28,23,23,20,22,22,28,23,23,20,22,22,28,255,23,10,20,23,23,21,23,23,20,23,23,21,23,23,20,23,23
007249  3  17 14 16 16  
00724D  3  1C 17 17 14  
007266  3  15 FF 17 53          .byte 21,255,23,83
00726A  3  FF 17 00 FF          .byte 255,23,0,255,23,0,255,23,86
00726E  3  17 00 FF 17  
007272  3  56           
007273  3               numsc:
007273  3  07                   .byte 7
007274  3               nmedat:
007274  3  00 00 B0 00          .byte 0,0,176,0,8,9,0,192,8,9,0,0,255
007278  3  08 09 00 C0  
00727C  3  08 09 00 00  
007281  3  00 00 B0 00          .byte 0,0,176,0,8,10,0,192,8,9,0,0,255
007285  3  08 0A 00 C0  
007289  3  08 09 00 00  
00728E  3  00 00 A8 00          .byte 0,0,168,0,8,10,0,0,8,10,0,192,255
007292  3  08 0A 00 00  
007296  3  08 0A 00 C0  
00729B  3  00 00 B0 00          .byte 0,0,176,0,8,10,0,0,8,11,0,96,8,10,0,192,255
00729F  3  08 0A 00 00  
0072A3  3  08 0B 00 60  
0072AC  3  07 10 00 80          .byte 7,16,0,128,7,16,0,88,7,18,160,0,255
0072B0  3  07 10 00 58  
0072B4  3  07 12 A0 00  
0072B9  3  05 00 50 60          .byte 5,0,80,96,5,9,144,48,5,9,120,96,5,9,144,144,255
0072BD  3  05 09 90 30  
0072C1  3  05 09 78 60  
0072CA  3  05 10 28 48          .byte 5,16,40,72,5,16,40,0,5,16,40,144,255
0072CE  3  05 10 28 00  
0072D2  3  05 10 28 90  
0072D7  3               NUMOBJ = 9
0072D7  3               objdta:
0072D7  3  00 00 3F FC          .byte 0,0,63,252,95,250,120,30,112,14,113,142,115,206,127,206,127,142,126,30,126,126,127,254,126,126,94,122,63,252,0,0,0,24,24,0,24,24
0072DB  3  5F FA 78 1E  
0072DF  3  70 0E 71 8E  
0072FD  3  00 00 3F FC          .byte 0,0,63,252,95,250,120,30,112,14,113,142,115,206,127,206,127,142,126,30,126,126,127,254,126,126,94,122,63,252,0,0,0,0,0,0,0,0
007301  3  5F FA 78 1E  
007305  3  70 0E 71 8E  
007323  3  00 00 3F FC          .byte 0,0,63,252,95,250,120,30,112,14,113,142,115,206,127,206,127,142,126,30,126,126,127,254,126,126,94,122,63,252,0,0,0,0,0,0,0,0
007327  3  5F FA 78 1E  
00732B  3  70 0E 71 8E  
007349  3  00 00 3F FC          .byte 0,0,63,252,95,250,120,30,112,14,113,142,115,206,127,206,127,142,126,30,126,126,127,254,126,126,94,122,63,252,0,0,0,0,0,0,0,0
00734D  3  5F FA 78 1E  
007351  3  70 0E 71 8E  
00736F  3  00 00 3F FC          .byte 0,0,63,252,95,250,120,30,112,14,113,142,115,206,127,206,127,142,126,30,126,126,127,254,126,126,94,122,63,252,0,0,0,0,0,0,0,0
007373  3  5F FA 78 1E  
007377  3  70 0E 71 8E  
007395  3  00 00 3F FC          .byte 0,0,63,252,95,250,120,30,112,14,113,142,115,206,127,206,127,142,126,30,126,126,127,254,126,126,94,122,63,252,0,0,0,0,0,0,0,0
007399  3  5F FA 78 1E  
00739D  3  70 0E 71 8E  
0073BB  3  00 00 3F FC          .byte 0,0,63,252,95,250,120,30,112,14,113,142,115,206,127,206,127,142,126,30,126,126,127,254,126,126,94,122,63,252,0,0,0,0,0,0,0,0
0073BF  3  5F FA 78 1E  
0073C3  3  70 0E 71 8E  
0073E1  3  00 00 3F FC          .byte 0,0,63,252,95,250,120,30,112,14,113,142,115,206,127,206,127,142,126,30,126,126,127,254,126,126,94,122,63,252,0,0,0,0,0,0,0,0
0073E5  3  5F FA 78 1E  
0073E9  3  70 0E 71 8E  
007407  3  00 00 00 00          .byte 0,0,0,0,1,0,17,16,9,32,0,0,3,128,58,184,3,128,0,0,9,32,17,16,1,0,0,0,0,0,0,0,255,0,0,255,0,0
00740B  3  01 00 11 10  
00740F  3  09 20 00 00  
00742D  3               font:
00742D  3  9E 87 C9 C9          .byte 158,135,201,201,201,201,201,0
007431  3  C9 C9 C9 00  
007435  3  40 9C 84 88          .byte 64,156,132,136,144,156,64,0
007439  3  90 9C 40 00  
00743D  3  00 EE 4A 4A          .byte 0,238,74,74,74,78,0,0
007441  3  4A 4E 00 00  
007445  3  00 75 45 47          .byte 0,117,69,71,69,117,0,0
007449  3  45 75 00 00  
00744D  3  00 77 55 75          .byte 0,119,85,117,85,85,0,0
007451  3  55 55 00 00  
007455  3  00 77 44 47          .byte 0,119,68,71,84,119,0,0
007459  3  54 77 00 00  
00745D  3  40 20 20 20          .byte 64,32,32,32,32,32,64,0
007461  3  20 20 40 00  
007465  3  00 08 10 00          .byte 0,8,16,0,0,0,0,0
007469  3  00 00 00 00  
00746D  3  EE 8A EE 28          .byte 238,138,238,40,232,0,0,0
007471  3  E8 00 00 00  
007475  3  20 10 10 10          .byte 32,16,16,16,16,16,16,32
007479  3  10 10 10 20  
00747D  3  00 00 00 00          .byte 0,0,0,0,0,0,0,0
007481  3  00 00 00 00  
007485  3  00 00 08 08          .byte 0,0,8,8,62,8,8,0
007489  3  3E 08 08 00  
00748D  3  00 00 00 00          .byte 0,0,0,0,0,8,8,16
007491  3  00 08 08 10  
007495  3  00 00 00 00          .byte 0,0,0,0,62,0,0,0
007499  3  3E 00 00 00  
00749D  3  00 00 00 00          .byte 0,0,0,0,0,24,24,0
0074A1  3  00 18 18 00  
0074A5  3  00 00 02 04          .byte 0,0,2,4,8,16,32,0
0074A9  3  08 10 20 00  
0074AD  3  00 7E 42 42          .byte 0,126,66,66,70,70,126,0
0074B1  3  46 46 7E 00  
0074B5  3  00 18 08 08          .byte 0,24,8,8,24,24,24,0
0074B9  3  18 18 18 00  
0074BD  3  00 7E 42 02          .byte 0,126,66,2,126,96,126,0
0074C1  3  7E 60 7E 00  
0074C5  3  00 7C 44 1E          .byte 0,124,68,30,6,70,126,0
0074C9  3  06 46 7E 00  
0074CD  3  00 7C 44 44          .byte 0,124,68,68,68,126,12,0
0074D1  3  44 7E 0C 00  
0074D5  3  00 7E 40 7E          .byte 0,126,64,126,6,70,126,0
0074D9  3  06 46 7E 00  
0074DD  3  00 7E 40 7E          .byte 0,126,64,126,70,70,126,0
0074E1  3  46 46 7E 00  
0074E5  3  00 7C 04 04          .byte 0,124,4,4,12,12,12,0
0074E9  3  0C 0C 0C 00  
0074ED  3  00 3C 24 7E          .byte 0,60,36,126,70,70,126,0
0074F1  3  46 46 7E 00  
0074F5  3  00 7E 42 42          .byte 0,126,66,66,126,6,6,0
0074F9  3  7E 06 06 00  
0074FD  3  00 00 00 10          .byte 0,0,0,16,0,0,16,0
007501  3  00 00 10 00  
007505  3  00 00 10 00          .byte 0,0,16,0,0,16,16,32
007509  3  00 10 10 20  
00750D  3  00 00 04 08          .byte 0,0,4,8,16,8,4,0
007511  3  10 08 04 00  
007515  3  00 00 00 3E          .byte 0,0,0,62,0,62,0,0
007519  3  00 3E 00 00  
00751D  3  00 00 10 08          .byte 0,0,16,8,4,8,16,0
007521  3  04 08 10 00  
007525  3  00 7E 02 3E          .byte 0,126,2,62,48,0,48,0
007529  3  30 00 30 00  
00752D  3  00 3C 4A 56          .byte 0,60,74,86,94,64,60,0
007531  3  5E 40 3C 00  
007535  3  00 3C 24 24          .byte 0,60,36,36,126,98,98,0
007539  3  7E 62 62 00  
00753D  3  00 7C 44 7E          .byte 0,124,68,126,98,98,126,0
007541  3  62 62 7E 00  
007545  3  00 7E 42 40          .byte 0,126,66,64,96,98,126,0
007549  3  60 62 7E 00  
00754D  3  00 7E 42 42          .byte 0,126,66,66,98,98,126,0
007551  3  62 62 7E 00  
007555  3  00 7E 40 7C          .byte 0,126,64,124,96,96,126,0
007559  3  60 60 7E 00  
00755D  3  00 7E 40 7C          .byte 0,126,64,124,96,96,96,0
007561  3  60 60 60 00  
007565  3  00 7E 42 40          .byte 0,126,66,64,102,98,126,0
007569  3  66 62 7E 00  
00756D  3  00 42 42 7E          .byte 0,66,66,126,98,98,98,0
007571  3  62 62 62 00  
007575  3  00 08 08 08          .byte 0,8,8,8,24,24,24,0
007579  3  18 18 18 00  
00757D  3  00 04 04 04          .byte 0,4,4,4,70,70,124,0
007581  3  46 46 7C 00  
007585  3  00 44 44 7E          .byte 0,68,68,126,98,98,98,0
007589  3  62 62 62 00  
00758D  3  00 20 20 20          .byte 0,32,32,32,48,48,62,0
007591  3  30 30 3E 00  
007595  3  00 7E 4A 4A          .byte 0,126,74,74,106,106,106,0
007599  3  6A 6A 6A 00  
00759D  3  00 7E 42 42          .byte 0,126,66,66,98,98,98,0
0075A1  3  62 62 62 00  
0075A5  3  00 7E 46 42          .byte 0,126,70,66,66,66,126,0
0075A9  3  42 42 7E 00  
0075AD  3  00 7E 42 42          .byte 0,126,66,66,126,96,96,0
0075B1  3  7E 60 60 00  
0075B5  3  00 7E 42 42          .byte 0,126,66,66,66,78,126,0
0075B9  3  42 4E 7E 00  
0075BD  3  00 7C 44 44          .byte 0,124,68,68,126,98,98,0
0075C1  3  7E 62 62 00  
0075C5  3  00 7E 40 7E          .byte 0,126,64,126,6,70,126,0
0075C9  3  06 46 7E 00  
0075CD  3  00 7C 10 10          .byte 0,124,16,16,24,24,24,0
0075D1  3  18 18 18 00  
0075D5  3  00 42 42 42          .byte 0,66,66,66,98,98,126,0
0075D9  3  62 62 7E 00  
0075DD  3  00 62 62 62          .byte 0,98,98,98,102,36,60,0
0075E1  3  66 24 3C 00  
0075E5  3  00 4A 4A 4A          .byte 0,74,74,74,106,106,126,0
0075E9  3  6A 6A 7E 00  
0075ED  3  00 42 42 3C          .byte 0,66,66,60,98,98,98,0
0075F1  3  62 62 62 00  
0075F5  3  00 42 42 7E          .byte 0,66,66,126,24,24,24,0
0075F9  3  18 18 18 00  
0075FD  3  00 7E 06 3C          .byte 0,126,6,60,112,96,126,0
007601  3  70 60 7E 00  
007605  3  CD E8 7B 3A          .byte 205,232,123,58,48,125,119,201
007609  3  30 7D 77 C9  
00760D  3  CD C8 EB 7E          .byte 205,200,235,126,50,48,125,201
007611  3  32 30 7D C9  
007615  3  06 00 3A 2F          .byte 6,0,58,47,125,71,33,35
007619  3  7D 47 21 23  
00761D  3  F8 09 C9 FC          .byte 248,9,201,252,48,48,48,0
007621  3  30 30 30 00  
007625  3  00 00 00 00          .byte 0,0,0,0,0,0,0,255
007629  3  00 00 00 FF  
00762D  3  00 3A 2D 7D          .byte 0,58,45,125,103,58,46,125
007631  3  67 3A 2E 7D  
007635  3  6F 11 01 00          .byte 111,17,1,0,205,181,3,201
007639  3  CD B5 03 C9  
00763D  3  DA 92 D2 92          .byte 218,146,210,146,218,0,0,0
007641  3  DA 00 00 00  
007645  3  E8 A8 E8 A8          .byte 232,168,232,168,172,0,0,0
007649  3  AC 00 00 00  
00764D  3  EA 4A 4E 4A          .byte 234,74,78,74,74,0,0,0
007651  3  4A 00 00 00  
007655  3  A7 42 42 42          .byte 167,66,66,66,162,0,0,0
007659  3  A2 00 00 00  
00765D  3  73 52 52 52          .byte 115,82,82,82,115,0,0,0
007661  3  73 00 00 00  
007665  3  0E 88 8E 82          .byte 14,136,142,130,46,0,0,0
007669  3  2E 00 00 00  
00766D  3  EE AA EE A8          .byte 238,170,238,168,168,0,0,0
007671  3  A8 00 00 00  
007675  3  95 95 F5 95          .byte 149,149,245,149,149,0,0,0
007679  3  95 00 00 00  
00767D  3  B8 29 B3 29          .byte 184,41,179,41,168,0,0,0
007681  3  A8 00 00 00  
007685  3  31 21 A1 21          .byte 49,33,161,33,53,0,0,0
007689  3  35 00 00 00  
00768D  3  5D 55 D5 55          .byte 93,85,213,85,93,0,0,0
007691  3  5D 00 00 00  
007695  3  17 15 57 55          .byte 23,21,87,85,245,0,0,0
007699  3  F5 00 00 00  
00769D  3  76 55 65 55          .byte 118,85,101,85,86,0,0,0
0076A1  3  56 00 00 00  
0076A5  3  EE 3A 2F 7D          .byte 238,58,47,125,50,73,175,201
0076A9  3  32 49 AF C9  
0076AD  3  AD 06 09 77          .byte 173,6,9,119,35,16,252,201
0076B1  3  23 10 FC C9  
0076B5  3  30 30 30 30          .byte 48,48,48,48,48,48,205,153
0076B9  3  30 30 CD 99  
0076BD  3  7C C9 CD 99          .byte 124,201,205,153,124,205,185,124
0076C1  3  7C CD B9 7C  
0076C5  3  C9 06 05 21          .byte 201,6,5,33,176,91,17,192
0076C9  3  B0 5B 11 C0  
0076CD  3  86 AF 1A BE          .byte 134,175,26,190,202,171,124,210
0076D1  3  CA AB 7C D2  
0076D5  3  B0 7C C9 2C          .byte 176,124,201,44,28,16,242,201
0076D9  3  1C 10 F2 C9  
0076DD  3  77 2C 1C 1A          .byte 119,44,28,26,16,250,195,171
0076E1  3  10 FA C3 AB  
0076E5  3  7C 3E 02 CD          .byte 124,62,2,205,1,22,62,22
0076E9  3  01 16 3E 16  
0076ED  3  D7 3A 31 7D          .byte 215,58,49,125,215,58,50,125
0076F1  3  D7 3A 32 7D  
0076F5  3  D7 06 05 11          .byte 215,6,5,17,176,91,26,215
0076F9  3  B0 5B 1A D7  
0076FD  3  13 10 FB C9          .byte 19,16,251,201,124,96,124,0
007701  3  7C 60 7C 00  
007705  3  EE 3A 2A 7D          .byte 238,58,42,125,50,5,125,201
007709  3  32 05 7D C9  
00770D  3  00 08 08 08          .byte 0,8,8,8,8,8,8,0
007711  3  08 08 08 00  
007715  3  00 70 10 1C          .byte 0,112,16,28,16,16,112,0
007719  3  10 10 70 00  
00771D  3  00 14 28 00          .byte 0,20,40,0,0,0,0,0
007721  3  00 00 00 00  
007725  3  7E 81 BD A1          .byte 126,129,189,161,161,189,129,126
007729  3  A1 BD 81 7E  
00772D  3               
00772D  1               
00772D  2               ;------------------------------------------------------
00772D  2               ; z80.asm
00772D  2               ; spectrum stuff
00772D  2               ; adresses
00772D  2               
00772D  2               ;ws	 = $60
00772D  2               
00772D  2               ;z80_f	 = ws+$00
00772D  2               ;z80_a	 = ws+$01
00772D  2               ;z80_af	 = z80_f
00772D  2               
00772D  2               ;z80_c	 = ws+$02
00772D  2               ;z80_b	 = ws+$03
00772D  2               ;z80_bc	 = z80_c
00772D  2               
00772D  2               ;z80_e	 = ws+$04
00772D  2               ;z80_d	 = ws+$05
00772D  2               ;z80_de	 = z80_e
00772D  2               
00772D  2               ;z80_l	 = ws+$06
00772D  2               ;z80_h	 = ws+$07
00772D  2               ;z80_hl	 = z80_l
00772D  2               
00772D  2               ;z80_x    = ws+$08
00772D  2               ;z80_i    = ws+$09
00772D  2               ;z80_ix	 = z80_x
00772D  2               
00772D  2               ;z80_iy	 = ws+$0a
00772D  2               
00772D  2               ;z80_fp	 = ws+$0c
00772D  2               ;z80_ap	 = ws+$0d
00772D  2               
00772D  2               ;z80_cp	 = ws+$0e
00772D  2               ;z80_bp	 = ws+$0f
00772D  2               ;z80_bcp = z80_cp
00772D  2               
00772D  2               ;z80_ep	 = ws+$10
00772D  2               ;z80_dp	 = ws+$11
00772D  2               ;z80_dep = z80_ep
00772D  2               
00772D  2               ;z80_lp	 = ws+$12
00772D  2               ;z80_hp	 = ws+$13
00772D  2               ;z80_hlp = z80_lp
00772D  2               
00772D  2               ;z80_sp   = ws+$14
00772D  2               
00772D  2               ;z80_reg0 = ws+$16
00772D  2               ;z80_reg1 = ws+$17
00772D  2               ;z80_reg2 = ws+$18
00772D  2               ;z80_reg3 = ws+$19
00772D  2               
00772D  2               ;z80_r	 = ws+$1a
00772D  2               
00772D  2               ; Contains seperatly 1 bit set
00772D  2               ; _BEEB this is not safe memory to use as required by MOS
00772D  2               
00772D  2               _bitmem0	= $f8
00772D  2               _bitmem1	= $f9
00772D  2               _bitmem2	= $fa
00772D  2               _bitmem3	= $fb
00772D  2               _bitmem4	= $fc
00772D  2               _bitmem5	= $fd
00772D  2               _bitmem6	= $fe
00772D  2               _bitmem7	= $ff
00772D  2               	
00772D  2               ; constants	
00772D  2               _bitvalue0	= $01	
00772D  2               _bitvalue1	= $02	
00772D  2               _bitvalue2	= $04	
00772D  2               _bitvalue3	= $08	
00772D  2               _bitvalue4	= $10	
00772D  2               _bitvalue5	= $20	
00772D  2               _bitvalue6	= $40	
00772D  2               _bitvalue7	= $80	
00772D  2               
00772D  2               _notbitvalue0	= $fe	
00772D  2               _notbitvalue1	= $fd	
00772D  2               _notbitvalue2	= $fb	
00772D  2               _notbitvalue3	= $f7	
00772D  2               _notbitvalue4	= $ef	
00772D  2               _notbitvalue5	= $df	
00772D  2               _notbitvalue6	= $bf	
00772D  2               _notbitvalue7	= $7f	
00772D  2               
00772D  2               
00772D  2               ;add_hl_bc:
00772D  2               ;		lda z80_l
00772D  2               ;		clc
00772D  2               ;		adc z80_c
00772D  2               ;		sta z80_l
00772D  2               ;		lda z80_h
00772D  2               ;		adc z80_b
00772D  2               ;		sta z80_h
00772D  2               ;		rts
00772D  2               ;		
00772D  2               ;add_ix_de:
00772D  2               ;		lda z80_ix
00772D  2               ;		clc
00772D  2               ;		adc z80_e
00772D  2               ;		sta z80_ix
00772D  2               ;		lda z80_ix+1
00772D  2               ;		adc z80_d
00772D  2               ;		sta z80_ix+1
00772D  2               ;		rts
00772D  2               ;		
00772D  2               ;add_iy_de:
00772D  2               ;		lda z80_iy
00772D  2               ;		clc
00772D  2               ;		adc z80_e
00772D  2               ;		sta z80_iy
00772D  2               ;		lda z80_iy+1
00772D  2               ;		adc z80_d
00772D  2               ;		sta z80_iy+1
00772D  2               ;		rts
00772D  2               ;		
00772D  2               ;add_hl_de:
00772D  2               ;		lda z80_l
00772D  2               ;		clc
00772D  2               ;		adc z80_e
00772D  2               ;		sta z80_l
00772D  2               ;		lda z80_h
00772D  2               ;		adc z80_d
00772D  2               ;		sta z80_h
00772D  2               ;		rts
00772D  2               ;
00772D  2               ;add_ix_bc:
00772D  2               ;		lda z80_ix
00772D  2               ;		clc
00772D  2               ;		adc z80_c
00772D  2               ;		sta z80_ix
00772D  2               ;		lda z80_ix+1
00772D  2               ;		adc z80_b
00772D  2               ;		sta z80_ix+1
00772D  2               ;		rts
00772D  2               ;		
00772D  2               ;add_iy_bc:
00772D  2               ;		lda z80_iy
00772D  2               ;		clc
00772D  2               ;		adc z80_c
00772D  2               ;		sta z80_iy
00772D  2               ;		lda z80_iy+1
00772D  2               ;		adc z80_b
00772D  2               ;		sta z80_iy+1
00772D  2               ;		rts
00772D  2               ;		
00772D  2               ;sbc_hl_de:
00772D  2               ;		lda z80_l
00772D  2               ;		sbc z80_e
00772D  2               ;		sta z80_l
00772D  2               ;		lda z80_h
00772D  2               ;		sbc z80_d
00772D  2               ;		sta z80_h
00772D  2               ;		rts
00772D  2               ;
00772D  2               ;sbc_hl_bc:
00772D  2               ;		lda z80_l
00772D  2               ;		sbc z80_c
00772D  2               ;		sta z80_l
00772D  2               ;		lda z80_h
00772D  2               ;		sbc z80_b
00772D  2               ;		sta z80_h
00772D  2               ;		rts
00772D  2               ;
00772D  2               ;cmp_hl_bc:
00772D  2               ;		lda z80_l
00772D  2               ;		cmp z80_c
00772D  2               ;		bne cmp_hl_bc_end
00772D  2               ;		lda z80_h
00772D  2               ;		cmp z80_b
00772D  2               ;cmp_hl_bc_end:
00772D  2               ;		rts
00772D  2               ;		
00772D  2               ;cmp_iy_ix:
00772D  2               ;		lda z80_iy
00772D  2               ;		cmp z80_ix
00772D  2               ;		bne cmp_iy_ix_end
00772D  2               ;		lda z80_iy+1
00772D  2               ;		cmp z80_ix+1
00772D  2               ;cmp_iy_ix_end:
00772D  2               ;		rts
00772D  2               ;		
00772D  2               ;dec_hl:
00772D  2               ;		lda z80_l
00772D  2               ;		bne dec_hl_no_dec_h
00772D  2               ;		dec z80_h
00772D  2               ;dec_hl_no_dec_h:
00772D  2               ;		dec z80_l
00772D  2               ;		rts
00772D  2               ;	
00772D  2               ;dec_ix:
00772D  2               ;		lda z80_ix
00772D  2               ;		bne dec_ix_no_dec_h
00772D  2               ;		dec z80_ix+1
00772D  2               ;dec_ix_no_dec_h:
00772D  2               ;		dec z80_ix
00772D  2               ;		rts
00772D  2               ;		
00772D  2               ;dec_bc:	
00772D  2               ;		lda z80_c
00772D  2               ;		bne dec_bc_no_dec_b
00772D  2               ;		dec z80_b
00772D  2               ;dec_bc_no_dec_b:
00772D  2               ;		dec z80_c
00772D  2               ;		rts
00772D  2               ;	
00772D  2               ;dec_de:
00772D  2               ;		lda z80_e
00772D  2               ;		bne dec_de_no_dec_d
00772D  2               ;		dec z80_d
00772D  2               ;dec_de_no_dec_d:
00772D  2               ;		dec z80_e
00772D  2               ;		rts
00772D  2               ;		
00772D  2               ;ex_af_afs:
00772D  2               ;	rts
00772D  2               ;ex_de_hl:
00772D  2               ;		lda z80_e
00772D  2               ;		ldx z80_l
00772D  2               ;		stx z80_e
00772D  2               ;		sta z80_l
00772D  2               ;		lda z80_d
00772D  2               ;		ldx z80_h
00772D  2               ;		stx z80_d
00772D  2               ;		sta z80_h
00772D  2               ;		rts
00772D  2               ;
00772D  2               exx:
00772D  2  A5 rr        		lda z80_c
00772F  2  A4 rr        		ldy z80_cp
007731  2  84 rr        		sty z80_c
007733  2  85 rr        		sta z80_cp
007735  2  A5 rr        		lda z80_b
007737  2  A4 rr        		ldy z80_bp
007739  2  84 rr        		sty z80_b
00773B  2  85 rr        		sta z80_bp
00773D  2  A5 rr        		lda z80_e
00773F  2  A4 rr        		ldy z80_ep
007741  2  84 rr        		sty z80_e
007743  2  85 rr        		sta z80_ep
007745  2  A5 rr        		lda z80_d
007747  2  A4 rr        		ldy z80_dp
007749  2  84 rr        		sty z80_d
00774B  2  85 rr        		sta z80_dp		
00774D  2  A5 rr        		lda scraddr
00774F  2  A4 rr        		ldy z80_lp
007751  2  84 rr        		sty scraddr
007753  2  85 rr        		sta z80_lp
007755  2  A5 rr        		lda scraddr+1
007757  2  A4 rr        		ldy z80_hp
007759  2  84 rr        		sty scraddr+1
00775B  2  85 rr        		sta z80_hp
00775D  2  60           		rts
00775E  2               		
00775E  2               ;ex_sp_hl:
00775E  2               ;		tsx
00775E  2               ;		lda $0103,x
00775E  2               ;		ldy z80_h
00775E  2               ;		sta z80_h
00775E  2               ;		tya
00775E  2               ;		sta $0103,x
00775E  2               ;		lda $0104,x
00775E  2               ;		ldy z80_l
00775E  2               ;		sta z80_l
00775E  2               ;		tya
00775E  2               ;		sta $104,x
00775E  2               ;		rts
00775E  2               ;		
00775E  2               ;ldi:
00775E  2               ;	rts
00775E  2               ;ldir:
00775E  2               ;		ldy #$00
00775E  2               ;		ldx z80_b
00775E  2               ;		beq ldir_last_page
00775E  2               ;ldir_loop:		
00775E  2               ;		lda (z80_hl),y
00775E  2               ;		sta (z80_de),y
00775E  2               ;		iny
00775E  2               ;		bne ldir_loop
00775E  2               ;		inc z80_h
00775E  2               ;		inc z80_d
00775E  2               ;		dex
00775E  2               ;		bne ldir_loop
00775E  2               ;ldir_last_page:
00775E  2               ;		lda z80_c
00775E  2               ;		beq ldir_end
00775E  2               ;ldir_last_page_loop:		
00775E  2               ;		lda (z80_hl),y
00775E  2               ;		sta (z80_de),y
00775E  2               ;		iny
00775E  2               ;		cpy z80_c
00775E  2               ;		bne ldir_last_page_loop
00775E  2               ;ldir_end:		
00775E  2               ;		stx z80_c
00775E  2               ;		stx z80_b
00775E  2               ;		tya
00775E  2               ;		clc
00775E  2               ;		adc z80_l
00775E  2               ;		sta z80_l
00775E  2               ;		bcc *+4
00775E  2               ;		inc z80_h
00775E  2               ;		tya
00775E  2               ;		clc
00775E  2               ;		adc z80_e
00775E  2               ;		sta z80_e
00775E  2               ;		bcc *+4
00775E  2               ;		inc z80_d
00775E  2               ;		rts
00775E  2               ;		
00775E  2               ;lddr:		ldy #$00
00775E  2               ;lddr_loop:
00775E  2               ;		lda (z80_hl),y
00775E  2               ;		sta (z80_de),y
00775E  2               ;		jsr dec_hl
00775E  2               ;		jsr dec_de
00775E  2               ;		jsr dec_bc
00775E  2               ;		lda z80_b
00775E  2               ;		ora z80_c
00775E  2               ;		bne lddr_loop
00775E  2               ;		rts
00775E  2               ;ei:
00775E  2               ;		rts
00775E  2               ;di:
00775E  2               ;		rts
00775E  2               		
00775E  2               ;-------------------------------------------------------------
00775E  2               ; Set bits in bitmem
00775E  2               ;-------------------------------------------------------------
00775E  2               
00775E  2               .if 0
00775E  2               z80_init:
00775E  2               	ldx #$00
00775E  2               	lda #$01
00775E  2               z80_init_loop:		
00775E  2               	sta _bitmem0,x
00775E  2               	inx
00775E  2               	asl a
00775E  2               	bne z80_init_loop
00775E  2               	rts
00775E  2               .endif
00775E  2               
00775E  2               push_af:
00775E  2               push_bc:
00775E  2               push_de:
00775E  2               push_hl:
00775E  2               
00775E  2               pop_af:
00775E  2               pop_bc:
00775E  2               pop_de:
00775E  2               pop_ix:
00775E  2               pop_hl:
00775E  2               
00775E  2               add_hl_hl:
00775E  2               
00775E  2               inc_bc:
00775E  2               inc_de:
00775E  2               inc_hl:
00775E  2               inc_ix:
00775E  2               inc_sp:
00775E  2               
00775E  2               cpir:
00775E  2               
00775E  2               ex_af_af:
00775E  2               ;	rts
00775E  2               
00775E  1               eind_asm:
00775E  1               
00775E  1               relocate:
00775E  1               ; Issue *TAPE otherwise DFS goes mental that we've overwritten workspace from &E00 - &1100
00775E  1               
00775E  1  A9 8C            lda #$8C
007760  1  A2 0C            ldx #$0C
007762  1  A0 00            ldy #$00
007764  1  20 F4 FF         jsr OSBYTE					; *FX &8C,0,0 - *TAPE 1200
007767  1               
007767  1               ; Relocate all code down to &E00
007767  1  A2 6A        	ldx #>(eind_asm - start_asm) + 1
007769  1  A0 00        	ldy #0
00776B  1               reloop:
00776B  1  B9 00 12     	lda load_address, y
00776E  1  99 00 0E     	sta asm_code, y
007771  1  C8           	iny
007772  1  D0 F7        	bne reloop
007774  1  EE 6D 7B     	inc reloop + 2 + load_address - asm_code
007777  1  EE 70 7B     	inc reloop + 5 + load_address - asm_code
00777A  1  CA           	dex
00777B  1  D0 EE        	bne reloop
00777D  1  4C 03 0E     	jmp exec_game
00777D  1               
